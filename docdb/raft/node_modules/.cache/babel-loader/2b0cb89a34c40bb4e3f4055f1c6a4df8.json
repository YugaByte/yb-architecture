{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/code/yb-architecture/animations/src/RaftReadOperationAnimation.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\nimport { SSL_OP_EPHEMERAL_RSA } from 'constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nvar ANIMATION_STATE_EXPLAIN_PROTOCOL = 'ANIMATION_STATE_EXPLAIN_PROTOCOL';\nvar ANIMATION_STATE_LEADER_ELECTION = 'ANIMATION_STATE_LEADER_ELECTION';\nvar ANIMATION_STATE_NODE_DATA = 'ANIMATION_STATE_NODE_DATA';\nvar ANIMATION_STATE_CLIENT_INTRODUCED = 'ANIMATION_STATE_CLIENT_INTRODUCED';\nvar ANIMATION_STATE_PERFORMED_READ_ON_LEADER = \"ANIMATION_STATE_PERFORMED_READ_ON_LEADER\";\nvar ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS = \"ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS\";\nvar SET_VALUE1 = \"V1\";\nvar SET_VALUE2 = \"V2\";\nexport var RaftReadOperationAnimation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RaftReadOperationAnimation, _Component);\n\n  function RaftReadOperationAnimation(props) {\n    var _this;\n\n    _classCallCheck(this, RaftReadOperationAnimation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RaftReadOperationAnimation).call(this, props));\n    _this.animationState = Constants.ANIMATION_STATE_INITIAL;\n    _this.state = {\n      animationFinished: false,\n      previousEnabled: true\n    };\n    return _this;\n  }\n\n  _createClass(RaftReadOperationAnimation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mainTextSect = document.getElementById('center-message-text');\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {}\n  }, {\n    key: \"resume\",\n    value: function resume() {}\n  }, {\n    key: \"onNext\",\n    value: function onNext() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.onNextInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onNextInternal\",\n    value: function onNextInternal(resolve, reject) {\n      var _this3 = this;\n\n      switch (this.animationState) {\n        case Constants.ANIMATION_STATE_INITIAL:\n          {\n            //////////////////// initial setup ////////////////////\n            // make Node C the Leader\n            // var nodeC = document.getElementById('node-c-circle');\n            // nodeC.classList.add('leader-node');\n            // hide all outer circles (TODO: revisit this approach)\n            var nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\n            for (var i = 0; i < nodeOuterCircles.length; i++) {\n              HelperFunctions.hideElement(nodeOuterCircles[i]);\n            }\n\n            HelperFunctions.showElement(this.mainTextSect);\n            this.changeMainText('Letâ€™s say we have a 3-node raft group.');\n            this.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL;\n            resolve({\n              animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_EXPLAIN_PROTOCOL:\n          {\n            this.changeMainText('Nodes would have performed leader election..', function () {\n              HelperFunctions.showElement(document.getElementById('node-a-extra-text'));\n              HelperFunctions.showElement(document.getElementById('node-b-extra-text'));\n              HelperFunctions.showElement(document.getElementById('node-c-extra-text'));\n            });\n            this.animationState = ANIMATION_STATE_LEADER_ELECTION;\n            resolve({\n              animationState: ANIMATION_STATE_LEADER_ELECTION,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_ELECTION:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n            HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n            HelperFunctions.hideElement(document.getElementById('node-c-extra-text'));\n            this.changeMainText('Node C is current raft leader, denoted by black border.', function () {\n              document.getElementById('node-c-circle').classList.add('leader-node');\n              HelperFunctions.showElement(document.getElementById('node-a-term-text'));\n              HelperFunctions.showElement(document.getElementById('node-b-term-text'));\n              HelperFunctions.showElement(document.getElementById('node-c-term-text'));\n            });\n            this.animationState = ANIMATION_STATE_NODE_DATA;\n            resolve({\n              animationState: ANIMATION_STATE_NODE_DATA,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NODE_DATA:\n          {\n            this.changeMainText('Assume all nodes have data: <br />(key,value) = (k, V1)', function () {\n              // Just in case, hide the extra text in case user clicked thru too quickly\n              HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n              HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n              HelperFunctions.hideElement(document.getElementById('node-c-extra-text'));\n              HelperFunctions.showElement(document.getElementById('node-a-text-highlight'));\n              HelperFunctions.showElement(document.getElementById('node-a-value-text-rect'));\n              HelperFunctions.showElement(document.getElementById('node-b-text-highlight'));\n              HelperFunctions.showElement(document.getElementById('node-b-value-text-rect'));\n              HelperFunctions.showElement(document.getElementById('node-c-text-highlight'));\n              HelperFunctions.showElement(document.getElementById('node-c-value-text-rect'));\n            });\n            this.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n            resolve({\n              animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_INTRODUCED:\n          {\n            //////////////////////////////////////////////////////\n            var introduceClientAnimation = HelperFunctions.introduceClient('');\n            this.changeMainText('');\n            introduceClientAnimation.finished.then(function () {\n              HelperFunctions.hideElement(document.getElementById('node-a-text-highlight'));\n              HelperFunctions.hideElement(document.getElementById('node-b-text-highlight'));\n              HelperFunctions.hideElement(document.getElementById('node-c-text-highlight'));\n              HelperFunctions.showElement(document.getElementById('client-message'));\n              var statusElem = document.getElementById('client-message-status');\n              document.getElementById('client-message-status-text1');\n              var contentLine1 = {\n                index: 0,\n                str: 'SELECT value'\n              };\n              var contentLine2 = {\n                index: 0,\n                str: 'FROM T WHERE key = k'\n              };\n              var statusTextLine1 = document.getElementById('client-message-status-text1');\n              var statusTextLine2 = document.getElementById('client-message-status-text2');\n              HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n              HelperFunctions.showElement(statusElem);\n              anime({\n                targets: contentLine1,\n                index: contentLine1.str.length,\n                easing: 'linear',\n                duration: 600,\n                update: function update() {\n                  statusTextLine1.innerHTML = contentLine1.str.substr(0, contentLine1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: contentLine2,\n                    index: contentLine2.str.length,\n                    easing: 'linear',\n                    duration: 900,\n                    update: function update() {\n                      statusTextLine2.innerHTML = contentLine2.str.substr(0, contentLine2.index);\n                    },\n                    complete: function complete() {\n                      return HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false);\n                    }\n                  });\n                }\n              });\n              _this3.animationState = ANIMATION_STATE_PERFORMED_READ_ON_LEADER;\n              resolve({\n                animationState: ANIMATION_STATE_PERFORMED_READ_ON_LEADER,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_PERFORMED_READ_ON_LEADER:\n          {\n            // Leader contacts followers to obtain a consensus on current value\n            HelperFunctions.hideElement(document.getElementById('client-message-status'));\n            HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n            var statusElem = document.getElementById('node-c-message-status');\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble'));\n            HelperFunctions.showElement(statusElem);\n            var contentLine1 = {\n              index: 0,\n              str: 'Per raft, leader should'\n            };\n            var contentLine2 = {\n              index: 0,\n              str: 'obtain majority heartbeat.'\n            };\n            var leaderTextLine1 = document.getElementById('node-c-message-status-text1');\n            var leaderTextLine2 = document.getElementById('node-c-message-status-text2');\n            anime({\n              targets: contentLine1,\n              index: contentLine1.str.length,\n              easing: 'linear',\n              duration: 800,\n              update: function update() {\n                leaderTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: contentLine2,\n                  index: contentLine2.str.length,\n                  easing: 'linear',\n                  duration: 1040,\n                  update: function update() {\n                    leaderTextLine2.textContent = contentLine2.str.substr(0, contentLine2.index);\n                  },\n                  complete: function complete() {\n                    return HelperFunctions.logMessageFromLeaderToFollowers(false);\n                  }\n                });\n                _this3.animationState = ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS;\n              }\n            });\n            resolve({\n              animationState: this.animationState,\n              delay: 1000\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS:\n          {\n            HelperFunctions.logMessageAckFromFollowersToLeader(); // 'Once majority is obtained. The leader returns value back to the client'\n\n            document.getElementById('node-c-message-status-text1').textContent = 'Leader:';\n            document.getElementById('node-c-message-status-text2').textContent = '';\n            var leaderText1 = {\n              index: 7,\n              str: 'Majority obtained.'\n            };\n            var leaderText2 = {\n              index: 0,\n              str: 'Returning value to client..'\n            };\n            var ltxt1 = document.getElementById('node-c-message-status-text1');\n            var ltxt2 = document.getElementById('node-c-message-status-text2');\n            anime({\n              targets: leaderText1,\n              index: leaderText1.str.length,\n              easing: 'linear',\n              duration: 720,\n              update: function update() {\n                ltxt1.textContent = leaderText1.str.substr(0, leaderText1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: leaderText2,\n                  index: leaderText2.str.length,\n                  easing: 'linear',\n                  duration: 1080,\n                  update: function update() {\n                    ltxt2.textContent = leaderText2.str.substr(0, leaderText2.index);\n                  },\n                  complete: function complete() {\n                    var animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE);\n                    animation.finished.then(function () {\n                      HelperFunctions.setSVGText({\n                        targetId: 'client-node-value',\n                        text: \"Value: \".concat(SET_VALUE1),\n                        showElement: true\n                      });\n                      _this3.animationState = Constants.ANIMATION_STATE_FINISHED;\n\n                      _this3.setState({\n                        animationFinished: true\n                      });\n\n                      resolve({\n                        animationState: _this3.animationState,\n                        delay: 100\n                      });\n                    });\n                  }\n                });\n              }\n            });\n            break;\n          }\n\n        case Constants.ANIMATION_STATE_FINISHED:\n          {\n            resolve({\n              animationState: this.animationState,\n              delay: 100\n            });\n            break;\n          }\n\n        default:\n          {\n            console.error('Unrecognized state: ' + this.animationState);\n            reject('Unrecognized state: ' + this.animationState);\n          }\n      }\n    }\n  }, {\n    key: \"onPrevious\",\n    value: function onPrevious() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4.onPreviousInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onPreviousInternal\",\n    value: function onPreviousInternal(resolve, reject) {\n      var _this5 = this;\n\n      switch (this.animationState) {\n        case ANIMATION_STATE_EXPLAIN_PROTOCOL:\n          {\n            // Undo phase\n            HelperFunctions.hideElement(this.mainTextSect);\n            this.animationState = Constants.ANIMATION_STATE_INITIAL;\n            resolve({\n              animationState: Constants.ANIMATION_STATE_INITIAL,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_ELECTION:\n          {\n            // Undo phase\n            HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n            HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n            HelperFunctions.hideElement(document.getElementById('node-c-extra-text')); // Redo previous phase\n\n            HelperFunctions.showElement(this.mainTextSect);\n            this.changeMainText('Letâ€™s say we have a 3-node raft group.', function () {\n              _this5.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL;\n            });\n            resolve({\n              animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NODE_DATA:\n          {\n            // Undo phase\n            document.getElementById('node-c-circle').classList.remove('leader-node');\n            HelperFunctions.hideElement(document.getElementById('node-a-term-text'));\n            HelperFunctions.hideElement(document.getElementById('node-b-term-text'));\n            HelperFunctions.hideElement(document.getElementById('node-c-term-text')); // Redo previous phase\n\n            this.changeMainText('Nodes would have performed leader election..', function () {\n              HelperFunctions.showElement(document.getElementById('node-a-extra-text'));\n              HelperFunctions.showElement(document.getElementById('node-b-extra-text'));\n              HelperFunctions.showElement(document.getElementById('node-c-extra-text'));\n            });\n            this.animationState = ANIMATION_STATE_LEADER_ELECTION;\n            resolve({\n              animationState: ANIMATION_STATE_LEADER_ELECTION,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_INTRODUCED:\n          {\n            // Undo phase\n            HelperFunctions.hideElement(document.getElementById('node-a-text-highlight'));\n            HelperFunctions.hideElement(document.getElementById('node-a-value-text-rect'));\n            HelperFunctions.hideElement(document.getElementById('node-b-text-highlight'));\n            HelperFunctions.hideElement(document.getElementById('node-b-value-text-rect'));\n            HelperFunctions.hideElement(document.getElementById('node-c-text-highlight'));\n            HelperFunctions.hideElement(document.getElementById('node-c-value-text-rect')); // Redo previous phase\n\n            HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n            HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n            HelperFunctions.hideElement(document.getElementById('node-c-extra-text'));\n            this.changeMainText('Node C is current raft leader, denoted by black border.', function () {\n              document.getElementById('node-c-circle').classList.add('leader-node');\n              HelperFunctions.showElement(document.getElementById('node-a-term-text'));\n              HelperFunctions.showElement(document.getElementById('node-b-term-text'));\n              HelperFunctions.showElement(document.getElementById('node-c-term-text'));\n            });\n            this.animationState = ANIMATION_STATE_NODE_DATA;\n            resolve({\n              animationState: ANIMATION_STATE_NODE_DATA,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_PERFORMED_READ_ON_LEADER:\n          {\n            this.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n            resolve({\n              animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n              delay: 100\n            });\n            break;\n          }\n\n        default:\n          {\n            console.error('Unrecognized state or unimplemented: ' + this.animationState);\n            reject('Unrecognized state or unimplemented: ' + this.animationState);\n          }\n      }\n    }\n  }, {\n    key: \"changeMainText\",\n    value: function changeMainText(text, onComplete) {\n      HelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main-diagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(MainDiagram, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RaftReadOperationAnimation;\n}(Component);\nexport default RaftReadOperationAnimation;","map":{"version":3,"sources":["/Users/andrew/code/yb-architecture/animations/src/RaftReadOperationAnimation.js"],"names":["React","Component","anime","MainDiagram","Constants","SSL_OP_EPHEMERAL_RSA","HelperFunctions","require","ANIMATION_STATE_EXPLAIN_PROTOCOL","ANIMATION_STATE_LEADER_ELECTION","ANIMATION_STATE_NODE_DATA","ANIMATION_STATE_CLIENT_INTRODUCED","ANIMATION_STATE_PERFORMED_READ_ON_LEADER","ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS","SET_VALUE1","SET_VALUE2","RaftReadOperationAnimation","props","animationState","ANIMATION_STATE_INITIAL","state","animationFinished","previousEnabled","mainTextSect","document","getElementById","Promise","resolve","reject","onNextInternal","nodeOuterCircles","getElementsByClassName","i","length","hideElement","showElement","changeMainText","delay","classList","add","introduceClientAnimation","introduceClient","finished","then","statusElem","contentLine1","index","str","contentLine2","statusTextLine1","statusTextLine2","targets","easing","duration","update","innerHTML","substr","complete","sendLogMessage","CLIENT_NODE","NODE_C","leaderTextLine1","leaderTextLine2","textContent","logMessageFromLeaderToFollowers","logMessageAckFromFollowersToLeader","leaderText1","leaderText2","ltxt1","ltxt2","animation","setSVGText","targetId","text","ANIMATION_STATE_FINISHED","setState","console","error","onPreviousInternal","remove","onComplete","setTextWithAnimation"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\nimport { SSL_OP_EPHEMERAL_RSA } from 'constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nconst ANIMATION_STATE_EXPLAIN_PROTOCOL = 'ANIMATION_STATE_EXPLAIN_PROTOCOL';\nconst ANIMATION_STATE_LEADER_ELECTION = 'ANIMATION_STATE_LEADER_ELECTION';\nconst ANIMATION_STATE_NODE_DATA = 'ANIMATION_STATE_NODE_DATA';\nconst ANIMATION_STATE_CLIENT_INTRODUCED = 'ANIMATION_STATE_CLIENT_INTRODUCED';\nconst ANIMATION_STATE_PERFORMED_READ_ON_LEADER = \"ANIMATION_STATE_PERFORMED_READ_ON_LEADER\";\nconst ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS = \"ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS\";\n\nconst SET_VALUE1=\"V1\";\nconst SET_VALUE2=\"V2\";\n\nexport class RaftReadOperationAnimation extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.animationState = Constants.ANIMATION_STATE_INITIAL;\n\t\tthis.state = {\n      animationFinished: false,\n      previousEnabled: true,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mainTextSect = document.getElementById('center-message-text');\n\t}\n\n\tpause(){\n\n\t}\n\tresume() {\n\n\t}\n\n\tonNext() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onNextInternal(resolve,reject);\n\t\t});\n\t}\n\n\tonNextInternal(resolve,reject) {\n\n\t\tswitch(this.animationState) {\n\t\t\tcase Constants.ANIMATION_STATE_INITIAL: {\n\t\t\t\t//////////////////// initial setup ////////////////////\n\t\t\t\t// make Node C the Leader\n\t\t\t\t// var nodeC = document.getElementById('node-c-circle');\n\t\t\t\t// nodeC.classList.add('leader-node');\n\n\t\t\t\t// hide all outer circles (TODO: revisit this approach)\n\t\t\t\tlet nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\t\t\t\tfor (let i = 0; i < nodeOuterCircles.length; i++){\n\t\t\t\t\tHelperFunctions.hideElement(nodeOuterCircles[i]);\n\t\t\t\t}\n\n        HelperFunctions.showElement(this.mainTextSect);\n        this.changeMainText('Letâ€™s say we have a 3-node raft group.');\n        this.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL;\n\n        resolve({\n          animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_EXPLAIN_PROTOCOL: {\n\t\t\t\tthis.changeMainText('Nodes would have performed leader election..', () => {\n          HelperFunctions.showElement(document.getElementById('node-a-extra-text'));\n          HelperFunctions.showElement(document.getElementById('node-b-extra-text'));\n          HelperFunctions.showElement(document.getElementById('node-c-extra-text'));\n        })\n        this.animationState = ANIMATION_STATE_LEADER_ELECTION;\n        resolve({\n          animationState: ANIMATION_STATE_LEADER_ELECTION,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_LEADER_ELECTION: {\n        HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n        HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n        HelperFunctions.hideElement(document.getElementById('node-c-extra-text'));\n\t\t\t\tthis.changeMainText('Node C is current raft leader, denoted by black border.', () => {\n          document.getElementById('node-c-circle').classList.add('leader-node');\n          HelperFunctions.showElement(document.getElementById('node-a-term-text'));\n          HelperFunctions.showElement(document.getElementById('node-b-term-text'));\n          HelperFunctions.showElement(document.getElementById('node-c-term-text'));\n        });\n        this.animationState = ANIMATION_STATE_NODE_DATA;\n        resolve({\n          animationState: ANIMATION_STATE_NODE_DATA,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_NODE_DATA: {\n\t\t\t\tthis.changeMainText('Assume all nodes have data: <br />(key,value) = (k, V1)', () => {\n          // Just in case, hide the extra text in case user clicked thru too quickly\n          HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n          HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n          HelperFunctions.hideElement(document.getElementById('node-c-extra-text'));\n\n          HelperFunctions.showElement(document.getElementById('node-a-text-highlight'));\n          HelperFunctions.showElement(document.getElementById('node-a-value-text-rect'));\n          HelperFunctions.showElement(document.getElementById('node-b-text-highlight'));\n          HelperFunctions.showElement(document.getElementById('node-b-value-text-rect'));\n          HelperFunctions.showElement(document.getElementById('node-c-text-highlight'));\n          HelperFunctions.showElement(document.getElementById('node-c-value-text-rect'));\n        });\n        this.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n        resolve({\n          animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_CLIENT_INTRODUCED: {\n\t\t\t\t//////////////////////////////////////////////////////\n        var introduceClientAnimation = HelperFunctions.introduceClient('');\n        this.changeMainText('');\n\n\t\t\t\tintroduceClientAnimation.finished.then(() => {\n          HelperFunctions.hideElement(document.getElementById('node-a-text-highlight'));\n          HelperFunctions.hideElement(document.getElementById('node-b-text-highlight'));\n          HelperFunctions.hideElement(document.getElementById('node-c-text-highlight'));\n\n          HelperFunctions.showElement(document.getElementById('client-message'));\n          const statusElem = document.getElementById('client-message-status');\n          document.getElementById('client-message-status-text1');\n          const contentLine1 = {\n            index: 0,\n            str: 'SELECT value'\n          }\n          const contentLine2 = {\n            index: 0,\n            str: 'FROM T WHERE key = k'\n          }\n          const statusTextLine1 = document.getElementById('client-message-status-text1');\n          const statusTextLine2 = document.getElementById('client-message-status-text2');\n          HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n          HelperFunctions.showElement(statusElem);\n          anime({\n            targets: contentLine1,\n            index: contentLine1.str.length,\n            easing: 'linear',\n            duration: 600,\n            update: function() {\n              statusTextLine1.innerHTML = contentLine1.str.substr(0, contentLine1.index);\n            },\n            complete: () => {\n              anime({\n                targets: contentLine2,\n                index: contentLine2.str.length,\n                easing: 'linear',\n                duration: 900,\n                update: function() {\n                  statusTextLine2.innerHTML = contentLine2.str.substr(0, contentLine2.index);\n                },\n                complete: () => HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false)\n              });\n            }\n          });\n\n\t\t\t\t\tthis.animationState = ANIMATION_STATE_PERFORMED_READ_ON_LEADER;\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tanimationState: ANIMATION_STATE_PERFORMED_READ_ON_LEADER,\n\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_PERFORMED_READ_ON_LEADER: {\n\t\t\t\t// Leader contacts followers to obtain a consensus on current value\n\t\t\t\tHelperFunctions.hideElement(document.getElementById('client-message-status'));\n\t\t\t\tHelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n\t\t\t\tconst statusElem = document.getElementById('node-c-message-status');\n\t\t\t\tHelperFunctions.showElement(document.getElementById('node-c-message-bubble'));\n\t\t\t\tHelperFunctions.showElement(statusElem);\n\t\t\t\tconst contentLine1 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'Per raft, leader should'\n\t\t\t\t}\n\t\t\t\tconst contentLine2 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'obtain majority heartbeat.'\n\t\t\t\t}\n\t\t\t\tconst leaderTextLine1 = document.getElementById('node-c-message-status-text1');\n\t\t\t\tconst leaderTextLine2 = document.getElementById('node-c-message-status-text2')\n\t\t\t\tanime({\n\t\t\t\t\ttargets: contentLine1,\n\t\t\t\t\tindex: contentLine1.str.length,\n\t\t\t\t\teasing: 'linear',\n\t\t\t\t\tduration: 800,\n\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\tleaderTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\tanime({\n\t\t\t\t\t\t\ttargets: contentLine2,\n\t\t\t\t\t\t\tindex: contentLine2.str.length,\n\t\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\t\tduration: 1040,\n\t\t\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\t\t\tleaderTextLine2.textContent = contentLine2.str.substr(0, contentLine2.index);\n              },\n              complete: () => HelperFunctions.logMessageFromLeaderToFollowers(false)\n            });\n            \n            this.animationState = ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tresolve({\n\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\tdelay: 1000\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS: {\n        HelperFunctions.logMessageAckFromFollowersToLeader();\n\t\t\t\t// 'Once majority is obtained. The leader returns value back to the client'\n\t\t\t\tdocument.getElementById('node-c-message-status-text1').textContent = 'Leader:';\n\t\t\t\tdocument.getElementById('node-c-message-status-text2').textContent = '';\n\t\t\t\tconst leaderText1 = {\n\t\t\t\t\tindex: 7,\n\t\t\t\t\tstr: 'Majority obtained.'\n\t\t\t\t}\n\t\t\t\tconst leaderText2 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'Returning value to client..'\n\t\t\t\t}\n\t\t\t\tconst ltxt1 = document.getElementById('node-c-message-status-text1');\n\t\t\t\tconst ltxt2 = document.getElementById('node-c-message-status-text2')\n\t\t\t\tanime({\n\t\t\t\t\ttargets: leaderText1,\n\t\t\t\t\tindex: leaderText1.str.length,\n\t\t\t\t\teasing: 'linear',\n\t\t\t\t\tduration: 720,\n\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\tltxt1.textContent = leaderText1.str.substr(0, leaderText1.index);\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\tanime({\n\t\t\t\t\t\t\ttargets: leaderText2,\n\t\t\t\t\t\t\tindex: leaderText2.str.length,\n\t\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\t\tduration: 1080,\n\t\t\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\t\t\tltxt2.textContent = leaderText2.str.substr(0, leaderText2.index);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t\t\tvar animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE);\n\t\t\t\t\t\t\t\tanimation.finished.then(() => {\n\t\t\t\t\t\t\t\t\tHelperFunctions.setSVGText({targetId: 'client-node-value', text: `Value: ${SET_VALUE1}`, showElement: true });\n\n\t\t\t\t\t\t\t\t\tthis.animationState = Constants.ANIMATION_STATE_FINISHED;\n\t\t\t\t\t\t\t\t\tthis.setState({ animationFinished: true });\n\t\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\t\t\t\t\t\tdelay: 100\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Constants.ANIMATION_STATE_FINISHED: {\n\t\t\t\tresolve({\n\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\tdelay: 100,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconsole.error('Unrecognized state: ' + this.animationState);\n\t\t\t\treject('Unrecognized state: ' + this.animationState);\n\t\t\t}\n\t\t}\n  }\n  \n  onPrevious() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onPreviousInternal(resolve,reject);\n\t\t});\n  }\n\n  onPreviousInternal(resolve,reject) {\n\t\tswitch(this.animationState) {\n\n\t\t\tcase ANIMATION_STATE_EXPLAIN_PROTOCOL: {\n        // Undo phase\n        HelperFunctions.hideElement(this.mainTextSect);\n        this.animationState = Constants.ANIMATION_STATE_INITIAL;\n\n        resolve({\n          animationState: Constants.ANIMATION_STATE_INITIAL,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_LEADER_ELECTION: {\n        // Undo phase\n        HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n        HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n        HelperFunctions.hideElement(document.getElementById('node-c-extra-text'));\n        // Redo previous phase\n        HelperFunctions.showElement(this.mainTextSect);\n        this.changeMainText('Letâ€™s say we have a 3-node raft group.', () => { this.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL });\n\n        resolve({\n          animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_NODE_DATA: {\n        // Undo phase\n        document.getElementById('node-c-circle').classList.remove('leader-node');\n        HelperFunctions.hideElement(document.getElementById('node-a-term-text'));\n        HelperFunctions.hideElement(document.getElementById('node-b-term-text'));\n        HelperFunctions.hideElement(document.getElementById('node-c-term-text'));\n \n\n        // Redo previous phase\n        this.changeMainText('Nodes would have performed leader election..', () => {\n          HelperFunctions.showElement(document.getElementById('node-a-extra-text'));\n          HelperFunctions.showElement(document.getElementById('node-b-extra-text'));\n          HelperFunctions.showElement(document.getElementById('node-c-extra-text'));\n        })\n        this.animationState = ANIMATION_STATE_LEADER_ELECTION\n        resolve({\n          animationState: ANIMATION_STATE_LEADER_ELECTION,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_CLIENT_INTRODUCED: {\n        // Undo phase\n        HelperFunctions.hideElement(document.getElementById('node-a-text-highlight'));\n        HelperFunctions.hideElement(document.getElementById('node-a-value-text-rect'));\n        HelperFunctions.hideElement(document.getElementById('node-b-text-highlight'));\n        HelperFunctions.hideElement(document.getElementById('node-b-value-text-rect'));\n        HelperFunctions.hideElement(document.getElementById('node-c-text-highlight'));\n        HelperFunctions.hideElement(document.getElementById('node-c-value-text-rect'));\n\n        // Redo previous phase\n        HelperFunctions.hideElement(document.getElementById('node-a-extra-text'));\n        HelperFunctions.hideElement(document.getElementById('node-b-extra-text'));\n        HelperFunctions.hideElement(document.getElementById('node-c-extra-text'));\n\t\t\t\tthis.changeMainText('Node C is current raft leader, denoted by black border.', () => {\n          document.getElementById('node-c-circle').classList.add('leader-node');\n          HelperFunctions.showElement(document.getElementById('node-a-term-text'));\n          HelperFunctions.showElement(document.getElementById('node-b-term-text'));\n          HelperFunctions.showElement(document.getElementById('node-c-term-text'));\n        });\n        this.animationState = ANIMATION_STATE_NODE_DATA;\n        resolve({\n          animationState: ANIMATION_STATE_NODE_DATA,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_PERFORMED_READ_ON_LEADER: {\n        this.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n        resolve({\n          animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n          delay: 100,\n        });\n        break;\n      }\n      default: {\n        console.error('Unrecognized state or unimplemented: ' + this.animationState);\n        reject('Unrecognized state or unimplemented: ' + this.animationState);\n      }\n    }\n  }\n  \n\tchangeMainText(text, onComplete) {\n\t\tHelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div id=\"main-diagram\">\n\t\t\t\t\t<MainDiagram/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default RaftReadOperationAnimation;\n"]},"metadata":{},"sourceType":"module"}