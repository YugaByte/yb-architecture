{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/code/yb-architecture/animations/src/RaftReadOperationAnimation.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\nimport { SSL_OP_EPHEMERAL_RSA } from 'constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nvar ANIMATION_STATE_EXPLAIN_PROTOCOL = 'ANIMATION_STATE_EXPLAIN_PROTOCOL';\nvar ANIMATION_STATE_LEADER_ELECTION = 'ANIMATION_STATE_LEADER_ELECTION';\nvar ANIMATION_STATE_NODE_DATA = 'ANIMATION_STATE_NODE_DATA';\nvar ANIMATION_STATE_CLIENT_INTRODUCED = 'ANIMATION_STATE_CLIENT_INTRODUCED';\nvar ANIMATION_STATE_PERFORMED_READ_ON_LEADER = \"ANIMATION_STATE_PERFORMED_READ_ON_LEADER\";\nvar ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS = \"ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS\";\nvar ANIMATION_STATE_CLIENT_FINISH_OPERATION = 'ANIMATION_STATE_CLIENT_FINISH_OPERATION';\nvar SET_VALUE1 = \"V1\";\nvar SET_VALUE2 = \"V2\";\nexport var RaftReadOperationAnimation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RaftReadOperationAnimation, _Component);\n\n  function RaftReadOperationAnimation(props) {\n    var _this;\n\n    _classCallCheck(this, RaftReadOperationAnimation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RaftReadOperationAnimation).call(this, props));\n    _this.animationState = Constants.ANIMATION_STATE_INITIAL;\n    _this.state = {\n      animationFinished: false,\n      previousEnabled: true\n    };\n    return _this;\n  }\n\n  _createClass(RaftReadOperationAnimation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mainTextSect = document.getElementById('center-message-text');\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {}\n  }, {\n    key: \"resume\",\n    value: function resume() {}\n  }, {\n    key: \"onNext\",\n    value: function onNext() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.onNextInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onNextInternal\",\n    value: function onNextInternal(resolve, reject) {\n      var _this3 = this;\n\n      // Text Containers underneath each Node\n      var nodeATextContainer = document.getElementById('node-a-term-text-rect');\n      var nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n      var nodeCTextContainer = document.getElementById('node-c-term-text-rect'); // Text Term (Line 1)\n\n      var nodeATermText = document.getElementById('node-a-term-text');\n      var nodeBTermText = document.getElementById('node-b-term-text');\n      var nodeCTermText = document.getElementById('node-c-term-text'); // Text Extra (Line 2)\n\n      var nodeAExtraText = document.getElementById('node-a-extra-text');\n      var nodeBExtraText = document.getElementById('node-b-extra-text');\n      var nodeCExtraText = document.getElementById('node-c-extra-text'); // Highlight for Text Extra (Line 2)\n\n      var nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n      var nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n      var nodeCExtraHighlight = document.getElementById('node-c-text-highlight'); // Text Extra (Line 3)\n      // const nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n      // const nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n      // const nodeCExtraText2 = document.getElementById('node-c-extra-text2'); \n\n      switch (this.animationState) {\n        case Constants.ANIMATION_STATE_INITIAL:\n          {\n            //////////////////// initial setup ////////////////////\n            // make Node C the Leader\n            // var nodeC = document.getElementById('node-c-circle');\n            // nodeC.classList.add('leader-node');\n            // hide all outer circles (TODO: revisit this approach)\n            var nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\n            for (var i = 0; i < nodeOuterCircles.length; i++) {\n              HelperFunctions.hideElement(nodeOuterCircles[i]);\n            }\n\n            this.changeMainText('Letâ€™s say we have a 3-node raft group.');\n            this.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL;\n            resolve({\n              animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_EXPLAIN_PROTOCOL:\n          {\n            this.changeMainText('Nodes would have performed leader election..', function () {\n              // Show each text container and then edit the text within them\n              HelperFunctions.showElement(nodeATextContainer);\n              HelperFunctions.showElement(nodeBTextContainer);\n              HelperFunctions.showElement(nodeCTextContainer);\n              nodeAExtraText.innerHTML = 'Voted For C';\n              nodeBExtraText.innerHTML = 'Voted For C';\n              nodeCExtraText.innerHTML = 'Voted For C';\n            });\n            this.animationState = ANIMATION_STATE_LEADER_ELECTION;\n            resolve({\n              animationState: ANIMATION_STATE_LEADER_ELECTION,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_ELECTION:\n          {\n            this.changeMainText('Node C is the current raft leader, denoted by black border.', function () {\n              nodeAExtraText.innerHTML = '';\n              nodeBExtraText.innerHTML = '';\n              nodeCExtraText.innerHTML = '';\n              document.getElementById('node-c-circle').classList.add('leader-node');\n              nodeATermText.innerHTML = 'Term: 1';\n              nodeBTermText.innerHTML = 'Term: 1';\n              nodeCTermText.innerHTML = 'Term: 1';\n            });\n            this.animationState = ANIMATION_STATE_NODE_DATA;\n            resolve({\n              animationState: ANIMATION_STATE_NODE_DATA,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NODE_DATA:\n          {\n            this.changeMainText('Assume all nodes have data: <br />(key,value) = (k, V1)', function () {\n              nodeAExtraText.innerHTML = '(k, V1)';\n              nodeBExtraText.innerHTML = '(k, V1)';\n              nodeCExtraText.innerHTML = '(k, V1)';\n              HelperFunctions.showElement(nodeAExtraHighlight);\n              HelperFunctions.showElement(nodeBExtraHighlight);\n              HelperFunctions.showElement(nodeCExtraHighlight);\n            });\n            this.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n            resolve({\n              animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_INTRODUCED:\n          {\n            //////////////////////////////////////////////////////\n            var introduceClientAnimation = HelperFunctions.introduceClient('');\n            this.changeMainText('');\n            introduceClientAnimation.finished.then(function () {\n              HelperFunctions.hideElement(nodeAExtraHighlight);\n              HelperFunctions.hideElement(nodeBExtraHighlight);\n              HelperFunctions.hideElement(nodeCExtraHighlight);\n              HelperFunctions.showElement(document.getElementById('client-message'));\n              var statusElem = document.getElementById('client-message-status');\n              document.getElementById('client-message-status-text1');\n              var contentLine1 = {\n                index: 0,\n                str: 'SELECT value'\n              };\n              var contentLine2 = {\n                index: 0,\n                str: 'FROM T WHERE key = k'\n              };\n              var statusTextLine1 = document.getElementById('client-message-status-text1');\n              var statusTextLine2 = document.getElementById('client-message-status-text2');\n              HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n              HelperFunctions.showElement(statusElem);\n              anime({\n                targets: contentLine1,\n                index: contentLine1.str.length,\n                easing: 'linear',\n                duration: 600,\n                update: function update() {\n                  statusTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: contentLine2,\n                    index: contentLine2.str.length,\n                    easing: 'linear',\n                    duration: 900,\n                    update: function update() {\n                      statusTextLine2.innerHTML = contentLine2.str.substr(0, contentLine2.index);\n                    },\n                    complete: function complete() {\n                      return HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false);\n                    }\n                  });\n                }\n              });\n              _this3.animationState = ANIMATION_STATE_PERFORMED_READ_ON_LEADER;\n              resolve({\n                animationState: ANIMATION_STATE_PERFORMED_READ_ON_LEADER,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_PERFORMED_READ_ON_LEADER:\n          {\n            // Leader contacts followers to obtain a consensus on current value\n            HelperFunctions.hideElement(document.getElementById('client-message-status'));\n            HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n            document.getElementById('client-message-status-text1').innerHTML = '';\n            document.getElementById('client-message-status-text2').innerHTML = '';\n            var statusElem = document.getElementById('node-c-message-status');\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble'));\n            HelperFunctions.showElement(statusElem);\n            var contentLine1 = {\n              index: 0,\n              str: 'Per raft protocol, leader should'\n            };\n            var contentLine2 = {\n              index: 0,\n              str: 'obtain majority heartbeat.'\n            };\n            var leaderTextLine1 = document.getElementById('node-c-message-status-text1');\n            var leaderTextLine2 = document.getElementById('node-c-message-status-text2');\n            anime({\n              targets: contentLine1,\n              index: contentLine1.str.length,\n              easing: 'linear',\n              duration: 800,\n              update: function update() {\n                leaderTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: contentLine2,\n                  index: contentLine2.str.length,\n                  easing: 'linear',\n                  duration: 1040,\n                  update: function update() {\n                    leaderTextLine2.textContent = contentLine2.str.substr(0, contentLine2.index);\n                  },\n                  complete: function complete() {\n                    return HelperFunctions.logMessageFromLeaderToFollowers(false);\n                  }\n                });\n                _this3.animationState = ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS;\n              }\n            });\n            resolve({\n              animationState: this.animationState,\n              delay: 1000\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS:\n          {\n            var receivedAckAnimation = HelperFunctions.logMessageAckFromFollowersToLeader();\n            receivedAckAnimation[0].finished.then(function () {\n              // Once majority is obtained. The leader returns value back to the client\n              document.getElementById('node-c-message-status-text1').textContent = 'Leader:';\n              document.getElementById('node-c-message-status-text2').textContent = '';\n              var leaderText1 = {\n                index: 7,\n                str: 'Majority heartbeat obtained,'\n              };\n              var leaderText2 = {\n                index: 0,\n                str: 'raft leader can serve read.'\n              };\n              var ltxt1 = document.getElementById('node-c-message-status-text1');\n              var ltxt2 = document.getElementById('node-c-message-status-text2');\n              anime({\n                targets: leaderText1,\n                index: leaderText1.str.length,\n                easing: 'linear',\n                duration: 800,\n                update: function update() {\n                  ltxt1.textContent = leaderText1.str.substr(0, leaderText1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: leaderText2,\n                    index: leaderText2.str.length,\n                    easing: 'linear',\n                    duration: 1080,\n                    update: function update() {\n                      ltxt2.textContent = leaderText2.str.substr(0, leaderText2.index);\n                    },\n                    complete: function complete() {\n                      var animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE);\n                      animation.finished.then(function () {\n                        HelperFunctions.setSVGText({\n                          targetId: 'client-node-value',\n                          text: \"value: \".concat(SET_VALUE1),\n                          showElement: true\n                        });\n                        _this3.animationState = ANIMATION_STATE_CLIENT_FINISH_OPERATION;\n                        resolve({\n                          animationState: _this3.animationState,\n                          delay: 100\n                        });\n                      });\n                    }\n                  });\n                }\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_FINISH_OPERATION:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble'));\n            HelperFunctions.hideElement(document.getElementById('node-c-message-status'));\n            this.changeMainText('If nodes are in different regions, obtaining majority heartbeat is expensive. Query has high latency.');\n            this.animationState = Constants.ANIMATION_STATE_FINISHED;\n            this.setState({\n              animationFinished: true\n            });\n            resolve({\n              animationState: this.animationState,\n              delay: 100\n            });\n            break;\n          }\n\n        case Constants.ANIMATION_STATE_FINISHED:\n          {\n            resolve({\n              animationState: this.animationState,\n              delay: 100\n            });\n            break;\n          }\n\n        default:\n          {\n            console.error('Unrecognized state: ' + this.animationState);\n            reject('Unrecognized state: ' + this.animationState);\n          }\n      }\n    }\n  }, {\n    key: \"onPrevious\",\n    value: function onPrevious() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4.onPreviousInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onPreviousInternal\",\n    value: function onPreviousInternal(resolve, reject) {\n      var _this5 = this;\n\n      // Text Containers underneath each Node\n      var nodeATextContainer = document.getElementById('node-a-term-text-rect');\n      var nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n      var nodeCTextContainer = document.getElementById('node-c-term-text-rect'); // Text Term (Line 1)\n\n      var nodeATermText = document.getElementById('node-a-term-text');\n      var nodeBTermText = document.getElementById('node-b-term-text');\n      var nodeCTermText = document.getElementById('node-c-term-text'); // Text Extra (Line 2)\n\n      var nodeAExtraText = document.getElementById('node-a-extra-text');\n      var nodeBExtraText = document.getElementById('node-b-extra-text');\n      var nodeCExtraText = document.getElementById('node-c-extra-text'); // Highlight for Text Extra (Line 2)\n\n      var nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n      var nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n      var nodeCExtraHighlight = document.getElementById('node-c-text-highlight'); // Text Extra (Line 3)\n      // const nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n      // const nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n      // const nodeCExtraText2 = document.getElementById('node-c-extra-text2');\n\n      switch (this.animationState) {\n        case ANIMATION_STATE_EXPLAIN_PROTOCOL:\n          {\n            // Undo phase\n            this.changeMainText('');\n            this.animationState = Constants.ANIMATION_STATE_INITIAL;\n            resolve({\n              animationState: Constants.ANIMATION_STATE_INITIAL,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_ELECTION:\n          {\n            // Undo phase\n            HelperFunctions.hideElement(nodeATextContainer);\n            HelperFunctions.hideElement(nodeBTextContainer);\n            HelperFunctions.hideElement(nodeCTextContainer); // Redo previous phase\n\n            HelperFunctions.showElement(this.mainTextSect);\n            this.changeMainText('Letâ€™s say we have a 3-node raft group.', function () {\n              _this5.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL;\n            });\n            resolve({\n              animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NODE_DATA:\n          {\n            // Undo phase\n            document.getElementById('node-c-circle').classList.remove('leader-node');\n            nodeATermText.innerHTML = '';\n            nodeBTermText.innerHTML = '';\n            nodeCTermText.innerHTML = ''; // Redo previous phase\n\n            this.changeMainText('Nodes would have performed leader election..', function () {\n              nodeAExtraText.innerHTML = 'Voted For C';\n              nodeBExtraText.innerHTML = 'Voted For C';\n              nodeCExtraText.innerHTML = 'Voted For C';\n            });\n            this.animationState = ANIMATION_STATE_LEADER_ELECTION;\n            resolve({\n              animationState: ANIMATION_STATE_LEADER_ELECTION,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_INTRODUCED:\n          {\n            // Undo phase\n            document.getElementById('node-c-circle').classList.remove('leader-node');\n            HelperFunctions.hideElement(nodeAExtraHighlight);\n            HelperFunctions.hideElement(nodeBExtraHighlight);\n            HelperFunctions.hideElement(nodeCExtraHighlight); // Redo previous phase\n\n            nodeAExtraText.innerHTML = '';\n            nodeBExtraText.innerHTML = '';\n            nodeCExtraText.innerHTML = '';\n            this.changeMainText('Node C is the current raft leader, denoted by black border.', function () {\n              document.getElementById('node-c-circle').classList.add('leader-node');\n              nodeATermText.innerHTML = 'Term: 1';\n              nodeBTermText.innerHTML = 'Term: 1';\n              nodeCTermText.innerHTML = 'Term: 1';\n            });\n            this.animationState = ANIMATION_STATE_NODE_DATA;\n            resolve({\n              animationState: ANIMATION_STATE_NODE_DATA,\n              delay: 100\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_PERFORMED_READ_ON_LEADER:\n          {\n            HelperFunctions.hideElement(document.getElementById('client-message-status'));\n            HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n            HelperFunctions.hideClient();\n            document.getElementById('client-message-status-text1').innerHTML = '';\n            document.getElementById('client-message-status-text2').innerHTML = '';\n            this.changeMainText('Assume all nodes have data: <br />(key,value) = (k, V1)', function () {\n              HelperFunctions.showElement(nodeAExtraHighlight);\n              HelperFunctions.showElement(nodeBExtraHighlight);\n              HelperFunctions.showElement(nodeCExtraHighlight);\n              _this5.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n              resolve({\n                animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS:\n          {\n            var statusElem = document.getElementById('node-c-message-status');\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble'));\n            HelperFunctions.hideElement(statusElem);\n            document.getElementById('node-c-message-status-text1').innerHTML = '';\n            document.getElementById('node-c-message-status-text2').innerHTML = '';\n            var introduceClientAnimation = HelperFunctions.introduceClient('');\n            this.changeMainText('');\n            introduceClientAnimation.finished.then(function () {\n              HelperFunctions.hideElement(nodeAExtraHighlight);\n              HelperFunctions.hideElement(nodeBExtraHighlight);\n              HelperFunctions.hideElement(nodeCExtraHighlight);\n              HelperFunctions.showElement(document.getElementById('client-message'));\n              var statusElem = document.getElementById('client-message-status');\n              document.getElementById('client-message-status-text1');\n              var contentLine1 = {\n                index: 0,\n                str: 'SELECT value'\n              };\n              var contentLine2 = {\n                index: 0,\n                str: 'FROM T WHERE key = k'\n              };\n              var statusTextLine1 = document.getElementById('client-message-status-text1');\n              var statusTextLine2 = document.getElementById('client-message-status-text2');\n              HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n              HelperFunctions.showElement(statusElem);\n              anime({\n                targets: contentLine1,\n                index: contentLine1.str.length,\n                easing: 'linear',\n                duration: 600,\n                update: function update() {\n                  statusTextLine1.innerHTML = contentLine1.str.substr(0, contentLine1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: contentLine2,\n                    index: contentLine2.str.length,\n                    easing: 'linear',\n                    duration: 900,\n                    update: function update() {\n                      statusTextLine2.innerHTML = contentLine2.str.substr(0, contentLine2.index);\n                    },\n                    complete: function complete() {\n                      var anim = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false);\n                      anim.finished.then(function () {\n                        _this5.animationState = ANIMATION_STATE_PERFORMED_READ_ON_LEADER;\n                        resolve({\n                          animationState: ANIMATION_STATE_PERFORMED_READ_ON_LEADER,\n                          delay: 100\n                        });\n                      });\n                    }\n                  });\n                }\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_FINISH_OPERATION:\n          {\n            var leaderTextLine1 = document.getElementById('node-c-message-status-text1');\n            var leaderTextLine2 = document.getElementById('node-c-message-status-text2');\n            HelperFunctions.hideElement(document.getElementById('client-node-value'));\n            leaderTextLine1.innerHTML = '';\n            leaderTextLine2.innerHTML = '';\n            var contentLine1 = {\n              index: 0,\n              str: 'Per raft protocol, leader should'\n            };\n            var contentLine2 = {\n              index: 0,\n              str: 'obtain majority heartbeat.'\n            };\n            anime({\n              targets: contentLine1,\n              index: contentLine1.str.length,\n              easing: 'linear',\n              duration: 800,\n              update: function update() {\n                leaderTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: contentLine2,\n                  index: contentLine2.str.length,\n                  easing: 'linear',\n                  duration: 1040,\n                  update: function update() {\n                    leaderTextLine2.textContent = contentLine2.str.substr(0, contentLine2.index);\n                  },\n                  complete: function complete() {\n                    return HelperFunctions.logMessageFromLeaderToFollowers(false);\n                  }\n                });\n                _this5.animationState = ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS;\n                resolve({\n                  animationState: _this5.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case Constants.ANIMATION_STATE_FINISHED:\n          {\n            this.changeMainText('');\n            HelperFunctions.hideElement(document.getElementById('client-node-value'));\n            document.getElementById('node-c-message-status-text1').innerHTML = '';\n            document.getElementById('node-c-message-status-text2').innerHTML = '';\n            this.setState({\n              animationFinished: false\n            });\n            var receivedAckAnimation = HelperFunctions.logMessageAckFromFollowersToLeader();\n            receivedAckAnimation[0].finished.then(function () {\n              // Once majority is obtained. The leader returns value back to the client\n              var statusElem = document.getElementById('node-c-message-status');\n              HelperFunctions.showElement(document.getElementById('node-c-message-bubble'));\n              HelperFunctions.showElement(statusElem);\n              var leaderText1 = {\n                index: 7,\n                str: 'Majority heartbeat obtained,'\n              };\n              var leaderText2 = {\n                index: 0,\n                str: 'raft leader can serve read.'\n              };\n              var ltxt1 = document.getElementById('node-c-message-status-text1');\n              var ltxt2 = document.getElementById('node-c-message-status-text2');\n              anime({\n                targets: leaderText1,\n                index: leaderText1.str.length,\n                easing: 'linear',\n                duration: 800,\n                update: function update() {\n                  ltxt1.textContent = leaderText1.str.substr(0, leaderText1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: leaderText2,\n                    index: leaderText2.str.length,\n                    easing: 'linear',\n                    duration: 1080,\n                    update: function update() {\n                      ltxt2.textContent = leaderText2.str.substr(0, leaderText2.index);\n                    },\n                    complete: function complete() {\n                      var animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE);\n                      animation.finished.then(function () {\n                        HelperFunctions.setSVGText({\n                          targetId: 'client-node-value',\n                          text: \"value: \".concat(SET_VALUE1),\n                          showElement: true\n                        });\n                        _this5.animationState = ANIMATION_STATE_CLIENT_FINISH_OPERATION;\n                        resolve({\n                          animationState: _this5.animationState,\n                          delay: 100\n                        });\n                      });\n                    }\n                  });\n                }\n              });\n            });\n            break;\n          }\n\n        default:\n          {\n            console.error('Unrecognized state or unimplemented: ' + this.animationState);\n            reject('Unrecognized state or unimplemented: ' + this.animationState);\n          }\n      }\n    }\n  }, {\n    key: \"changeMainText\",\n    value: function changeMainText(text, onComplete) {\n      HelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main-diagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, React.createElement(MainDiagram, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RaftReadOperationAnimation;\n}(Component);\nexport default RaftReadOperationAnimation;","map":{"version":3,"sources":["/Users/andrew/code/yb-architecture/animations/src/RaftReadOperationAnimation.js"],"names":["React","Component","anime","MainDiagram","Constants","SSL_OP_EPHEMERAL_RSA","HelperFunctions","require","ANIMATION_STATE_EXPLAIN_PROTOCOL","ANIMATION_STATE_LEADER_ELECTION","ANIMATION_STATE_NODE_DATA","ANIMATION_STATE_CLIENT_INTRODUCED","ANIMATION_STATE_PERFORMED_READ_ON_LEADER","ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS","ANIMATION_STATE_CLIENT_FINISH_OPERATION","SET_VALUE1","SET_VALUE2","RaftReadOperationAnimation","props","animationState","ANIMATION_STATE_INITIAL","state","animationFinished","previousEnabled","mainTextSect","document","getElementById","Promise","resolve","reject","onNextInternal","nodeATextContainer","nodeBTextContainer","nodeCTextContainer","nodeATermText","nodeBTermText","nodeCTermText","nodeAExtraText","nodeBExtraText","nodeCExtraText","nodeAExtraHighlight","nodeBExtraHighlight","nodeCExtraHighlight","nodeOuterCircles","getElementsByClassName","i","length","hideElement","changeMainText","delay","showElement","innerHTML","classList","add","introduceClientAnimation","introduceClient","finished","then","statusElem","contentLine1","index","str","contentLine2","statusTextLine1","statusTextLine2","targets","easing","duration","update","textContent","substr","complete","sendLogMessage","CLIENT_NODE","NODE_C","leaderTextLine1","leaderTextLine2","logMessageFromLeaderToFollowers","receivedAckAnimation","logMessageAckFromFollowersToLeader","leaderText1","leaderText2","ltxt1","ltxt2","animation","setSVGText","targetId","text","ANIMATION_STATE_FINISHED","setState","console","error","onPreviousInternal","remove","hideClient","anim","onComplete","setTextWithAnimation"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\nimport { SSL_OP_EPHEMERAL_RSA } from 'constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nconst ANIMATION_STATE_EXPLAIN_PROTOCOL = 'ANIMATION_STATE_EXPLAIN_PROTOCOL';\nconst ANIMATION_STATE_LEADER_ELECTION = 'ANIMATION_STATE_LEADER_ELECTION';\nconst ANIMATION_STATE_NODE_DATA = 'ANIMATION_STATE_NODE_DATA';\nconst ANIMATION_STATE_CLIENT_INTRODUCED = 'ANIMATION_STATE_CLIENT_INTRODUCED';\nconst ANIMATION_STATE_PERFORMED_READ_ON_LEADER = \"ANIMATION_STATE_PERFORMED_READ_ON_LEADER\";\nconst ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS = \"ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS\";\nconst ANIMATION_STATE_CLIENT_FINISH_OPERATION = 'ANIMATION_STATE_CLIENT_FINISH_OPERATION';\n\nconst SET_VALUE1=\"V1\";\nconst SET_VALUE2=\"V2\";\n\nexport class RaftReadOperationAnimation extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.animationState = Constants.ANIMATION_STATE_INITIAL;\n\t\tthis.state = {\n      animationFinished: false,\n      previousEnabled: true,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mainTextSect = document.getElementById('center-message-text');\n\t}\n\n\tpause(){ }\n\tresume() {\t}\n\n\tonNext() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onNextInternal(resolve,reject);\n\t\t});\n\t}\n\n\tonNextInternal(resolve,reject) {\n    // Text Containers underneath each Node\n    const nodeATextContainer = document.getElementById('node-a-term-text-rect');\n    const nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n    const nodeCTextContainer = document.getElementById('node-c-term-text-rect');\n    // Text Term (Line 1)\n    const nodeATermText = document.getElementById('node-a-term-text');\n    const nodeBTermText = document.getElementById('node-b-term-text');\n    const nodeCTermText = document.getElementById('node-c-term-text');\n    // Text Extra (Line 2)\n    const nodeAExtraText = document.getElementById('node-a-extra-text');\n    const nodeBExtraText = document.getElementById('node-b-extra-text');\n    const nodeCExtraText = document.getElementById('node-c-extra-text');\n    // Highlight for Text Extra (Line 2)\n    const nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n    const nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n    const nodeCExtraHighlight = document.getElementById('node-c-text-highlight');\n    // Text Extra (Line 3)\n    // const nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n    // const nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n    // const nodeCExtraText2 = document.getElementById('node-c-extra-text2'); \n\n\t\tswitch(this.animationState) {\n\t\t\tcase Constants.ANIMATION_STATE_INITIAL: {\n\t\t\t\t//////////////////// initial setup ////////////////////\n\t\t\t\t// make Node C the Leader\n\t\t\t\t// var nodeC = document.getElementById('node-c-circle');\n\t\t\t\t// nodeC.classList.add('leader-node');\n\n\t\t\t\t// hide all outer circles (TODO: revisit this approach)\n\t\t\t\tlet nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\t\t\t\tfor (let i = 0; i < nodeOuterCircles.length; i++){\n\t\t\t\t\tHelperFunctions.hideElement(nodeOuterCircles[i]);\n        }\n\n        this.changeMainText('Letâ€™s say we have a 3-node raft group.');\n        this.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL;\n\n        resolve({\n          animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_EXPLAIN_PROTOCOL: {\n\t\t\t\tthis.changeMainText('Nodes would have performed leader election..', () => {\n          // Show each text container and then edit the text within them\n          HelperFunctions.showElement(nodeATextContainer);\n          HelperFunctions.showElement(nodeBTextContainer);\n          HelperFunctions.showElement(nodeCTextContainer);\n\n          nodeAExtraText.innerHTML = 'Voted For C';\n          nodeBExtraText.innerHTML = 'Voted For C';\n          nodeCExtraText.innerHTML = 'Voted For C';\n        })\n        this.animationState = ANIMATION_STATE_LEADER_ELECTION;\n        resolve({\n          animationState: ANIMATION_STATE_LEADER_ELECTION,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_LEADER_ELECTION: {\n\t\t\t\tthis.changeMainText('Node C is the current raft leader, denoted by black border.', () => {\n          nodeAExtraText.innerHTML = '';\n          nodeBExtraText.innerHTML = '';\n          nodeCExtraText.innerHTML = '';\n          document.getElementById('node-c-circle').classList.add('leader-node');\n          nodeATermText.innerHTML = 'Term: 1';\n          nodeBTermText.innerHTML = 'Term: 1';\n          nodeCTermText.innerHTML = 'Term: 1';\n        });\n        this.animationState = ANIMATION_STATE_NODE_DATA;\n        resolve({\n          animationState: ANIMATION_STATE_NODE_DATA,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_NODE_DATA: {\n\t\t\t\tthis.changeMainText('Assume all nodes have data: <br />(key,value) = (k, V1)', () => {\n          nodeAExtraText.innerHTML = '(k, V1)';\n          nodeBExtraText.innerHTML = '(k, V1)';\n          nodeCExtraText.innerHTML = '(k, V1)';\n\n          HelperFunctions.showElement(nodeAExtraHighlight);\n          HelperFunctions.showElement(nodeBExtraHighlight);\n          HelperFunctions.showElement(nodeCExtraHighlight);\n        });\n        this.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n        resolve({\n          animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_CLIENT_INTRODUCED: {\n\t\t\t\t//////////////////////////////////////////////////////\n        var introduceClientAnimation = HelperFunctions.introduceClient('');\n        this.changeMainText('');\n\n\t\t\t\tintroduceClientAnimation.finished.then(() => {\n          HelperFunctions.hideElement(nodeAExtraHighlight);\n          HelperFunctions.hideElement(nodeBExtraHighlight);\n          HelperFunctions.hideElement(nodeCExtraHighlight);\n\n          HelperFunctions.showElement(document.getElementById('client-message'));\n          const statusElem = document.getElementById('client-message-status');\n          document.getElementById('client-message-status-text1');\n          const contentLine1 = {\n            index: 0,\n            str: 'SELECT value'\n          }\n          const contentLine2 = {\n            index: 0,\n            str: 'FROM T WHERE key = k'\n          }\n          const statusTextLine1 = document.getElementById('client-message-status-text1');\n          const statusTextLine2 = document.getElementById('client-message-status-text2');\n          HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n          HelperFunctions.showElement(statusElem);\n          anime({\n            targets: contentLine1,\n            index: contentLine1.str.length,\n            easing: 'linear',\n            duration: 600,\n            update: function() {\n              statusTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n            },\n            complete: () => {\n              anime({\n                targets: contentLine2,\n                index: contentLine2.str.length,\n                easing: 'linear',\n                duration: 900,\n                update: function() {\n                  statusTextLine2.innerHTML = contentLine2.str.substr(0, contentLine2.index);\n                },\n                complete: () => HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false)\n              });\n            }\n          });\n\n\t\t\t\t\tthis.animationState = ANIMATION_STATE_PERFORMED_READ_ON_LEADER;\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tanimationState: ANIMATION_STATE_PERFORMED_READ_ON_LEADER,\n\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_PERFORMED_READ_ON_LEADER: {\n\t\t\t\t// Leader contacts followers to obtain a consensus on current value\n\t\t\t\tHelperFunctions.hideElement(document.getElementById('client-message-status'));\n        HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n        document.getElementById('client-message-status-text1').innerHTML = '';\n        document.getElementById('client-message-status-text2').innerHTML = ''\n\t\t\t\tconst statusElem = document.getElementById('node-c-message-status');\n\t\t\t\tHelperFunctions.showElement(document.getElementById('node-c-message-bubble'));\n\t\t\t\tHelperFunctions.showElement(statusElem);\n\t\t\t\tconst contentLine1 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'Per raft protocol, leader should'\n\t\t\t\t}\n\t\t\t\tconst contentLine2 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'obtain majority heartbeat.'\n\t\t\t\t}\n\t\t\t\tconst leaderTextLine1 = document.getElementById('node-c-message-status-text1');\n\t\t\t\tconst leaderTextLine2 = document.getElementById('node-c-message-status-text2')\n\t\t\t\tanime({\n\t\t\t\t\ttargets: contentLine1,\n\t\t\t\t\tindex: contentLine1.str.length,\n\t\t\t\t\teasing: 'linear',\n\t\t\t\t\tduration: 800,\n\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\tleaderTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\tanime({\n\t\t\t\t\t\t\ttargets: contentLine2,\n\t\t\t\t\t\t\tindex: contentLine2.str.length,\n\t\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\t\tduration: 1040,\n\t\t\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\t\t\tleaderTextLine2.textContent = contentLine2.str.substr(0, contentLine2.index);\n              },\n              complete: () => HelperFunctions.logMessageFromLeaderToFollowers(false)\n            });\n            \n            this.animationState = ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tresolve({\n\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\tdelay: 1000\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS: {\n        const receivedAckAnimation = HelperFunctions.logMessageAckFromFollowersToLeader();\n\n        receivedAckAnimation[0].finished.then(() => {\n          // Once majority is obtained. The leader returns value back to the client\n          document.getElementById('node-c-message-status-text1').textContent = 'Leader:';\n          document.getElementById('node-c-message-status-text2').textContent = '';\n          const leaderText1 = {\n            index: 7,\n            str: 'Majority heartbeat obtained,'\n          }\n          const leaderText2 = {\n            index: 0,\n            str: 'raft leader can serve read.'\n          }\n          const ltxt1 = document.getElementById('node-c-message-status-text1');\n          const ltxt2 = document.getElementById('node-c-message-status-text2')\n          anime({\n            targets: leaderText1,\n            index: leaderText1.str.length,\n            easing: 'linear',\n            duration: 800,\n            update: function() {\n              ltxt1.textContent = leaderText1.str.substr(0, leaderText1.index);\n            },\n            complete: () => {\n              anime({\n                targets: leaderText2,\n                index: leaderText2.str.length,\n                easing: 'linear',\n                duration: 1080,\n                update: function() {\n                  ltxt2.textContent = leaderText2.str.substr(0, leaderText2.index);\n                },\n                complete: () => {\n                  var animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE);\n                  animation.finished.then(() => {\n                    HelperFunctions.setSVGText({targetId: 'client-node-value', text: `value: ${SET_VALUE1}`, showElement: true });\n\n                    this.animationState = ANIMATION_STATE_CLIENT_FINISH_OPERATION;\n                    resolve({\n                      animationState: this.animationState,\n                      delay: 100\n                    });\n                  });\n                }\n              });\n            }\n          });\n        })\n\t\t\t\tbreak;\n      }\n      case ANIMATION_STATE_CLIENT_FINISH_OPERATION: {\n\t\t\t\tHelperFunctions.hideElement(document.getElementById('node-c-message-bubble'));\n\t\t\t\tHelperFunctions.hideElement(document.getElementById('node-c-message-status'));\n        this.changeMainText('If nodes are in different regions, obtaining majority heartbeat is expensive. Query has high latency.');\n        this.animationState = Constants.ANIMATION_STATE_FINISHED;\n        this.setState({ animationFinished: true });\n        resolve({\n          animationState: this.animationState,\n          delay: 100\n        });\n        break;\n      }\n\t\t\tcase Constants.ANIMATION_STATE_FINISHED: {\n\t\t\t\tresolve({\n\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\tdelay: 100,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconsole.error('Unrecognized state: ' + this.animationState);\n\t\t\t\treject('Unrecognized state: ' + this.animationState);\n\t\t\t}\n\t\t}\n  }\n  \n  onPrevious() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onPreviousInternal(resolve,reject);\n\t\t});\n  }\n\n  onPreviousInternal(resolve,reject) {\n    // Text Containers underneath each Node\n    const nodeATextContainer = document.getElementById('node-a-term-text-rect');\n    const nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n    const nodeCTextContainer = document.getElementById('node-c-term-text-rect');\n    // Text Term (Line 1)\n    const nodeATermText = document.getElementById('node-a-term-text');\n    const nodeBTermText = document.getElementById('node-b-term-text');\n    const nodeCTermText = document.getElementById('node-c-term-text');\n    // Text Extra (Line 2)\n    const nodeAExtraText = document.getElementById('node-a-extra-text');\n    const nodeBExtraText = document.getElementById('node-b-extra-text');\n    const nodeCExtraText = document.getElementById('node-c-extra-text');\n    // Highlight for Text Extra (Line 2)\n    const nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n    const nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n    const nodeCExtraHighlight = document.getElementById('node-c-text-highlight');\n    // Text Extra (Line 3)\n    // const nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n    // const nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n    // const nodeCExtraText2 = document.getElementById('node-c-extra-text2');\n    \n\t\tswitch(this.animationState) {\n\n\t\t\tcase ANIMATION_STATE_EXPLAIN_PROTOCOL: {\n        // Undo phase\n        this.changeMainText('');\n        this.animationState = Constants.ANIMATION_STATE_INITIAL;\n\n        resolve({\n          animationState: Constants.ANIMATION_STATE_INITIAL,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_LEADER_ELECTION: {\n        // Undo phase\n        HelperFunctions.hideElement(nodeATextContainer);\n        HelperFunctions.hideElement(nodeBTextContainer);\n        HelperFunctions.hideElement(nodeCTextContainer);\n        // Redo previous phase\n        HelperFunctions.showElement(this.mainTextSect);\n        this.changeMainText('Letâ€™s say we have a 3-node raft group.', () => { this.animationState = ANIMATION_STATE_EXPLAIN_PROTOCOL });\n\n        resolve({\n          animationState: ANIMATION_STATE_EXPLAIN_PROTOCOL,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_NODE_DATA: {\n        // Undo phase\n        document.getElementById('node-c-circle').classList.remove('leader-node');\n        nodeATermText.innerHTML = '';\n        nodeBTermText.innerHTML = '';\n        nodeCTermText.innerHTML = '';\n\n        // Redo previous phase\n        this.changeMainText('Nodes would have performed leader election..', () => {\n          nodeAExtraText.innerHTML = 'Voted For C';\n          nodeBExtraText.innerHTML = 'Voted For C';\n          nodeCExtraText.innerHTML = 'Voted For C';\n        })\n        this.animationState = ANIMATION_STATE_LEADER_ELECTION\n        resolve({\n          animationState: ANIMATION_STATE_LEADER_ELECTION,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_CLIENT_INTRODUCED: {\n        // Undo phase\n        document.getElementById('node-c-circle').classList.remove('leader-node');\n        HelperFunctions.hideElement(nodeAExtraHighlight);\n        HelperFunctions.hideElement(nodeBExtraHighlight);\n        HelperFunctions.hideElement(nodeCExtraHighlight);\n\n        // Redo previous phase\n        nodeAExtraText.innerHTML = '';\n        nodeBExtraText.innerHTML = '';\n        nodeCExtraText.innerHTML = '';\n\t\t\t\tthis.changeMainText('Node C is the current raft leader, denoted by black border.', () => {\n          document.getElementById('node-c-circle').classList.add('leader-node');\n          nodeATermText.innerHTML = 'Term: 1';\n          nodeBTermText.innerHTML = 'Term: 1';\n          nodeCTermText.innerHTML = 'Term: 1';\n        });\n        this.animationState = ANIMATION_STATE_NODE_DATA;\n        resolve({\n          animationState: ANIMATION_STATE_NODE_DATA,\n          delay: 100,\n        });\n        break;\n      }\n      case ANIMATION_STATE_PERFORMED_READ_ON_LEADER: {\n        HelperFunctions.hideElement(document.getElementById('client-message-status'));\n        HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n        HelperFunctions.hideClient();\n        document.getElementById('client-message-status-text1').innerHTML = '';\n        document.getElementById('client-message-status-text2').innerHTML = '';\n        this.changeMainText('Assume all nodes have data: <br />(key,value) = (k, V1)', () => {\n          HelperFunctions.showElement(nodeAExtraHighlight);\n          HelperFunctions.showElement(nodeBExtraHighlight);\n          HelperFunctions.showElement(nodeCExtraHighlight);\n          this.animationState = ANIMATION_STATE_CLIENT_INTRODUCED;\n          resolve({\n            animationState: ANIMATION_STATE_CLIENT_INTRODUCED,\n            delay: 100,\n          });\n        })\n        break;\n      }\n      case ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS: {\n        const statusElem = document.getElementById('node-c-message-status');\n\t\t\t\tHelperFunctions.hideElement(document.getElementById('node-c-message-bubble'));\n\t\t\t\tHelperFunctions.hideElement(statusElem);\n\t\t\t\tdocument.getElementById('node-c-message-status-text1').innerHTML = '';\n        document.getElementById('node-c-message-status-text2').innerHTML = '';\n        var introduceClientAnimation = HelperFunctions.introduceClient('');\n        this.changeMainText('');\n\n\t\t\t\tintroduceClientAnimation.finished.then(() => {\n          HelperFunctions.hideElement(nodeAExtraHighlight);\n          HelperFunctions.hideElement(nodeBExtraHighlight);\n          HelperFunctions.hideElement(nodeCExtraHighlight);\n\n          HelperFunctions.showElement(document.getElementById('client-message'));\n          const statusElem = document.getElementById('client-message-status');\n          document.getElementById('client-message-status-text1');\n          const contentLine1 = {\n            index: 0,\n            str: 'SELECT value'\n          }\n          const contentLine2 = {\n            index: 0,\n            str: 'FROM T WHERE key = k'\n          }\n          const statusTextLine1 = document.getElementById('client-message-status-text1');\n          const statusTextLine2 = document.getElementById('client-message-status-text2');\n          HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n          HelperFunctions.showElement(statusElem);\n          anime({\n            targets: contentLine1,\n            index: contentLine1.str.length,\n            easing: 'linear',\n            duration: 600,\n            update: function() {\n              statusTextLine1.innerHTML = contentLine1.str.substr(0, contentLine1.index);\n            },\n            complete: () => {\n              anime({\n                targets: contentLine2,\n                index: contentLine2.str.length,\n                easing: 'linear',\n                duration: 900,\n                update: function() {\n                  statusTextLine2.innerHTML = contentLine2.str.substr(0, contentLine2.index);\n                },\n                complete: () => {\n                  const anim = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false);\n                  anim.finished.then(() => {\n                    this.animationState = ANIMATION_STATE_PERFORMED_READ_ON_LEADER;\n                    resolve({\n                      animationState: ANIMATION_STATE_PERFORMED_READ_ON_LEADER,\n                      delay: 100,\n                    });\n                  })\n                }\n              });\n            }\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_CLIENT_FINISH_OPERATION: {\n        const leaderTextLine1 = document.getElementById('node-c-message-status-text1');\n        const leaderTextLine2 = document.getElementById('node-c-message-status-text2');\n        HelperFunctions.hideElement(document.getElementById('client-node-value'));\n        leaderTextLine1.innerHTML = '';\n        leaderTextLine2.innerHTML = '';\n        \n        const contentLine1 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'Per raft protocol, leader should'\n\t\t\t\t}\n\t\t\t\tconst contentLine2 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'obtain majority heartbeat.'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tanime({\n\t\t\t\t\ttargets: contentLine1,\n\t\t\t\t\tindex: contentLine1.str.length,\n\t\t\t\t\teasing: 'linear',\n\t\t\t\t\tduration: 800,\n\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\tleaderTextLine1.textContent = contentLine1.str.substr(0, contentLine1.index);\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\tanime({\n\t\t\t\t\t\t\ttargets: contentLine2,\n\t\t\t\t\t\t\tindex: contentLine2.str.length,\n\t\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\t\tduration: 1040,\n\t\t\t\t\t\t\tupdate: function() {\n\t\t\t\t\t\t\t\tleaderTextLine2.textContent = contentLine2.str.substr(0, contentLine2.index);\n              },\n              complete: () => HelperFunctions.logMessageFromLeaderToFollowers(false)\n            });\n            \n            this.animationState = ANIMATION_STATE_LEADER_RECEIVED_MAJORITY_ON_VALUE_FROM_FOLLOWERS;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n\t\t\t\t\t}\n        });\n        break;\n      }\n      case Constants.ANIMATION_STATE_FINISHED: {\n        this.changeMainText('');\n        HelperFunctions.hideElement(document.getElementById('client-node-value'))\n        document.getElementById('node-c-message-status-text1').innerHTML = '';\n        document.getElementById('node-c-message-status-text2').innerHTML = '';\n        this.setState({ animationFinished: false });\n        const receivedAckAnimation = HelperFunctions.logMessageAckFromFollowersToLeader();\n\n        receivedAckAnimation[0].finished.then(() => {\n          // Once majority is obtained. The leader returns value back to the client\n          const statusElem = document.getElementById('node-c-message-status');\n          HelperFunctions.showElement(document.getElementById('node-c-message-bubble'));\n          HelperFunctions.showElement(statusElem);\n          \n          const leaderText1 = {\n            index: 7,\n            str: 'Majority heartbeat obtained,'\n          }\n          const leaderText2 = {\n            index: 0,\n            str: 'raft leader can serve read.'\n          }\n          const ltxt1 = document.getElementById('node-c-message-status-text1');\n          const ltxt2 = document.getElementById('node-c-message-status-text2')\n          anime({\n            targets: leaderText1,\n            index: leaderText1.str.length,\n            easing: 'linear',\n            duration: 800,\n            update: function() {\n              ltxt1.textContent = leaderText1.str.substr(0, leaderText1.index);\n            },\n            complete: () => {\n              anime({\n                targets: leaderText2,\n                index: leaderText2.str.length,\n                easing: 'linear',\n                duration: 1080,\n                update: function() {\n                  ltxt2.textContent = leaderText2.str.substr(0, leaderText2.index);\n                },\n                complete: () => {\n                  var animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE);\n                  animation.finished.then(() => {\n                    HelperFunctions.setSVGText({targetId: 'client-node-value', text: `value: ${SET_VALUE1}`, showElement: true });\n\n                    this.animationState = ANIMATION_STATE_CLIENT_FINISH_OPERATION;\n                    resolve({\n                      animationState: this.animationState,\n                      delay: 100\n                    });\n                  });\n                }\n              });\n            }\n          });\n        });\n        break;\n      }\n      default: {\n        console.error('Unrecognized state or unimplemented: ' + this.animationState);\n        reject('Unrecognized state or unimplemented: ' + this.animationState);\n      }\n    }\n  }\n  \n\tchangeMainText(text, onComplete) {\n\t\tHelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div id=\"main-diagram\">\n\t\t\t\t\t<MainDiagram/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default RaftReadOperationAnimation;\n"]},"metadata":{},"sourceType":"module"}