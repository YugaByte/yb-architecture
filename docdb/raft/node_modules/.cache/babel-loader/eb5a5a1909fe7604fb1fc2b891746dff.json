{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/code/yb-architecture/animations/src/LeaderLeasesAnimation.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nvar ANIMATION_STATE_LEADER_REPLICATES_LEASE = \"ANIMATION_STATE_LEADER_REPLICATES_LEASE\";\nvar ANIMATION_STATE_LEADER_READS_PROTOCOL = 'ANIMATION_STATE_LEADER_READS_PROTOCOL';\nvar ANIMATION_STATE_START_LEADER_LEASE = 'ANIMATION_STATE_START_LEADER_LEASE';\nvar ANIMATION_STATE_CLIENT_UPDATE_FAILS = 'ANIMATION_STATE_CLIENT_UPDATE_FAILS';\nvar ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED = \"ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED\";\nvar ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED = \"ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED\";\nvar ANIMATION_STATE_NEW_LEADER_ELECTED = \"ANIMATION_STATE_NEW_LEADER_ELECTED\";\nvar ANIMATION_STATE_LEADER_LEASE_DURATION = 'ANIMATION_STATE_LEADER_LEASE_DURATION';\nvar ANIMATION_STATE_OLD_LEADER_STILL_READABLE = 'ANIMATION_STATE_OLD_LEADER_STILL_READABLE';\nvar ANIMATION_STATE_OLD_LEASE_EXPIRES = 'ANIMATION_STATE_OLD_LEASE_EXPIRES';\nvar ANIMATION_STATE_LEADER_LEASE_CONCLUSION = 'ANIMATION_STATE_LEADER_LEASE_CONCLUSION';\nvar ANIMATION_STATE_NEW_LEADER_SENT_LEASES = \"ANIMATION_STATE_NEW_LEADER_SENT_LEASES\";\nvar ORIGINAL_LEADER_INITIAL_DURATION = 3000;\nvar LEADER_REPLICATION_DURATION = 5000;\nexport var LeaderLeaseAnimation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeaderLeaseAnimation, _Component);\n\n  function LeaderLeaseAnimation(props) {\n    var _this;\n\n    _classCallCheck(this, LeaderLeaseAnimation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeaderLeaseAnimation).call(this, props));\n    _this.animationState = Constants.ANIMATION_STATE_INITIAL;\n    _this.state = {\n      previousEnabled: true\n    };\n\n    _this.init();\n\n    return _this;\n  }\n\n  _createClass(LeaderLeaseAnimation, [{\n    key: \"init\",\n    value: function init() {\n      this.nodeATimerAnimation = null;\n      this.nodeBTimerAnimation = null;\n      this.nodeCTimerAnimation = null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mainTextSect = document.getElementById('center-message-text');\n      this.timersAreActive = false;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.timersAreActive) {\n        this.pauseTimers();\n      }\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      if (this.timersAreActive) {\n        this.resumeTimers();\n      }\n    }\n  }, {\n    key: \"onNext\",\n    value: function onNext() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.onNextInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onNextInternal\",\n    value: function onNextInternal(resolve, reject) {\n      var _this3 = this;\n\n      // Text Containers underneath each Node\n      var nodeATextContainer = document.getElementById('node-a-term-text-rect');\n      var nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n      var nodeCTextContainer = document.getElementById('node-c-term-text-rect'); // Text Term (Line 1)\n\n      var nodeATermText = document.getElementById('node-a-term-text');\n      var nodeBTermText = document.getElementById('node-b-term-text');\n      var nodeCTermText = document.getElementById('node-c-term-text'); // Highlight for Text Term (Line 1) -> Only 2 needed\n\n      var nodeATermHighlight = document.getElementById('node-a-term-highlight');\n      var nodeBTermHighlight = document.getElementById('node-b-term-highlight'); // Text Extra (Line 2)\n\n      var nodeAExtraText = document.getElementById('node-a-extra-text');\n      var nodeBExtraText = document.getElementById('node-b-extra-text');\n      var nodeCExtraText = document.getElementById('node-c-extra-text'); // Highlight for Text Extra (Line 2)\n\n      var nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n      var nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n      var nodeCExtraHighlight = document.getElementById('node-c-text-highlight'); // Text Extra (Line 3)\n\n      var nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n      var nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n      var nodeCExtraText2 = document.getElementById('node-c-extra-text2'); // MESSAGE OBJECTS\n\n      var nodeAMessageBubble = document.getElementById('node-a-message-bubble');\n      var nodeAMessageStatus = document.getElementById('node-a-message-status');\n      var nodeCMessageBubble = document.getElementById('node-c-message-bubble');\n      var nodeCMessageStatus = document.getElementById('node-c-message-status'); // Client\n\n      var clientMessageBubble = document.getElementById('client-message-bubble');\n      var clientQueryMessage = document.getElementById('client-query-message');\n      var clientMessageStatus = document.getElementById('client-message-status');\n      var clientMessageBackground = document.getElementById('client-message-status-bg');\n\n      switch (this.animationState) {\n        case Constants.ANIMATION_STATE_INITIAL:\n          {\n            //////////////////// initial setup ////////////////////\n            // hide all outer circles (TODO: revisit this approach)\n            var nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\n            for (var i = 0; i < nodeOuterCircles.length; i++) {\n              HelperFunctions.hideElement(nodeOuterCircles[i]);\n            } //////////////////////////////////////////////////////\n\n\n            this.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', function () {\n              // make Node C  the leader\n              var nodeC = document.getElementById('node-c-circle');\n              nodeC.classList.add('leader-node');\n              HelperFunctions.showElement(nodeATextContainer);\n              HelperFunctions.showElement(nodeBTextContainer);\n              HelperFunctions.showElement(nodeCTextContainer);\n              HelperFunctions.showElement(nodeATermText);\n              HelperFunctions.showElement(nodeBTermText);\n              HelperFunctions.showElement(nodeCTermText);\n              HelperFunctions.showElement(nodeAExtraText);\n              HelperFunctions.showElement(nodeBExtraText);\n              HelperFunctions.showElement(nodeCExtraText);\n              nodeATermText.innerHTML = 'Term: 1';\n              nodeBTermText.innerHTML = 'Term: 1';\n              nodeCTermText.innerHTML = 'Term: 1';\n              nodeAExtraText.innerHTML = '(k, V1)';\n              nodeBExtraText.innerHTML = '(k, V1)';\n              nodeCExtraText.innerHTML = '(k, V1)';\n              _this3.animationState = ANIMATION_STATE_LEADER_READS_PROTOCOL;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 1000\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_READS_PROTOCOL:\n          {\n            this.changeMainText('Using leader leases to safely perform reads from the leader..', function () {\n              _this3.animationState = ANIMATION_STATE_START_LEADER_LEASE;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 1000\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_START_LEADER_LEASE:\n          {\n            this.changeMainText('');\n            HelperFunctions.showElement(nodeCMessageBubble);\n            HelperFunctions.showElement(nodeCMessageStatus);\n            var statusText1 = document.getElementById('node-c-message-status-text1');\n            var statusText2 = document.getElementById('node-c-message-status-text2');\n            var contentLine1 = {\n              index: 0,\n              str: 'Raft leader starts a'\n            };\n            var contentLine2 = {\n              index: 0,\n              str: 'new lease timer for itself.'\n            };\n            anime({\n              targets: contentLine1,\n              index: contentLine1.str.length,\n              easing: 'linear',\n              duration: 600,\n              update: function update() {\n                statusText1.textContent = contentLine1.str.substr(0, contentLine1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: contentLine2,\n                  index: contentLine2.str.length,\n                  easing: 'linear',\n                  duration: 600,\n                  update: function update() {\n                    statusText2.textContent = contentLine2.str.substr(0, contentLine2.index);\n                  },\n                  complete: function complete() {\n                    _this3.timersAreActive = true; // this.nodeCTimerAnimation = HelperFunctions.startLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_TIMER_DURATION);\n\n                    console.log(_this3.nodeCTimerAnimation);\n\n                    if (_this3.nodeCTimerAnimation) {\n                      _this3.nodeCTimerAnimation.restart();\n                    } else {\n                      _this3.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_INITIAL_DURATION, 90, true);\n\n                      _this3.nodeCTimerAnimation.play();\n                    }\n\n                    _this3.animationState = ANIMATION_STATE_LEADER_REPLICATES_LEASE;\n                    resolve({\n                      animationState: _this3.animationState,\n                      delay: 100,\n                      asyncAnimation: true\n                    });\n                  }\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_REPLICATES_LEASE:\n          {\n            // this.changeMainText('Leader replicates a lease interval to followers', () => {\n            HelperFunctions.hideElement(nodeCMessageBubble);\n            HelperFunctions.hideElement(nodeCMessageStatus);\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n            var textAlt = document.getElementById('node-c-message-text-alt');\n            var leaseToA = document.getElementById('node-c-lease-to-node-a');\n            var content = {\n              index: 0,\n              str: 'Raft leader then replicates a\\nlease interval to followers. Note\\nthe lease timer on C has started\\nbefore replicating to A and B.'\n            };\n            var nodeCTextAnimation = anime({\n              targets: content,\n              index: content.str.length,\n              easing: 'linear',\n              duration: 2500,\n              update: function update() {\n                textAlt.innerText = content.str.substr(0, content.index);\n              }\n            });\n            var nodeALeaseAnimation = anime({\n              targets: leaseToA,\n              translateX: -280,\n              translateY: 0,\n              easing: 'linear',\n              duration: 1500,\n              begin: function begin() {\n                HelperFunctions.showElement(leaseToA);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(leaseToA);\n                leaseToA.style.transform = 'none';\n              }\n            });\n            this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, LEADER_REPLICATION_DURATION, 60);\n            var leaseToB = document.getElementById('node-c-lease-to-node-b');\n            var nodeBLeaseAnimation = anime({\n              targets: leaseToB,\n              translateX: -150,\n              translateY: -280,\n              easing: 'linear',\n              duration: 1500,\n              begin: function begin() {\n                HelperFunctions.showElement(leaseToB);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(leaseToB);\n                leaseToB.style.transform = 'none';\n              }\n            });\n            Promise.all([nodeCTextAnimation.finished, nodeALeaseAnimation.finished, nodeBLeaseAnimation.finished, this.nodeCTimerAnimation]).then(function () {\n              _this3.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, ORIGINAL_LEADER_INITIAL_DURATION, 85);\n              _this3.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, ORIGINAL_LEADER_INITIAL_DURATION, 90);\n              _this3.animationState = ANIMATION_STATE_LEADER_LEASE_DURATION;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 500,\n                asyncAnimation: true\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_LEASE_DURATION:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n            document.getElementById('node-c-message-text-alt').innerHTML = '';\n            this.changeMainText('Any new leader must wait out the existing Leader Lease duration before acquiring lease.', function () {\n              _this3.animationState = ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED:\n          {\n            this.changeMainText('Now suppose the original leader gets network partitioned', function () {\n              // partition original leader\n              HelperFunctions.partitionNodeC();\n              _this3.animationState = ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED:\n          {\n            this.changeMainText('');\n            HelperFunctions.showElement(nodeAMessageBubble);\n            HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n            var nodeAContent = {\n              index: 0,\n              str: 'A wins new leader election\\n but cannot perform any\\noperations until Leader\\nLease on A runs out.'\n            };\n            anime({\n              targets: nodeAContent,\n              index: nodeAContent.str.length,\n              easing: 'linear',\n              duration: 1500,\n              update: function update() {\n                nodeAMessageStatus.innerText = nodeAContent.str.substr(0, nodeAContent.index);\n              },\n              complete: function complete() {\n                // elect Node A as new leader candidate\n                var nodeA = document.getElementById('node-a-circle');\n                nodeA.classList.add('leader-candidate-node');\n                HelperFunctions.setSVGText({\n                  targetId: 'node-a-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.setSVGText({\n                  targetId: 'node-b-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.showElement(nodeATermHighlight);\n                HelperFunctions.showElement(nodeBTermHighlight);\n                _this3.animationState = ANIMATION_STATE_CLIENT_UPDATE_FAILS;\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_UPDATE_FAILS:\n          {\n            HelperFunctions.hideElement(nodeAMessageBubble);\n            HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n            nodeAMessageStatus.innerHTML = '';\n            HelperFunctions.hideElement(nodeATermHighlight);\n            HelperFunctions.hideElement(nodeBTermHighlight);\n            this.changeMainText('If client tries to write to A, operation is rejected..', function () {\n              HelperFunctions.introduceClient();\n              HelperFunctions.showElement(clientMessageBubble);\n              HelperFunctions.showElement(clientMessageBackground);\n              HelperFunctions.showElement(clientQueryMessage);\n              var clientContent1 = {\n                index: 0,\n                str: 'UPDATE T SET'\n              };\n              var clientContent2 = {\n                index: 0,\n                str: 'value = V2 WHERE'\n              };\n              var clientContent3 = {\n                index: 0,\n                str: ' key = k'\n              };\n              var statusText1 = document.getElementById('client-query-message-text1');\n              var statusText2 = document.getElementById('client-query-message-text2');\n              var statusText3 = document.getElementById('client-query-message-text3');\n              anime({\n                targets: clientContent1,\n                index: clientContent1.str.length,\n                easing: 'linear',\n                duration: 400,\n                update: function update() {\n                  statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: clientContent2,\n                    index: clientContent2.str.length,\n                    easing: 'linear',\n                    duration: 400,\n                    update: function update() {\n                      statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n                    },\n                    complete: function complete() {\n                      anime({\n                        targets: clientContent3,\n                        index: clientContent3.str.length,\n                        easing: 'linear',\n                        duration: 400,\n                        update: function update() {\n                          statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                        },\n                        complete: function complete() {\n                          var messageContrainerElement = document.getElementById('client-message');\n                          var messageElement = document.getElementById('client-message-circle');\n                          var messageTextElement = document.getElementById('client-message-text');\n                          HelperFunctions.messageFromClient(Constants.NODE_A, {\n                            onBegin: function onBegin() {\n                              HelperFunctions.showElement(messageContrainerElement);\n                              messageElement.classList.add('log-message');\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: ''\n                              });\n                            },\n                            onChangeComplete: function onChangeComplete() {\n                              messageElement.classList.remove('log-message');\n                              messageElement.classList.add('error-message');\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: 'Rejected'\n                              }); // messageTextElement\n                            },\n                            onComplete: function onComplete() {\n                              messageElement.classList.remove('error-message');\n                              HelperFunctions.hideElement(messageContrainerElement);\n                              messageContrainerElement.style.transform = 'none';\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: ''\n                              });\n                              HelperFunctions.showElement(document.getElementById('client-node-value-alt'));\n                              document.getElementById('client-node-value-error-header').innerHTML = 'Query Rejected:';\n                              document.getElementById('client-node-value-error-subtitle').innerHTML = 'Cannot find raft leader';\n                            },\n                            alternate: true\n                          });\n                          _this3.animationState = ANIMATION_STATE_OLD_LEADER_STILL_READABLE;\n                          resolve({\n                            animationState: _this3.animationState,\n                            delay: 100\n                          });\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_OLD_LEADER_STILL_READABLE:\n          {\n            this.changeMainText('');\n            HelperFunctions.hideElement(document.getElementById('client-query-message'));\n            HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n            var _contentLine = {\n              index: 0,\n              str: 'Client can still read from C and get a valid response. Writes, however, are unavailable at this moment.'\n            };\n            anime({\n              targets: _contentLine,\n              index: _contentLine.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                clientMessageStatus.textContent = _contentLine.str.substr(0, _contentLine.index);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n                _this3.animationState = ANIMATION_STATE_OLD_LEASE_EXPIRES;\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_OLD_LEASE_EXPIRES:\n          {\n            HelperFunctions.hideElement(clientMessageBubble);\n            document.getElementById('client-message-status').innerHTML = '';\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n            var nodeCTextAlt = document.getElementById('node-c-message-text-alt');\n            var _content = {\n              index: 0,\n              str: 'Leader Lease of C will run out\\nfirst [since it started first]. \\nC now steps down as leader.'\n            };\n            this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 6000, 25);\n            this.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 6000, 30);\n            this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 6000);\n            anime({\n              targets: _content,\n              index: _content.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                nodeCTextAlt.textContent = _content.str.substr(0, _content.index);\n              }\n            });\n            this.nodeCTimerAnimation.finished.then(function () {\n              var nodeC = document.getElementById('node-c-circle');\n              nodeC.classList.remove('leader-node');\n              _this3.animationState = ANIMATION_STATE_NEW_LEADER_ELECTED;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100,\n                asyncAnimation: true\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_ELECTED:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n            document.getElementById('node-c-message-text-alt').innerHTML = '';\n            HelperFunctions.showElement(document.getElementById('node-a-message-bubble'));\n            HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n            var nodeAMessage = document.getElementById('node-a-message-status');\n            var _content2 = {\n              index: 0,\n              str: 'Once Leader Lease on A expires, it becomes raft leader.'\n            };\n            var textAnimation = anime({\n              targets: _content2,\n              index: _content2.str.length,\n              easing: 'linear',\n              duration: 800,\n              update: function update() {\n                nodeAMessage.textContent = _content2.str.substr(0, _content2.index);\n              },\n              complete: function complete() {\n                _this3.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 2000);\n\n                _this3.nodeATimerAnimation.finished.then(function () {\n                  var nodeA = document.getElementById('node-a-circle');\n                  HelperFunctions.showElement(document.getElementById('node-a-timer-highlight'));\n                  nodeA.classList.remove('leader-candidate-node');\n                  nodeA.classList.add('leader-node'); // hide Node A's leader lease timer\n\n                  HelperFunctions.hideElement(document.getElementById(HelperFunctions.leaderLeaseTimerId(Constants.NODE_A))); // and start its my lease timer\n\n                  _this3.nodeATimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_A, 5000, 50); // then send leader lease message to B\n\n                  var leaseToB = document.getElementById('node-a-lease-to-node-b');\n                  anime({\n                    targets: leaseToB,\n                    translateX: 150,\n                    translateY: -280,\n                    easing: 'linear',\n                    duration: 1500,\n                    begin: function begin() {\n                      HelperFunctions.showElement(leaseToB);\n                    },\n                    complete: function complete() {\n                      HelperFunctions.hideElement(leaseToB);\n                      leaseToB.style.transform = 'none';\n\n                      _this3.nodeBTimerAnimation.restart();\n\n                      _this3.animationState = ANIMATION_STATE_NEW_LEADER_SENT_LEASES;\n                      resolve({\n                        animationState: _this3.animationState,\n                        delay: 100\n                      });\n                    }\n                  });\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_SENT_LEASES:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n            HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n            HelperFunctions.hideElement(document.getElementById('node-a-timer-highlight'));\n            document.getElementById('node-a-message-status').innerHTML = '';\n            HelperFunctions.showElement(clientMessageBubble);\n            var messageStatus = document.getElementById('client-message-status');\n            var _content3 = {\n              index: 0,\n              str: 'From here on, client can issue reads/writes to the new leader.'\n            };\n            anime({\n              targets: _content3,\n              index: _content3.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                messageStatus.textContent = _content3.str.substr(0, _content3.index);\n              },\n              complete: function complete() {\n                // initiate a raft round\n                // client message to A\n                var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, '(k, V2)');\n                animation.finished.then(function () {\n                  // message with ack from A to B\n                  nodeAExtraText.innerHTML = '(k, V2)';\n                  var messageToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, '(k, V2)', false, 0, _this3.nodeBTimerAnimation, _this3.nodeATimerAnimation);\n                  messageToBAnimation.finished.then(function () {\n                    nodeBExtraText.innerHTML = '(k, V2)';\n                    HelperFunctions.hideElement(nodeAExtraText2);\n                    HelperFunctions.showElement(nodeAExtraHighlight); // confirmation message back to B and the client\n\n                    var confirmToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE, false, false, '', true);\n                    var confirmToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, '', true, 300, _this3.nodeBTimerAnimation);\n                    Promise.all([confirmToClientAnimation.finished, confirmToBAnimation.finished]).then(function () {\n                      HelperFunctions.hideElement(nodeBExtraText2);\n                      nodeBExtraText.innerHTML = '(k, V2)';\n                      HelperFunctions.showElement(nodeBExtraHighlight);\n                      _this3.animationState = ANIMATION_STATE_LEADER_LEASE_CONCLUSION;\n\n                      _this3.stopTimers();\n\n                      resolve({\n                        animationState: _this3.animationState,\n                        delay: 100\n                      });\n                    });\n                  });\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_LEASE_CONCLUSION:\n          {\n            HelperFunctions.hideElement(nodeAExtraHighlight);\n            HelperFunctions.hideElement(nodeBExtraHighlight);\n            HelperFunctions.hideElement(clientMessageBubble);\n            HelperFunctions.hideElement(clientMessageBackground);\n            document.getElementById('client-message-status').innerHTML = '';\n            this.changeMainText('Leader Leases ensure low latency reads even when nodes are across regions.', function () {\n              _this3.animationState = Constants.ANIMATION_STATE_FINISHED;\n\n              _this3.stopTimers();\n\n              _this3.setState({\n                animationFinished: true\n              });\n\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case Constants.ANIMATION_STATE_FINISHED:\n          {\n            console.log('Animation finished. Nothing to do');\n            resolve({\n              animationState: this.animationState,\n              delay: 100\n            });\n            break;\n          }\n\n        default:\n          console.error('Unrecognized state: ' + this.animationState);\n          reject('Unrecognized state');\n      }\n    }\n  }, {\n    key: \"onPrevious\",\n    value: function onPrevious() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4.onPreviousInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onPreviousInternal\",\n    value: function onPreviousInternal(resolve, reject) {\n      var _this5 = this;\n\n      // Text Containers underneath each Node\n      var nodeATextContainer = document.getElementById('node-a-term-text-rect');\n      var nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n      var nodeCTextContainer = document.getElementById('node-c-term-text-rect'); // Text Term (Line 1)\n\n      var nodeATermText = document.getElementById('node-a-term-text');\n      var nodeBTermText = document.getElementById('node-b-term-text');\n      var nodeCTermText = document.getElementById('node-c-term-text'); // Highlight for Text Term (Line 1) -> Only 2 needed\n\n      var nodeATermHighlight = document.getElementById('node-a-term-highlight');\n      var nodeBTermHighlight = document.getElementById('node-b-term-highlight'); // Text Extra (Line 2)\n\n      var nodeAExtraText = document.getElementById('node-a-extra-text');\n      var nodeBExtraText = document.getElementById('node-b-extra-text');\n      var nodeCExtraText = document.getElementById('node-c-extra-text'); // Highlight for Text Extra (Line 2)\n\n      var nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n      var nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n      var nodeCExtraHighlight = document.getElementById('node-c-text-highlight'); // Text Extra (Line 3)\n\n      var nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n      var nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n      var nodeCExtraText2 = document.getElementById('node-c-extra-text2'); // MESSAGE OBJECTS\n\n      var nodeAMessageBubble = document.getElementById('node-a-message-bubble');\n      var nodeAMessageStatus = document.getElementById('node-a-message-status');\n      var nodeCMessageBubble = document.getElementById('node-c-message-bubble');\n      var nodeCMessageStatus = document.getElementById('node-c-message-status'); // Client\n\n      var clientMessageBubble = document.getElementById('client-message-bubble');\n      var clientQueryMessage = document.getElementById('client-query-message');\n      var clientMessageStatus = document.getElementById('client-message-status');\n      var clientMessageBackground = document.getElementById('client-message-status-bg');\n\n      switch (this.animationState) {\n        case ANIMATION_STATE_LEADER_READS_PROTOCOL:\n          {\n            HelperFunctions.hideElement(nodeATermText);\n            HelperFunctions.hideElement(nodeBTermText);\n            HelperFunctions.hideElement(nodeCTermText);\n            HelperFunctions.hideElement(nodeAExtraText);\n            HelperFunctions.hideElement(nodeBExtraText);\n            HelperFunctions.hideElement(nodeCExtraText);\n            var nodeC = document.getElementById('node-c-circle');\n            nodeC.classList.remove('leader-node');\n            this.changeMainText('');\n            this.animationState = Constants.ANIMATION_STATE_INITIAL;\n            resolve({\n              animationState: this.animationState,\n              delay: 1000\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_START_LEADER_LEASE:\n          {\n            // Undo phase\n            HelperFunctions.hideElement(nodeATermText);\n            HelperFunctions.hideElement(nodeBTermText);\n            HelperFunctions.hideElement(nodeCTermText);\n            HelperFunctions.hideElement(nodeAExtraText);\n            HelperFunctions.hideElement(nodeBExtraText);\n            HelperFunctions.hideElement(nodeCExtraText);\n            var nodeC = document.getElementById('node-c-circle');\n            nodeC.classList.remove('leader-node'); // Redo phase\n            // hide all outer circles (TODO: revisit this approach)\n\n            var nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\n            for (var i = 0; i < nodeOuterCircles.length; i++) {\n              HelperFunctions.hideElement(nodeOuterCircles[i]);\n            } //////////////////////////////////////////////////////\n\n\n            this.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', function () {\n              // make Node C  the leader\n              nodeC.classList.add('leader-node');\n              HelperFunctions.showElement(nodeATextContainer);\n              HelperFunctions.showElement(nodeBTextContainer);\n              HelperFunctions.showElement(nodeCTextContainer);\n              HelperFunctions.showElement(nodeATermText);\n              HelperFunctions.showElement(nodeBTermText);\n              HelperFunctions.showElement(nodeCTermText);\n              HelperFunctions.showElement(nodeAExtraText);\n              HelperFunctions.showElement(nodeBExtraText);\n              HelperFunctions.showElement(nodeCExtraText);\n              nodeATermText.innerHTML = 'Term: 1';\n              nodeBTermText.innerHTML = 'Term: 1';\n              nodeCTermText.innerHTML = 'Term: 1';\n              nodeAExtraText.innerHTML = '(k, V1)';\n              nodeBExtraText.innerHTML = '(k, V1)';\n              nodeCExtraText.innerHTML = '(k, V1)';\n              _this5.animationState = ANIMATION_STATE_LEADER_READS_PROTOCOL;\n              resolve({\n                animationState: _this5.animationState,\n                delay: 1000\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_REPLICATES_LEASE:\n          {\n            // Undo phase\n            HelperFunctions.hideElement(nodeCMessageBubble);\n            document.getElementById('node-c-message-status-text1').innerHTML = '';\n            document.getElementById('node-c-message-status-text2').innerHTML = '';\n            HelperFunctions.hideElement(document.getElementById('mlease-rect-node-c')); // Redo phase\n\n            this.changeMainText('Using leader leases to safely perform reads from the leader..', function () {\n              _this5.animationState = ANIMATION_STATE_START_LEADER_LEASE;\n              resolve({\n                animationState: _this5.animationState,\n                delay: 1000\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_LEASE_DURATION:\n          {\n            // Undo phase\n            HelperFunctions.hideElement(document.getElementById('llease-rectnode-a'));\n            HelperFunctions.hideElement(document.getElementById('llease-rectnode-b'));\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n            document.getElementById('node-c-message-text-alt').innerHTML = ''; // Redo phase\n\n            this.changeMainText('');\n            HelperFunctions.showElement(nodeCMessageBubble);\n            HelperFunctions.showElement(nodeCMessageStatus);\n            var statusText1 = document.getElementById('node-c-message-status-text1');\n            statusText1.innerHTML = '';\n            var statusText2 = document.getElementById('node-c-message-status-text2');\n            statusText2.innerHTML = '';\n            var contentLine1 = {\n              index: 0,\n              str: 'Raft leader starts a'\n            };\n            var contentLine2 = {\n              index: 0,\n              str: 'new lease timer for itself.'\n            };\n            anime({\n              targets: contentLine1,\n              index: contentLine1.str.length,\n              easing: 'linear',\n              duration: 600,\n              update: function update() {\n                statusText1.textContent = contentLine1.str.substr(0, contentLine1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: contentLine2,\n                  index: contentLine2.str.length,\n                  easing: 'linear',\n                  duration: 600,\n                  update: function update() {\n                    statusText2.textContent = contentLine2.str.substr(0, contentLine2.index);\n                  },\n                  complete: function complete() {\n                    _this5.timersAreActive = true;\n                    _this5.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_INITIAL_DURATION, 90, true);\n\n                    _this5.nodeCTimerAnimation.restart();\n\n                    _this5.animationState = ANIMATION_STATE_LEADER_REPLICATES_LEASE;\n                    resolve({\n                      animationState: _this5.animationState,\n                      delay: 100,\n                      asyncAnimation: true\n                    });\n                  }\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED:\n          {\n            this.changeMainText(''); // this.changeMainText('Leader replicates a lease interval to followers', () => {\n\n            HelperFunctions.hideElement(nodeCMessageBubble);\n            HelperFunctions.hideElement(nodeCMessageStatus);\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n            var textAlt = document.getElementById('node-c-message-text-alt');\n            var leaseToA = document.getElementById('node-c-lease-to-node-a');\n            var content = {\n              index: 0,\n              str: 'Raft leader then replicates a\\nlease interval to followers. Note\\nthe lease timer on C has started\\nbefore replicating to A and B.'\n            };\n            var nodeCTextAnimation = anime({\n              targets: content,\n              index: content.str.length,\n              easing: 'linear',\n              duration: 2500,\n              update: function update() {\n                textAlt.innerText = content.str.substr(0, content.index);\n              }\n            });\n            var nodeALeaseAnimation = anime({\n              targets: leaseToA,\n              translateX: -280,\n              translateY: 0,\n              easing: 'linear',\n              duration: 1500,\n              begin: function begin() {\n                HelperFunctions.showElement(leaseToA);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(leaseToA);\n                leaseToA.style.transform = 'none';\n              }\n            });\n            this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 5000, 60);\n            this.nodeCTimerAnimation.restart();\n            var leaseToB = document.getElementById('node-c-lease-to-node-b');\n            var nodeBLeaseAnimation = anime({\n              targets: leaseToB,\n              translateX: -150,\n              translateY: -280,\n              easing: 'linear',\n              duration: 1500,\n              begin: function begin() {\n                HelperFunctions.showElement(leaseToB);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(leaseToB);\n                leaseToB.style.transform = 'none';\n              }\n            });\n            Promise.all([nodeCTextAnimation.finished, nodeALeaseAnimation.finished, nodeBLeaseAnimation.finished, this.nodeCTimerAnimation]).then(function () {\n              _this5.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 3000, 85);\n              _this5.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 3000, 90);\n              console.log(_this5.nodeBTimerAnimation);\n\n              _this5.nodeATimerAnimation.restart();\n\n              _this5.nodeBTimerAnimation.restart();\n\n              _this5.animationState = ANIMATION_STATE_LEADER_LEASE_DURATION;\n              resolve({\n                animationState: _this5.animationState,\n                delay: 1000,\n                asyncAnimation: true\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED:\n          {\n            this.changeMainText('');\n            HelperFunctions.hideElement(document.getElementById('node-c-partition-wrap'));\n            this.changeMainText('Any new leader must wait out existing Leader Lease duration before acquiring lease.', function () {\n              _this5.animationState = ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED;\n              resolve({\n                animationState: _this5.animationState,\n                delay: 1000\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_UPDATE_FAILS:\n          {\n            HelperFunctions.hideElement(nodeATermHighlight);\n            HelperFunctions.hideElement(nodeBTermHighlight);\n            HelperFunctions.hideElement(nodeAMessageBubble);\n            HelperFunctions.hideElement(document.getElementById('node-c-partition-wrap'));\n            HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n            document.getElementById('node-a-message-status').innerHTML = '';\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.remove('leader-candidate-node');\n            this.changeMainText('Now suppose the original leader gets network partitioned', function () {\n              // partition original leader\n              HelperFunctions.partitionNodeC();\n              _this5.animationState = ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED;\n              resolve({\n                animationState: _this5.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_OLD_LEADER_STILL_READABLE:\n          {\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.remove('leader-candidate-node');\n            HelperFunctions.hideElement(clientMessageBubble);\n            HelperFunctions.hideElement(clientQueryMessage);\n            document.getElementById('client-query-message-text1').innerHTML = '';\n            document.getElementById('client-query-message-text2').innerHTML = '';\n            document.getElementById('client-query-message-text3').innerHTML = '';\n            HelperFunctions.hideElement(document.getElementById('client-node'));\n            HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n            document.getElementById('client-message-text').innerHTML = '';\n            this.changeMainText('');\n            HelperFunctions.showElement(nodeAMessageBubble);\n            HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n            var nodeAContent = {\n              index: 0,\n              str: 'A wins new leader election\\n but cannot perform any\\noperations until Leader\\nLease on A runs out.'\n            };\n            anime({\n              targets: nodeAContent,\n              index: nodeAContent.str.length,\n              easing: 'linear',\n              duration: 1500,\n              update: function update() {\n                nodeAMessageStatus.innerText = nodeAContent.str.substr(0, nodeAContent.index);\n              },\n              complete: function complete() {\n                // elect Node A as new leader candidate\n                var nodeA = document.getElementById('node-a-circle');\n                nodeA.classList.add('leader-candidate-node');\n                HelperFunctions.setSVGText({\n                  targetId: 'node-a-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.setSVGText({\n                  targetId: 'node-b-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.showElement(nodeATermHighlight);\n                HelperFunctions.showElement(nodeBTermHighlight);\n                _this5.animationState = ANIMATION_STATE_CLIENT_UPDATE_FAILS;\n                resolve({\n                  animationState: _this5.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_OLD_LEASE_EXPIRES:\n          {\n            clientMessageStatus.innerHTML = '';\n            HelperFunctions.hideElement(clientMessageBubble);\n            HelperFunctions.hideElement(document.getElementById('client-node'));\n            document.getElementById('client-message-text').innerHTML = '';\n            document.getElementById('client-query-message-text1').innerHTML = '';\n            document.getElementById('client-query-message-text2').innerHTML = '';\n            document.getElementById('client-query-message-text3').innerHTML = '';\n            this.changeMainText('If client tries to write to A, operation is rejected..', function () {\n              HelperFunctions.introduceClient();\n              HelperFunctions.showElement(clientMessageBubble);\n              HelperFunctions.showElement(clientMessageBackground);\n              HelperFunctions.showElement(clientQueryMessage);\n              var clientContent1 = {\n                index: 0,\n                str: 'UPDATE T SET'\n              };\n              var clientContent2 = {\n                index: 0,\n                str: 'value = V2 WHERE'\n              };\n              var clientContent3 = {\n                index: 0,\n                str: ' key = k'\n              };\n              var statusText1 = document.getElementById('client-query-message-text1');\n              var statusText2 = document.getElementById('client-query-message-text2');\n              var statusText3 = document.getElementById('client-query-message-text3');\n              anime({\n                targets: clientContent1,\n                index: clientContent1.str.length,\n                easing: 'linear',\n                duration: 400,\n                update: function update() {\n                  statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: clientContent2,\n                    index: clientContent2.str.length,\n                    easing: 'linear',\n                    duration: 400,\n                    update: function update() {\n                      statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n                    },\n                    complete: function complete() {\n                      anime({\n                        targets: clientContent3,\n                        index: clientContent3.str.length,\n                        easing: 'linear',\n                        duration: 400,\n                        update: function update() {\n                          statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                        },\n                        complete: function complete() {\n                          var messageContrainerElement = document.getElementById('client-message');\n                          var messageElement = document.getElementById('client-message-circle');\n                          var messageTextElement = document.getElementById('client-message-text');\n                          HelperFunctions.messageFromClient(Constants.NODE_A, {\n                            onBegin: function onBegin() {\n                              HelperFunctions.showElement(messageContrainerElement);\n                              messageElement.classList.add('log-message');\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: ''\n                              });\n                            },\n                            onChangeComplete: function onChangeComplete() {\n                              messageElement.classList.remove('log-message');\n                              messageElement.classList.add('error-message');\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: 'Rejected'\n                              }); // messageTextElement\n                            },\n                            onComplete: function onComplete() {\n                              messageElement.classList.remove('error-message');\n                              HelperFunctions.hideElement(messageContrainerElement);\n                              messageContrainerElement.style.transform = 'none';\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: ''\n                              });\n                              HelperFunctions.showElement(document.getElementById('client-node-value-alt'));\n                            },\n                            alternate: true\n                          });\n                          _this5.animationState = ANIMATION_STATE_OLD_LEADER_STILL_READABLE;\n                          resolve({\n                            animationState: _this5.animationState,\n                            delay: 100\n                          });\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_ELECTED:\n          {\n            this.changeMainText('');\n            HelperFunctions.hideElement(document.getElementById('client-query-message'));\n            HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n            document.getElementById('node-c-message-text-alt').innerHTML = '';\n            var nodeC = document.getElementById('node-c-circle');\n            nodeC.classList.add('leader-node');\n            var _contentLine2 = {\n              index: 0,\n              str: 'Client can still read from C and get a valid response. Writes, however, are unavailable at this moment.'\n            };\n            HelperFunctions.showElement(clientMessageBubble);\n            anime({\n              targets: _contentLine2,\n              index: _contentLine2.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                clientMessageStatus.textContent = _contentLine2.str.substr(0, _contentLine2.index);\n              },\n              complete: function complete() {\n                _this5.animationState = ANIMATION_STATE_OLD_LEASE_EXPIRES;\n                resolve({\n                  animationState: _this5.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_SENT_LEASES:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-a-timer-highlight'));\n            HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n            var nodeC = document.getElementById('node-c-circle');\n            nodeC.classList.add('leader-node');\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.add('leader-candidate-node');\n            HelperFunctions.hideElement(nodeAMessageBubble);\n            document.getElementById('node-a-message-status').innerHTML = '';\n            HelperFunctions.hideElement(clientMessageBubble);\n            document.getElementById('client-message-status').innerHTML = '';\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n            var nodeCTextAlt = document.getElementById('node-c-message-text-alt');\n            var _content4 = {\n              index: 0,\n              str: 'Leader Lease of C will run out\\nfirst [since it started first]. \\nC now steps down as leader.'\n            };\n            HelperFunctions.hideElement(document.getElementById('mlease-rect-node-a'));\n            this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 6000, 25);\n            this.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 6000, 30);\n            this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 6000);\n            anime({\n              targets: _content4,\n              index: _content4.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                nodeCTextAlt.textContent = _content4.str.substr(0, _content4.index);\n              }\n            });\n            this.nodeCTimerAnimation.finished.then(function () {\n              var nodeC = document.getElementById('node-c-circle');\n              nodeC.classList.remove('leader-node');\n              _this5.animationState = ANIMATION_STATE_NEW_LEADER_ELECTED;\n              resolve({\n                animationState: _this5.animationState,\n                delay: 100,\n                asyncAnimation: true\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_LEASE_CONCLUSION:\n          {\n            HelperFunctions.hideElement(nodeAExtraHighlight);\n            HelperFunctions.hideElement(nodeBExtraHighlight);\n            HelperFunctions.hideElement(clientMessageBubble);\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.add('leader-candidate-node');\n            nodeA.classList.remove('leader-node');\n            document.getElementById('client-message-status').innerHTML = '';\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n            document.getElementById('node-c-message-text-alt').innerHTML = '';\n            HelperFunctions.showElement(document.getElementById('node-a-message-bubble'));\n            HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n            HelperFunctions.hideElement(document.getElementById('mlease-rect-node-a'));\n            var nodeAMessage = document.getElementById('node-a-message-status');\n            var _content5 = {\n              index: 0,\n              str: 'Once Leader Lease on A expires, it becomes raft leader.'\n            };\n            anime({\n              targets: _content5,\n              index: _content5.str.length,\n              easing: 'linear',\n              duration: 800,\n              update: function update() {\n                nodeAMessage.textContent = _content5.str.substr(0, _content5.index);\n              },\n              complete: function complete() {\n                _this5.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 10000);\n\n                _this5.nodeATimerAnimation.finished.then(function () {\n                  nodeA.classList.remove('leader-candidate-node');\n                  nodeA.classList.add('leader-node');\n                  HelperFunctions.showElement(document.getElementById('node-a-timer-highlight')); // hide Node A's leader lease timer\n\n                  HelperFunctions.hideElement(document.getElementById(HelperFunctions.leaderLeaseTimerId(Constants.NODE_A))); // and start its my lease timer\n\n                  _this5.nodeATimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_A, 5000, 50); // then send leader lease message to B\n\n                  var leaseToB = document.getElementById('node-a-lease-to-node-b');\n                  var nodeBLeaseAnimation = anime({\n                    targets: leaseToB,\n                    translateX: 150,\n                    translateY: -280,\n                    easing: 'linear',\n                    duration: 1500,\n                    begin: function begin() {\n                      HelperFunctions.showElement(leaseToB);\n                    },\n                    complete: function complete() {\n                      HelperFunctions.hideElement(leaseToB);\n                      leaseToB.style.transform = 'none';\n\n                      _this5.nodeBTimerAnimation.restart();\n\n                      _this5.animationState = ANIMATION_STATE_NEW_LEADER_SENT_LEASES;\n                      resolve({\n                        animationState: _this5.animationState,\n                        delay: 100\n                      });\n                    }\n                  });\n                });\n              }\n            });\n            break;\n          }\n\n        case Constants.ANIMATION_STATE_FINISHED:\n          {\n            this.setState({\n              animationFinished: false\n            });\n            this.changeMainText('');\n            document.getElementById('node-a-message-status').innerHTML = '';\n            HelperFunctions.showElement(document.getElementById('client-message-status-bg'));\n            HelperFunctions.showElement(clientMessageBubble);\n            var messageStatus = document.getElementById('client-message-status');\n            var _content6 = {\n              index: 0,\n              str: 'From here on, client can issue reads/writes to the new leader.'\n            };\n            anime({\n              targets: _content6,\n              index: _content6.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                messageStatus.textContent = _content6.str.substr(0, _content6.index);\n              },\n              complete: function complete() {\n                // initiate a raft round\n                // client message to A\n                var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, '(k, V2)');\n                animation.finished.then(function () {\n                  // message with ack from A to B\n                  nodeAExtraText.innerHTML = '(k, V2)';\n                  var messageToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, '(k, V2)', false, 0, _this5.nodeBTimerAnimation, _this5.nodeATimerAnimation);\n                  messageToBAnimation.finished.then(function () {\n                    nodeBExtraText.innerHTML = '(k, V2)';\n                    HelperFunctions.hideElement(nodeAExtraText2);\n                    HelperFunctions.showElement(nodeAExtraHighlight); // confirmation message back to B and the client\n\n                    var confirmToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE, false, false, '', true);\n                    var confirmToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, '', true, 300, _this5.nodeBTimerAnimation);\n                    Promise.all([confirmToClientAnimation.finished, confirmToBAnimation.finished]).then(function () {\n                      HelperFunctions.hideElement(nodeBExtraText2);\n                      nodeBExtraText.innerHTML = '(k, V2)';\n                      HelperFunctions.showElement(nodeBExtraHighlight);\n                      _this5.animationState = ANIMATION_STATE_LEADER_LEASE_CONCLUSION;\n\n                      _this5.stopTimers();\n\n                      resolve({\n                        animationState: _this5.animationState,\n                        delay: 100\n                      });\n                    });\n                  });\n                });\n              }\n            });\n            this.animationState = ANIMATION_STATE_LEADER_LEASE_CONCLUSION;\n            resolve({\n              animationState: this.animationState,\n              delay: 100\n            });\n          }\n\n        default:\n          console.error('Unrecognized state: ' + this.animationState);\n          break;\n      }\n    }\n  }, {\n    key: \"changeMainText\",\n    value: function changeMainText(text, onComplete, delay) {\n      HelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete, delay);\n    }\n  }, {\n    key: \"restartTimers\",\n    value: function restartTimers() {\n      if (this.nodeATimerAnimation) {\n        this.nodeATimerAnimation.restart();\n      }\n\n      if (this.nodeBTimerAnimation) {\n        this.nodeBTimerAnimation.restart();\n      }\n\n      if (this.nodeCTimerAnimation) {\n        this.nodeCTimerAnimation.restart();\n      }\n    }\n  }, {\n    key: \"stopTimers\",\n    value: function stopTimers() {\n      this.timersAreActive = false;\n      this.pauseTimers();\n    }\n  }, {\n    key: \"pauseTimers\",\n    value: function pauseTimers() {\n      if (this.nodeATimerAnimation) {\n        this.nodeATimerAnimation.pause();\n      }\n\n      if (this.nodeBTimerAnimation) {\n        this.nodeBTimerAnimation.pause();\n      }\n\n      if (this.nodeCTimerAnimation) {\n        this.nodeCTimerAnimation.pause();\n      }\n    }\n  }, {\n    key: \"resumeTimers\",\n    value: function resumeTimers() {\n      if (this.nodeATimerAnimation) {\n        this.nodeATimerAnimation.play();\n      }\n\n      if (this.nodeBTimerAnimation) {\n        this.nodeBTimerAnimation.play();\n      }\n\n      if (this.nodeCTimerAnimation) {\n        this.nodeCTimerAnimation.play();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main-diagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317\n        },\n        __self: this\n      }, React.createElement(MainDiagram, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"main-text-sect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1320\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LeaderLeaseAnimation;\n}(Component);\nexport default LeaderLeaseAnimation;","map":{"version":3,"sources":["/Users/andrew/code/yb-architecture/animations/src/LeaderLeasesAnimation.js"],"names":["React","Component","anime","MainDiagram","Constants","HelperFunctions","require","ANIMATION_STATE_LEADER_REPLICATES_LEASE","ANIMATION_STATE_LEADER_READS_PROTOCOL","ANIMATION_STATE_START_LEADER_LEASE","ANIMATION_STATE_CLIENT_UPDATE_FAILS","ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED","ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED","ANIMATION_STATE_NEW_LEADER_ELECTED","ANIMATION_STATE_LEADER_LEASE_DURATION","ANIMATION_STATE_OLD_LEADER_STILL_READABLE","ANIMATION_STATE_OLD_LEASE_EXPIRES","ANIMATION_STATE_LEADER_LEASE_CONCLUSION","ANIMATION_STATE_NEW_LEADER_SENT_LEASES","ORIGINAL_LEADER_INITIAL_DURATION","LEADER_REPLICATION_DURATION","LeaderLeaseAnimation","props","animationState","ANIMATION_STATE_INITIAL","state","previousEnabled","init","nodeATimerAnimation","nodeBTimerAnimation","nodeCTimerAnimation","mainTextSect","document","getElementById","timersAreActive","pauseTimers","resumeTimers","Promise","resolve","reject","onNextInternal","nodeATextContainer","nodeBTextContainer","nodeCTextContainer","nodeATermText","nodeBTermText","nodeCTermText","nodeATermHighlight","nodeBTermHighlight","nodeAExtraText","nodeBExtraText","nodeCExtraText","nodeAExtraHighlight","nodeBExtraHighlight","nodeCExtraHighlight","nodeAExtraText2","nodeBExtraText2","nodeCExtraText2","nodeAMessageBubble","nodeAMessageStatus","nodeCMessageBubble","nodeCMessageStatus","clientMessageBubble","clientQueryMessage","clientMessageStatus","clientMessageBackground","nodeOuterCircles","getElementsByClassName","i","length","hideElement","changeMainText","nodeC","classList","add","showElement","innerHTML","delay","statusText1","statusText2","contentLine1","index","str","contentLine2","targets","easing","duration","update","textContent","substr","complete","console","log","restart","startMyLeaseTimer","NODE_C","play","asyncAnimation","textAlt","leaseToA","content","nodeCTextAnimation","innerText","nodeALeaseAnimation","translateX","translateY","begin","style","transform","leaseToB","nodeBLeaseAnimation","all","finished","then","startLeaderLeaseTimer","NODE_A","NODE_B","partitionNodeC","nodeAContent","nodeA","setSVGText","targetId","text","introduceClient","clientContent1","clientContent2","clientContent3","statusText3","messageContrainerElement","messageElement","messageTextElement","messageFromClient","onBegin","onChangeComplete","remove","onComplete","alternate","nodeCTextAlt","nodeAMessage","textAnimation","leaderLeaseTimerId","messageStatus","animation","sendLogMessage","CLIENT_NODE","messageToBAnimation","confirmToClientAnimation","confirmToBAnimation","stopTimers","ANIMATION_STATE_FINISHED","setState","animationFinished","error","onPreviousInternal","setTextWithAnimation","pause"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nconst ANIMATION_STATE_LEADER_REPLICATES_LEASE = \"ANIMATION_STATE_LEADER_REPLICATES_LEASE\";\nconst ANIMATION_STATE_LEADER_READS_PROTOCOL = 'ANIMATION_STATE_LEADER_READS_PROTOCOL';\nconst ANIMATION_STATE_START_LEADER_LEASE = 'ANIMATION_STATE_START_LEADER_LEASE';\nconst ANIMATION_STATE_CLIENT_UPDATE_FAILS = 'ANIMATION_STATE_CLIENT_UPDATE_FAILS';\nconst ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED = \"ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED\";\nconst ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED = \"ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED\";\nconst ANIMATION_STATE_NEW_LEADER_ELECTED = \"ANIMATION_STATE_NEW_LEADER_ELECTED\";\nconst ANIMATION_STATE_LEADER_LEASE_DURATION = 'ANIMATION_STATE_LEADER_LEASE_DURATION';\nconst ANIMATION_STATE_OLD_LEADER_STILL_READABLE = 'ANIMATION_STATE_OLD_LEADER_STILL_READABLE';\nconst ANIMATION_STATE_OLD_LEASE_EXPIRES = 'ANIMATION_STATE_OLD_LEASE_EXPIRES';\nconst ANIMATION_STATE_LEADER_LEASE_CONCLUSION = 'ANIMATION_STATE_LEADER_LEASE_CONCLUSION';\nconst ANIMATION_STATE_NEW_LEADER_SENT_LEASES = \"ANIMATION_STATE_NEW_LEADER_SENT_LEASES\";\n\nconst ORIGINAL_LEADER_INITIAL_DURATION = 3000;\nconst LEADER_REPLICATION_DURATION = 5000;\n\n\nexport class LeaderLeaseAnimation extends Component {\n\tconstructor(props) {\n    super(props);\n    this.animationState = Constants.ANIMATION_STATE_INITIAL;\n\t\tthis.state = {\n      previousEnabled: true\n\t\t}\n\t\tthis.init();\n\t}\n\tinit() {\n\t\tthis.nodeATimerAnimation = null;\n\t\tthis.nodeBTimerAnimation = null;\n\t\tthis.nodeCTimerAnimation = null;\n\t}\n\tcomponentDidMount() {\n\t\tthis.mainTextSect = document.getElementById('center-message-text');\n\t\tthis.timersAreActive = false;\n\t}\n\n\tpause() {\n\t\tif (this.timersAreActive) {\n\t\t\tthis.pauseTimers();\n\t\t}\n\t}\n\tresume() {\n\t\tif (this.timersAreActive) {\n\t\t\tthis.resumeTimers();\n\t\t}\n\t}\n\tonNext() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onNextInternal(resolve,reject);\n\t\t});\n\t}\n\n\tonNextInternal(resolve,reject) {\n\t\t// Text Containers underneath each Node\n    const nodeATextContainer = document.getElementById('node-a-term-text-rect');\n    const nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n    const nodeCTextContainer = document.getElementById('node-c-term-text-rect');\n    // Text Term (Line 1)\n    const nodeATermText = document.getElementById('node-a-term-text');\n    const nodeBTermText = document.getElementById('node-b-term-text');\n    const nodeCTermText = document.getElementById('node-c-term-text');\n    // Highlight for Text Term (Line 1) -> Only 2 needed\n    const nodeATermHighlight = document.getElementById('node-a-term-highlight');\n    const nodeBTermHighlight = document.getElementById('node-b-term-highlight');\n    // Text Extra (Line 2)\n    const nodeAExtraText = document.getElementById('node-a-extra-text');\n    const nodeBExtraText = document.getElementById('node-b-extra-text');\n    const nodeCExtraText = document.getElementById('node-c-extra-text');\n    // Highlight for Text Extra (Line 2)\n    const nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n    const nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n    const nodeCExtraHighlight = document.getElementById('node-c-text-highlight');\n    // Text Extra (Line 3)\n    const nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n    const nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n    const nodeCExtraText2 = document.getElementById('node-c-extra-text2'); \n\n    // MESSAGE OBJECTS\n    const nodeAMessageBubble = document.getElementById('node-a-message-bubble');\n    const nodeAMessageStatus = document.getElementById('node-a-message-status');\n    const nodeCMessageBubble = document.getElementById('node-c-message-bubble');\n    const nodeCMessageStatus = document.getElementById('node-c-message-status');\n\n    // Client\n    const clientMessageBubble = document.getElementById('client-message-bubble');\n    const clientQueryMessage = document.getElementById('client-query-message');\n    const clientMessageStatus = document.getElementById('client-message-status');\n    const clientMessageBackground = document.getElementById('client-message-status-bg');\n\n\t\tswitch(this.animationState) {\n\t\t\tcase Constants.ANIMATION_STATE_INITIAL: {\n\t\t\t\t//////////////////// initial setup ////////////////////\n\n\t\t\t\t// hide all outer circles (TODO: revisit this approach)\n\t\t\t\tvar nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\t\t\t\tfor (var i = 0; i < nodeOuterCircles.length; i++){\n\t\t\t\t\tHelperFunctions.hideElement(nodeOuterCircles[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//////////////////////////////////////////////////////\n\t\t\t\tthis.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', () => {\n          // make Node C  the leader\n          var nodeC = document.getElementById('node-c-circle');\n          nodeC.classList.add('leader-node');\n          HelperFunctions.showElement(nodeATextContainer);\n          HelperFunctions.showElement(nodeBTextContainer);\n          HelperFunctions.showElement(nodeCTextContainer);\n          HelperFunctions.showElement(nodeATermText);\n          HelperFunctions.showElement(nodeBTermText);\n          HelperFunctions.showElement(nodeCTermText);\n          HelperFunctions.showElement(nodeAExtraText);\n          HelperFunctions.showElement(nodeBExtraText);\n          HelperFunctions.showElement(nodeCExtraText);\n\n          nodeATermText.innerHTML = 'Term: 1';\n          nodeBTermText.innerHTML = 'Term: 1';\n          nodeCTermText.innerHTML = 'Term: 1';\n\n          nodeAExtraText.innerHTML = '(k, V1)';\n          nodeBExtraText.innerHTML = '(k, V1)';\n          nodeCExtraText.innerHTML = '(k, V1)';\n          this.animationState = ANIMATION_STATE_LEADER_READS_PROTOCOL;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n          });\n\t\t\t\t});\n\t\t\t\tbreak;\n      }\n      case ANIMATION_STATE_LEADER_READS_PROTOCOL: {\n        this.changeMainText('Using leader leases to safely perform reads from the leader..', () => {\n          this.animationState = ANIMATION_STATE_START_LEADER_LEASE;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_START_LEADER_LEASE: {\n        this.changeMainText('');\n        HelperFunctions.showElement(nodeCMessageBubble);\n        HelperFunctions.showElement(nodeCMessageStatus);\n        const statusText1 = document.getElementById('node-c-message-status-text1');\n        const statusText2 = document.getElementById('node-c-message-status-text2');\n\n        const contentLine1 = {\n          index: 0,\n          str: 'Raft leader starts a'\n        }\n        const contentLine2 = {\n          index: 0,\n          str: 'new lease timer for itself.'\n        }\n        anime({\n          targets: contentLine1,\n          index: contentLine1.str.length,\n          easing: 'linear',\n          duration: 600,\n          update: function() {\n            statusText1.textContent = contentLine1.str.substr(0, contentLine1.index);\n          },\n          complete: () => {\n            anime({\n              targets: contentLine2,\n              index: contentLine2.str.length,\n              easing: 'linear',\n              duration: 600,\n              update: function() {\n                statusText2.textContent = contentLine2.str.substr(0, contentLine2.index);\n              },\n              complete: () => {\n                this.timersAreActive = true;\n                // this.nodeCTimerAnimation = HelperFunctions.startLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_TIMER_DURATION);\n                console.log(this.nodeCTimerAnimation);\n                if (this.nodeCTimerAnimation) {\n                  this.nodeCTimerAnimation.restart();\n                } else {\n                  this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_INITIAL_DURATION, 90, true);\n                  this.nodeCTimerAnimation.play();  \n                }\n                this.animationState = ANIMATION_STATE_LEADER_REPLICATES_LEASE;\n                resolve({\n                  animationState: this.animationState,\n                  delay: 100,\n                  asyncAnimation: true,\n                });\n              }\n            });\n          }\n        });\n        break;\n      }\n\t\t\tcase ANIMATION_STATE_LEADER_REPLICATES_LEASE: {\n\t\t\t\t// this.changeMainText('Leader replicates a lease interval to followers', () => {\n        HelperFunctions.hideElement(nodeCMessageBubble);\n        HelperFunctions.hideElement(nodeCMessageStatus);\n        HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n        const textAlt = document.getElementById('node-c-message-text-alt');\n        var leaseToA = document.getElementById('node-c-lease-to-node-a');\n        const content = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'Raft leader then replicates a\\nlease interval to followers. Note\\nthe lease timer on C has started\\nbefore replicating to A and B.'\n        };\n\n        var nodeCTextAnimation = anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2500,\n          update: function() {\n            textAlt.innerText = content.str.substr(0, content.index);\n          }\n\t\t\t\t});\n        var nodeALeaseAnimation = anime({\n          targets: leaseToA,\n          translateX: -280,\n          translateY: 0,\n          easing: 'linear',\n          duration: 1500,\n          begin: () => {\n            HelperFunctions.showElement(leaseToA);\n          },\n          complete: () =>{\n            HelperFunctions.hideElement(leaseToA);\n            leaseToA.style.transform = 'none';\n          },\n        });\n\n        this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, LEADER_REPLICATION_DURATION, 60);\n\n        var leaseToB = document.getElementById('node-c-lease-to-node-b');\n        var nodeBLeaseAnimation = anime({\n          targets: leaseToB,\n          translateX: -150,\n          translateY: -280,\n          easing: 'linear',\n          duration: 1500,\n          begin: () => {\n            HelperFunctions.showElement(leaseToB);\n          },\n          complete: () =>{\n            HelperFunctions.hideElement(leaseToB);\n            leaseToB.style.transform = 'none';\n          },\n        });\n        Promise.all([nodeCTextAnimation.finished, nodeALeaseAnimation.finished,nodeBLeaseAnimation.finished, this.nodeCTimerAnimation]).then(() => {\n          this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, ORIGINAL_LEADER_INITIAL_DURATION, 85);\n          this.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, ORIGINAL_LEADER_INITIAL_DURATION, 90);\n\n          this.animationState = ANIMATION_STATE_LEADER_LEASE_DURATION;\n          resolve({\n            animationState: this.animationState,\n            delay: 500,\n            asyncAnimation: true\n          });\n        });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_LEADER_LEASE_DURATION: {\n        HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n        document.getElementById('node-c-message-text-alt').innerHTML = '';\n\n        this.changeMainText('Any new leader must wait out the existing Leader Lease duration before acquiring lease.', () => {\n          this.animationState = ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED: {\n        this.changeMainText('Now suppose the original leader gets network partitioned', () => {\n          // partition original leader\n\t\t\t\t\tHelperFunctions.partitionNodeC();\n          this.animationState = ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED: {\n        this.changeMainText('');\n        HelperFunctions.showElement(nodeAMessageBubble);\n        HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n        const nodeAContent = {\n          index: 0,\n          str: 'A wins new leader election\\n but cannot perform any\\noperations until Leader\\nLease on A runs out.'\n        };\n\n        anime({\n          targets: nodeAContent,\n          index: nodeAContent.str.length,\n          easing: 'linear',\n          duration: 1500,\n          update: function() {\n            nodeAMessageStatus.innerText = nodeAContent.str.substr(0, nodeAContent.index);\n          },\n          complete: () => {\n            // elect Node A as new leader candidate\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.add('leader-candidate-node');\n            HelperFunctions.setSVGText({targetId: 'node-a-term-text', text: \"Term: 2\"});\n            HelperFunctions.setSVGText({targetId: 'node-b-term-text', text: \"Term: 2\"});\n            HelperFunctions.showElement(nodeATermHighlight);\n            HelperFunctions.showElement(nodeBTermHighlight);\n            this.animationState = ANIMATION_STATE_CLIENT_UPDATE_FAILS;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n\t\t\t\t});\n        \n        break;\n      }\n\t\t\tcase ANIMATION_STATE_CLIENT_UPDATE_FAILS: {\n        HelperFunctions.hideElement(nodeAMessageBubble);\n        HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n        nodeAMessageStatus.innerHTML = '';\n        HelperFunctions.hideElement(nodeATermHighlight);\n        HelperFunctions.hideElement(nodeBTermHighlight);\n\t\t\t\tthis.changeMainText('If client tries to write to A, operation is rejected..', () => {\n          HelperFunctions.introduceClient();\n          HelperFunctions.showElement(clientMessageBubble);\n          HelperFunctions.showElement(clientMessageBackground);\n          HelperFunctions.showElement(clientQueryMessage);\n          const clientContent1 = {\n            index: 0,\n            str: 'UPDATE T SET'\n          }\n          const clientContent2 = {\n            index: 0,\n            str: 'value = V2 WHERE'\n          }\n          const clientContent3 = {\n            index: 0,\n            str: ' key = k'\n          }\n          \n          const statusText1 = document.getElementById('client-query-message-text1');\n          const statusText2 = document.getElementById('client-query-message-text2');\n          const statusText3 = document.getElementById('client-query-message-text3');\n          anime({\n            targets: clientContent1,\n            index: clientContent1.str.length,\n            easing: 'linear',\n            duration: 400,\n            update: function() {\n              statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n            },\n            complete: () => {\n              anime({\n                targets: clientContent2,\n                index: clientContent2.str.length,\n                easing: 'linear',\n                duration: 400,\n                update: function () {\n                  statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n                },\n                complete: () => {\n                  anime({\n                    targets: clientContent3,\n                    index: clientContent3.str.length,\n                    easing: 'linear',\n                    duration: 400,\n                    update: function () {\n                      statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                    },\n                    complete: () => {\n                      var messageContrainerElement = document.getElementById('client-message');\n                      var messageElement = document.getElementById('client-message-circle');\n                      var messageTextElement = document.getElementById('client-message-text');\n                      HelperFunctions.messageFromClient(Constants.NODE_A,\t{\n                        onBegin: () => {\n                          HelperFunctions.showElement(messageContrainerElement);\n                          messageElement.classList.add('log-message');\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: ''});\n                        },\n                        onChangeComplete: () => {\n                          messageElement.classList.remove('log-message');\n                          messageElement.classList.add('error-message');\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: 'Rejected'});\n                          // messageTextElement\n                        },\n                        onComplete: () => {\n                          messageElement.classList.remove('error-message');\n                          HelperFunctions.hideElement(messageContrainerElement);\n                          messageContrainerElement.style.transform = 'none';\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: ''});\n                          HelperFunctions.showElement(document.getElementById('client-node-value-alt'));\n                          document.getElementById('client-node-value-error-header').innerHTML = 'Query Rejected:';\n                          document.getElementById('client-node-value-error-subtitle').innerHTML = 'Cannot find raft leader';\n                        },\n                        alternate: true,\n                      });\n                      this.animationState = ANIMATION_STATE_OLD_LEADER_STILL_READABLE;\n                      resolve({\n                        animationState: this.animationState,\n                        delay: 100,\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_OLD_LEADER_STILL_READABLE: {\n        this.changeMainText('');\n        HelperFunctions.hideElement(document.getElementById('client-query-message'));\n        HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n\n        const contentLine1 = {\n          index: 0,\n          str: 'Client can still read from C and get a valid response. Writes, however, are unavailable at this moment.'\n        };\n\n        anime({\n          targets: contentLine1,\n          index: contentLine1.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            clientMessageStatus.textContent = contentLine1.str.substr(0, contentLine1.index);\n          },\n          complete: () => {\n            HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n            this.animationState = ANIMATION_STATE_OLD_LEASE_EXPIRES;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n        });\n       break;\n      }\n      case ANIMATION_STATE_OLD_LEASE_EXPIRES: {\n        HelperFunctions.hideElement(clientMessageBubble);\n        document.getElementById('client-message-status').innerHTML = '';\n        HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n        const nodeCTextAlt = document.getElementById('node-c-message-text-alt');\n        const content = {\n          index: 0,\n          str: 'Leader Lease of C will run out\\nfirst [since it started first]. \\nC now steps down as leader.'\n        };\n        this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 6000, 25);\n        this.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 6000, 30);\n        this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 6000);\n\n        anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            nodeCTextAlt.textContent = content.str.substr(0, content.index);\n          },\n        });\n        this.nodeCTimerAnimation.finished.then(() => {\n          var nodeC = document.getElementById('node-c-circle');\n          nodeC.classList.remove('leader-node');\n          this.animationState = ANIMATION_STATE_NEW_LEADER_ELECTED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n            asyncAnimation: true\n          });\n        });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_NEW_LEADER_ELECTED: {\n        HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n        document.getElementById('node-c-message-text-alt').innerHTML = '';\n\n        HelperFunctions.showElement(document.getElementById('node-a-message-bubble'));\n        HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n        const nodeAMessage = document.getElementById('node-a-message-status');\n        const content = {\n          index: 0,\n          str: 'Once Leader Lease on A expires, it becomes raft leader.'\n        };\n\n        var textAnimation = anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 800,\n          update: function() {\n            nodeAMessage.textContent = content.str.substr(0, content.index);\n          },\n          complete: () => {\n            this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 2000);\n            this.nodeATimerAnimation.finished.then(() => {\n              var nodeA = document.getElementById('node-a-circle');\n              HelperFunctions.showElement(document.getElementById('node-a-timer-highlight'));\n              nodeA.classList.remove('leader-candidate-node');\n              nodeA.classList.add('leader-node');\n    \n              // hide Node A's leader lease timer\n              HelperFunctions.hideElement(document.getElementById(HelperFunctions.leaderLeaseTimerId(Constants.NODE_A)));\n    \n              // and start its my lease timer\n              this.nodeATimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_A, 5000, 50);\n    \n              // then send leader lease message to B\n              var leaseToB = document.getElementById('node-a-lease-to-node-b');\n              anime({\n                targets: leaseToB,\n                translateX: 150,\n                translateY: -280,\n                easing: 'linear',\n                duration: 1500,\n                begin: () => {\n                  HelperFunctions.showElement(leaseToB);\n                },\n                complete: () => {\n                  HelperFunctions.hideElement(leaseToB);\n                  leaseToB.style.transform = 'none';\n    \n                  this.nodeBTimerAnimation.restart();\n                  this.animationState = ANIMATION_STATE_NEW_LEADER_SENT_LEASES;\n                  resolve({\n                    animationState: this.animationState,\n                    delay: 100,\n                  });\n                },\n              });\n            });\n          }\n        });        \n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_NEW_LEADER_SENT_LEASES: {\n        HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n        HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n        HelperFunctions.hideElement(document.getElementById('node-a-timer-highlight'));\n        document.getElementById('node-a-message-status').innerHTML = '';\n        HelperFunctions.showElement(clientMessageBubble);\n        const messageStatus = document.getElementById('client-message-status');\n\n        const content = {\n          index: 0,\n          str: 'From here on, client can issue reads/writes to the new leader.'\n        }\n\n        anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            messageStatus.textContent = content.str.substr(0, content.index);\n          },\n          complete: () => {\n            // initiate a raft round\n            \n            // client message to A\n            var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, '(k, V2)');\n\n            animation.finished.then(() => {\n              // message with ack from A to B\n              nodeAExtraText.innerHTML = '(k, V2)';\n              var messageToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, '(k, V2)', false, 0, this.nodeBTimerAnimation, this.nodeATimerAnimation);\n\n              messageToBAnimation.finished.then(() => {\n                nodeBExtraText.innerHTML = '(k, V2)';\n                HelperFunctions.hideElement(nodeAExtraText2);\n                HelperFunctions.showElement(nodeAExtraHighlight);\n                // confirmation message back to B and the client\n                var confirmToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE, false, false, '', true);\n                var confirmToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, '', true, 300, this.nodeBTimerAnimation);\n\n                Promise.all([confirmToClientAnimation.finished, confirmToBAnimation.finished]).then(() => {\n                  HelperFunctions.hideElement(nodeBExtraText2);\n                  nodeBExtraText.innerHTML = '(k, V2)';\n                  HelperFunctions.showElement(nodeBExtraHighlight);\n                  this.animationState = ANIMATION_STATE_LEADER_LEASE_CONCLUSION;\n                  this.stopTimers();\n                  resolve({\n                    animationState: this.animationState,\n                    delay: 100,\n                  });\n                });\n              });\n            });\n          }\n        });\n\t\t\t\tbreak;\n      }\n      case ANIMATION_STATE_LEADER_LEASE_CONCLUSION: {\n        HelperFunctions.hideElement(nodeAExtraHighlight);\n        HelperFunctions.hideElement(nodeBExtraHighlight);\n        HelperFunctions.hideElement(clientMessageBubble);\n        HelperFunctions.hideElement(clientMessageBackground);\n        document.getElementById('client-message-status').innerHTML = '';\n        this.changeMainText('Leader Leases ensure low latency reads even when nodes are across regions.', () => {\n          this.animationState = Constants.ANIMATION_STATE_FINISHED;\n          this.stopTimers();\n          this.setState({ animationFinished: true });\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n        })\n        break;\n      }\n\t\t\tcase Constants.ANIMATION_STATE_FINISHED: {\n\t\t\t\tconsole.log('Animation finished. Nothing to do');\n\t\t\t\tresolve({\n\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\tdelay: 100,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n        console.error('Unrecognized state: ' + this.animationState);\n        reject('Unrecognized state');\n\t\t}\n  }\n  \n  onPrevious() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onPreviousInternal(resolve,reject);\n\t\t});\n\t}\n\n\tonPreviousInternal(resolve,reject) {\n    // Text Containers underneath each Node\n    const nodeATextContainer = document.getElementById('node-a-term-text-rect');\n    const nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n    const nodeCTextContainer = document.getElementById('node-c-term-text-rect');\n    // Text Term (Line 1)\n    const nodeATermText = document.getElementById('node-a-term-text');\n    const nodeBTermText = document.getElementById('node-b-term-text');\n    const nodeCTermText = document.getElementById('node-c-term-text');\n    // Highlight for Text Term (Line 1) -> Only 2 needed\n    const nodeATermHighlight = document.getElementById('node-a-term-highlight');\n    const nodeBTermHighlight = document.getElementById('node-b-term-highlight');\n    // Text Extra (Line 2)\n    const nodeAExtraText = document.getElementById('node-a-extra-text');\n    const nodeBExtraText = document.getElementById('node-b-extra-text');\n    const nodeCExtraText = document.getElementById('node-c-extra-text');\n    // Highlight for Text Extra (Line 2)\n    const nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n    const nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n    const nodeCExtraHighlight = document.getElementById('node-c-text-highlight');\n    // Text Extra (Line 3)\n    const nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n    const nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n    const nodeCExtraText2 = document.getElementById('node-c-extra-text2'); \n\n    // MESSAGE OBJECTS\n    const nodeAMessageBubble = document.getElementById('node-a-message-bubble');\n    const nodeAMessageStatus = document.getElementById('node-a-message-status');\n    const nodeCMessageBubble = document.getElementById('node-c-message-bubble');\n    const nodeCMessageStatus = document.getElementById('node-c-message-status');\n\n    // Client\n    const clientMessageBubble = document.getElementById('client-message-bubble');\n    const clientQueryMessage = document.getElementById('client-query-message');\n    const clientMessageStatus = document.getElementById('client-message-status');\n    const clientMessageBackground = document.getElementById('client-message-status-bg');\n\n\t\tswitch(this.animationState) {\n\t\t\tcase ANIMATION_STATE_LEADER_READS_PROTOCOL: {\n        HelperFunctions.hideElement(nodeATermText);\n        HelperFunctions.hideElement(nodeBTermText);\n        HelperFunctions.hideElement(nodeCTermText);\n        HelperFunctions.hideElement(nodeAExtraText);\n        HelperFunctions.hideElement(nodeBExtraText);\n        HelperFunctions.hideElement(nodeCExtraText);\n        var nodeC = document.getElementById('node-c-circle');\n        nodeC.classList.remove('leader-node');\n        this.changeMainText('')\n        this.animationState = Constants.ANIMATION_STATE_INITIAL;\n        resolve({\n          animationState: this.animationState,\n          delay: 1000,\n        });\n        break;\n      }\n      case ANIMATION_STATE_START_LEADER_LEASE: {\n        // Undo phase\n\t\t\t\tHelperFunctions.hideElement(nodeATermText);\n        HelperFunctions.hideElement(nodeBTermText);\n        HelperFunctions.hideElement(nodeCTermText);\n        HelperFunctions.hideElement(nodeAExtraText);\n        HelperFunctions.hideElement(nodeBExtraText);\n        HelperFunctions.hideElement(nodeCExtraText);\n        var nodeC = document.getElementById('node-c-circle');\n        nodeC.classList.remove('leader-node');\n\n        // Redo phase\n\t\t\t\t// hide all outer circles (TODO: revisit this approach)\n\t\t\t\tvar nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\t\t\t\tfor (var i = 0; i < nodeOuterCircles.length; i++){\n\t\t\t\t\tHelperFunctions.hideElement(nodeOuterCircles[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//////////////////////////////////////////////////////\n\t\t\t\tthis.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', () => {\n          // make Node C  the leader\n          nodeC.classList.add('leader-node');\n          HelperFunctions.showElement(nodeATextContainer);\n          HelperFunctions.showElement(nodeBTextContainer);\n          HelperFunctions.showElement(nodeCTextContainer);\n          HelperFunctions.showElement(nodeATermText);\n          HelperFunctions.showElement(nodeBTermText);\n          HelperFunctions.showElement(nodeCTermText);\n          HelperFunctions.showElement(nodeAExtraText);\n          HelperFunctions.showElement(nodeBExtraText);\n          HelperFunctions.showElement(nodeCExtraText);\n\n          nodeATermText.innerHTML = 'Term: 1';\n          nodeBTermText.innerHTML = 'Term: 1';\n          nodeCTermText.innerHTML = 'Term: 1';\n\n          nodeAExtraText.innerHTML = '(k, V1)';\n          nodeBExtraText.innerHTML = '(k, V1)';\n          nodeCExtraText.innerHTML = '(k, V1)';\n          this.animationState = ANIMATION_STATE_LEADER_READS_PROTOCOL;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n          });\n\t\t\t\t});\n\t\t\t\tbreak;\n      }\n      case ANIMATION_STATE_LEADER_REPLICATES_LEASE: {\n        // Undo phase\n        HelperFunctions.hideElement(nodeCMessageBubble);\n        document.getElementById('node-c-message-status-text1').innerHTML = '';\n        document.getElementById('node-c-message-status-text2').innerHTML = '';\n        HelperFunctions.hideElement(document.getElementById('mlease-rect-node-c'));\n\n        // Redo phase\n        this.changeMainText('Using leader leases to safely perform reads from the leader..', () => {\n          this.animationState = ANIMATION_STATE_START_LEADER_LEASE;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_LEADER_LEASE_DURATION: {\n        // Undo phase\n        HelperFunctions.hideElement(document.getElementById('llease-rectnode-a'));\n        HelperFunctions.hideElement(document.getElementById('llease-rectnode-b'));\n        HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n        document.getElementById('node-c-message-text-alt').innerHTML = '';\n\n        // Redo phase\n        this.changeMainText('');\n        HelperFunctions.showElement(nodeCMessageBubble);\n        HelperFunctions.showElement(nodeCMessageStatus);\n        const statusText1 = document.getElementById('node-c-message-status-text1');\n        statusText1.innerHTML = '';\n        const statusText2 = document.getElementById('node-c-message-status-text2');\n        statusText2.innerHTML = '';\n\n        const contentLine1 = {\n          index: 0,\n          str: 'Raft leader starts a'\n        }\n        const contentLine2 = {\n          index: 0,\n          str: 'new lease timer for itself.'\n        }\n        anime({\n          targets: contentLine1,\n          index: contentLine1.str.length,\n          easing: 'linear',\n          duration: 600,\n          update: function() {\n            statusText1.textContent = contentLine1.str.substr(0, contentLine1.index);\n          },\n          complete: () => {\n            anime({\n              targets: contentLine2,\n              index: contentLine2.str.length,\n              easing: 'linear',\n              duration: 600,\n              update: function() {\n                statusText2.textContent = contentLine2.str.substr(0, contentLine2.index);\n              },\n              complete: () => {\n                this.timersAreActive = true;\n                this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_INITIAL_DURATION, 90, true);\n                this.nodeCTimerAnimation.restart();\n                this.animationState = ANIMATION_STATE_LEADER_REPLICATES_LEASE;\n                resolve({\n                  animationState: this.animationState,\n                  delay: 100,\n                  asyncAnimation: true,\n                });\n              }\n            });\n          }\n        });\n        break;\n      }\n      case ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED: {\n        this.changeMainText('');\n        // this.changeMainText('Leader replicates a lease interval to followers', () => {\n        HelperFunctions.hideElement(nodeCMessageBubble);\n        HelperFunctions.hideElement(nodeCMessageStatus);\n        HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n        const textAlt = document.getElementById('node-c-message-text-alt');\n        var leaseToA = document.getElementById('node-c-lease-to-node-a');\n        const content = {\n          index: 0,\n          str: 'Raft leader then replicates a\\nlease interval to followers. Note\\nthe lease timer on C has started\\nbefore replicating to A and B.'\n        };\n\n        var nodeCTextAnimation = anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2500,\n          update: function() {\n            textAlt.innerText = content.str.substr(0, content.index);\n          }\n        });\n        var nodeALeaseAnimation = anime({\n          targets: leaseToA,\n          translateX: -280,\n          translateY: 0,\n          easing: 'linear',\n          duration: 1500,\n          begin: () => {\n            HelperFunctions.showElement(leaseToA);\n          },\n          complete: () =>{\n            HelperFunctions.hideElement(leaseToA);\n            leaseToA.style.transform = 'none';\n          },\n        });\n\n        this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 5000, 60);\n        this.nodeCTimerAnimation.restart();\n        var leaseToB = document.getElementById('node-c-lease-to-node-b');\n        var nodeBLeaseAnimation = anime({\n          targets: leaseToB,\n          translateX: -150,\n          translateY: -280,\n          easing: 'linear',\n          duration: 1500,\n          begin: () => {\n            HelperFunctions.showElement(leaseToB);\n          },\n          complete: () =>{\n            HelperFunctions.hideElement(leaseToB);\n            leaseToB.style.transform = 'none';\n          },\n        });\n        Promise.all([nodeCTextAnimation.finished, nodeALeaseAnimation.finished,nodeBLeaseAnimation.finished, this.nodeCTimerAnimation]).then(() => {\n          this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 3000, 85);\n          this.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 3000, 90);\n          console.log(this.nodeBTimerAnimation);\n          this.nodeATimerAnimation.restart();\n          this.nodeBTimerAnimation.restart();\n          \n          this.animationState = ANIMATION_STATE_LEADER_LEASE_DURATION;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n            asyncAnimation: true\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED: {\n        this.changeMainText('');\n        HelperFunctions.hideElement(document.getElementById('node-c-partition-wrap'));\n        this.changeMainText('Any new leader must wait out existing Leader Lease duration before acquiring lease.', () => {\n          this.animationState = ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_CLIENT_UPDATE_FAILS: {\n        HelperFunctions.hideElement(nodeATermHighlight);\n        HelperFunctions.hideElement(nodeBTermHighlight);\n        HelperFunctions.hideElement(nodeAMessageBubble);\n        HelperFunctions.hideElement(document.getElementById('node-c-partition-wrap'));\n        HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n        document.getElementById('node-a-message-status').innerHTML = '';\n        var nodeA = document.getElementById('node-a-circle');\n        nodeA.classList.remove('leader-candidate-node');\n        this.changeMainText('Now suppose the original leader gets network partitioned', () => {\n          // partition original leader\n\t\t\t\t\tHelperFunctions.partitionNodeC();\n          this.animationState = ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_OLD_LEADER_STILL_READABLE: {\n        var nodeA = document.getElementById('node-a-circle');\n        nodeA.classList.remove('leader-candidate-node');\n        HelperFunctions.hideElement(clientMessageBubble);\n        HelperFunctions.hideElement(clientQueryMessage);\n        document.getElementById('client-query-message-text1').innerHTML = '';\n        document.getElementById('client-query-message-text2').innerHTML = '';\n        document.getElementById('client-query-message-text3').innerHTML = '';\n        HelperFunctions.hideElement(document.getElementById('client-node'));\n        HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n        document.getElementById('client-message-text').innerHTML = '';\n\n        this.changeMainText('');\n        HelperFunctions.showElement(nodeAMessageBubble);\n        HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n        const nodeAContent = {\n          index: 0,\n          str: 'A wins new leader election\\n but cannot perform any\\noperations until Leader\\nLease on A runs out.'\n        };\n\n        anime({\n          targets: nodeAContent,\n          index: nodeAContent.str.length,\n          easing: 'linear',\n          duration: 1500,\n          update: function() {\n            nodeAMessageStatus.innerText = nodeAContent.str.substr(0, nodeAContent.index);\n          },\n          complete: () => {\n            // elect Node A as new leader candidate\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.add('leader-candidate-node');\n            HelperFunctions.setSVGText({targetId: 'node-a-term-text', text: \"Term: 2\"});\n            HelperFunctions.setSVGText({targetId: 'node-b-term-text', text: \"Term: 2\"});\n            HelperFunctions.showElement(nodeATermHighlight);\n            HelperFunctions.showElement(nodeBTermHighlight);\n            this.animationState = ANIMATION_STATE_CLIENT_UPDATE_FAILS;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n\t\t\t\t});\n        break;\n      }\n      case ANIMATION_STATE_OLD_LEASE_EXPIRES: {\n        clientMessageStatus.innerHTML = '';\n        HelperFunctions.hideElement(clientMessageBubble);\n        HelperFunctions.hideElement(document.getElementById('client-node'));\n        document.getElementById('client-message-text').innerHTML = '';\n        document.getElementById('client-query-message-text1').innerHTML = '';\n        document.getElementById('client-query-message-text2').innerHTML = '';\n        document.getElementById('client-query-message-text3').innerHTML = '';\n\t\t\t\tthis.changeMainText('If client tries to write to A, operation is rejected..', () => {\n          HelperFunctions.introduceClient();\n          HelperFunctions.showElement(clientMessageBubble);\n          HelperFunctions.showElement(clientMessageBackground);\n          HelperFunctions.showElement(clientQueryMessage);\n          const clientContent1 = {\n            index: 0,\n            str: 'UPDATE T SET'\n          }\n          const clientContent2 = {\n            index: 0,\n            str: 'value = V2 WHERE'\n          }\n          const clientContent3 = {\n            index: 0,\n            str: ' key = k'\n          }\n          \n          const statusText1 = document.getElementById('client-query-message-text1');\n          const statusText2 = document.getElementById('client-query-message-text2');\n          const statusText3 = document.getElementById('client-query-message-text3');\n          anime({\n            targets: clientContent1,\n            index: clientContent1.str.length,\n            easing: 'linear',\n            duration: 400,\n            update: function() {\n              statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n            },\n            complete: () => {\n              anime({\n                targets: clientContent2,\n                index: clientContent2.str.length,\n                easing: 'linear',\n                duration: 400,\n                update: function () {\n                  statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n                },\n                complete: () => {\n                  anime({\n                    targets: clientContent3,\n                    index: clientContent3.str.length,\n                    easing: 'linear',\n                    duration: 400,\n                    update: function () {\n                      statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                    },\n                    complete: () => {\n                      var messageContrainerElement = document.getElementById('client-message');\n                      var messageElement = document.getElementById('client-message-circle');\n                      var messageTextElement = document.getElementById('client-message-text');\n                      HelperFunctions.messageFromClient(Constants.NODE_A,\t{\n                        onBegin: () => {\n                          HelperFunctions.showElement(messageContrainerElement);\n                          messageElement.classList.add('log-message');\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: ''});\n                        },\n                        onChangeComplete: () => {\n                          messageElement.classList.remove('log-message');\n                          messageElement.classList.add('error-message');\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: 'Rejected'});\n                          // messageTextElement\n                        },\n                        onComplete: () => {\n                          messageElement.classList.remove('error-message');\n                          HelperFunctions.hideElement(messageContrainerElement);\n                          messageContrainerElement.style.transform = 'none';\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: ''});\n                          HelperFunctions.showElement(document.getElementById('client-node-value-alt'));\n                        },\n                        alternate: true,\n                      });\n                      this.animationState = ANIMATION_STATE_OLD_LEADER_STILL_READABLE;\n                      resolve({\n                        animationState: this.animationState,\n                        delay: 100,\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_NEW_LEADER_ELECTED: {\n        this.changeMainText('');\n        HelperFunctions.hideElement(document.getElementById('client-query-message'));\n        HelperFunctions.hideElement(document.getElementById('client-node-value-alt'));\n        HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n        document.getElementById('node-c-message-text-alt').innerHTML = '';\n        var nodeC = document.getElementById('node-c-circle');\n        nodeC.classList.add('leader-node');\n\n        const contentLine1 = {\n          index: 0,\n          str: 'Client can still read from C and get a valid response. Writes, however, are unavailable at this moment.'\n        };\n\n        HelperFunctions.showElement(clientMessageBubble);\n\n        anime({\n          targets: contentLine1,\n          index: contentLine1.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            clientMessageStatus.textContent = contentLine1.str.substr(0, contentLine1.index);\n          },\n          complete: () => {\n            this.animationState = ANIMATION_STATE_OLD_LEASE_EXPIRES;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n        });\n        break;\n      }\n      case ANIMATION_STATE_NEW_LEADER_SENT_LEASES: {\n        HelperFunctions.hideElement(document.getElementById('node-a-timer-highlight'));\n        HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n        var nodeC = document.getElementById('node-c-circle');\n        nodeC.classList.add('leader-node');\n        var nodeA = document.getElementById('node-a-circle');\n        nodeA.classList.add('leader-candidate-node');\n        HelperFunctions.hideElement(nodeAMessageBubble);\n        document.getElementById('node-a-message-status').innerHTML = '';\n        HelperFunctions.hideElement(clientMessageBubble);\n        document.getElementById('client-message-status').innerHTML = '';\n        HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n        const nodeCTextAlt = document.getElementById('node-c-message-text-alt');\n        const content = {\n          index: 0,\n          str: 'Leader Lease of C will run out\\nfirst [since it started first]. \\nC now steps down as leader.'\n        };\n        HelperFunctions.hideElement(document.getElementById('mlease-rect-node-a'));\n        this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 6000, 25);\n        this.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 6000, 30);\n        this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 6000);\n\n        anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            nodeCTextAlt.textContent = content.str.substr(0, content.index);\n          },\n        });\n        this.nodeCTimerAnimation.finished.then(() => {\n          var nodeC = document.getElementById('node-c-circle');\n          nodeC.classList.remove('leader-node');\n          this.animationState = ANIMATION_STATE_NEW_LEADER_ELECTED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n            asyncAnimation: true\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_LEADER_LEASE_CONCLUSION: {\n        HelperFunctions.hideElement(nodeAExtraHighlight);\n        HelperFunctions.hideElement(nodeBExtraHighlight);\n        HelperFunctions.hideElement(clientMessageBubble);\n        var nodeA = document.getElementById('node-a-circle');\n        nodeA.classList.add('leader-candidate-node');\n        nodeA.classList.remove('leader-node');\n        document.getElementById('client-message-status').innerHTML = '';\n        HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n        document.getElementById('node-c-message-text-alt').innerHTML = '';\n\n        HelperFunctions.showElement(document.getElementById('node-a-message-bubble'));\n        HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n        HelperFunctions.hideElement(document.getElementById('mlease-rect-node-a'));\n        const nodeAMessage = document.getElementById('node-a-message-status');\n        const content = {\n          index: 0,\n          str: 'Once Leader Lease on A expires, it becomes raft leader.'\n        };\n\n        anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 800,\n          update: function() {\n            nodeAMessage.textContent = content.str.substr(0, content.index);\n          },\n          complete: () => {\n            this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 10000);\n            this.nodeATimerAnimation.finished.then(() => {\n              nodeA.classList.remove('leader-candidate-node');\n              nodeA.classList.add('leader-node');\n              HelperFunctions.showElement(document.getElementById('node-a-timer-highlight'));\n\n              // hide Node A's leader lease timer\n              HelperFunctions.hideElement(document.getElementById(HelperFunctions.leaderLeaseTimerId(Constants.NODE_A)));\n\n              // and start its my lease timer\n              this.nodeATimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_A, 5000, 50);\n\n              // then send leader lease message to B\n              var leaseToB = document.getElementById('node-a-lease-to-node-b');\n              var nodeBLeaseAnimation = anime({\n                targets: leaseToB,\n                translateX: 150,\n                translateY: -280,\n                easing: 'linear',\n                duration: 1500,\n                begin: () => {\n                  HelperFunctions.showElement(leaseToB);\n                },\n                complete: () => {\n                  HelperFunctions.hideElement(leaseToB);\n                  leaseToB.style.transform = 'none';\n\n                  this.nodeBTimerAnimation.restart();\n                  this.animationState = ANIMATION_STATE_NEW_LEADER_SENT_LEASES;\n                  resolve({\n                    animationState: this.animationState,\n                    delay: 100,\n                  });\n                },\n              });\n            })\n          }\n        });\n\n        break;\n      }\n      case Constants.ANIMATION_STATE_FINISHED: {\n        this.setState({animationFinished: false});\n        this.changeMainText('');\n        document.getElementById('node-a-message-status').innerHTML = '';\n        HelperFunctions.showElement(document.getElementById('client-message-status-bg'));\n        HelperFunctions.showElement(clientMessageBubble);\n        const messageStatus = document.getElementById('client-message-status');\n\n        const content = {\n          index: 0,\n          str: 'From here on, client can issue reads/writes to the new leader.'\n        }\n\n        anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            messageStatus.textContent = content.str.substr(0, content.index);\n          },\n          complete: () => {\n            // initiate a raft round\n            \n            // client message to A\n            var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, '(k, V2)');\n\n            animation.finished.then(() => {\n              // message with ack from A to B\n              nodeAExtraText.innerHTML = '(k, V2)';\n              var messageToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, '(k, V2)', false, 0, this.nodeBTimerAnimation, this.nodeATimerAnimation);\n\n              messageToBAnimation.finished.then(() => {\n                nodeBExtraText.innerHTML = '(k, V2)';\n                HelperFunctions.hideElement(nodeAExtraText2);\n                HelperFunctions.showElement(nodeAExtraHighlight);\n                // confirmation message back to B and the client\n                var confirmToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE, false, false, '', true);\n                var confirmToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, '', true, 300, this.nodeBTimerAnimation);\n\n                Promise.all([confirmToClientAnimation.finished, confirmToBAnimation.finished]).then(() => {\n                  HelperFunctions.hideElement(nodeBExtraText2);\n                  nodeBExtraText.innerHTML = '(k, V2)';\n                  HelperFunctions.showElement(nodeBExtraHighlight);\n                  this.animationState = ANIMATION_STATE_LEADER_LEASE_CONCLUSION;\n                  this.stopTimers();\n                  resolve({\n                    animationState: this.animationState,\n                    delay: 100,\n                  });\n                });\n              });\n            });\n          }\n        });\n        this.animationState = ANIMATION_STATE_LEADER_LEASE_CONCLUSION;\n        resolve({\n          animationState: this.animationState,\n          delay: 100,\n        });\n      }\n      default:\n        console.error('Unrecognized state: ' + this.animationState);\n        break;\n    }\n  }\n\n\tchangeMainText(text, onComplete, delay) {\n\t\tHelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete, delay);\n\t}\n\trestartTimers() {\n\t\tif (this.nodeATimerAnimation) {\n\t\t\tthis.nodeATimerAnimation.restart();\n\t\t}\n\t\tif (this.nodeBTimerAnimation) {\n\t\t\tthis.nodeBTimerAnimation.restart();\n\t\t}\n\t\tif (this.nodeCTimerAnimation) {\n\t\t\tthis.nodeCTimerAnimation.restart();\n\t\t}\n\t}\n\tstopTimers() {\n\t\tthis.timersAreActive = false;\n\t\tthis.pauseTimers();\n\t}\n\tpauseTimers() {\n\t\tif (this.nodeATimerAnimation) {\n\t\t\tthis.nodeATimerAnimation.pause();\n\t\t}\n\t\tif (this.nodeBTimerAnimation) {\n\t\t\tthis.nodeBTimerAnimation.pause();\n\t\t}\n\t\tif (this.nodeCTimerAnimation) {\n\t\t\tthis.nodeCTimerAnimation.pause();\n\t\t}\n\t}\n\tresumeTimers() {\n\t\tif (this.nodeATimerAnimation) {\n\t\t\tthis.nodeATimerAnimation.play();\n\t\t}\n\t\tif (this.nodeBTimerAnimation) {\n\t\t\tthis.nodeBTimerAnimation.play();\n\t\t}\n\t\tif (this.nodeCTimerAnimation) {\n\t\t\tthis.nodeCTimerAnimation.play();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div id=\"main-diagram\" >\n\t\t\t\t\t<MainDiagram/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"main-text-sect\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LeaderLeaseAnimation;\n"]},"metadata":{},"sourceType":"module"}