{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/code/yb-architecture/animations/src/ReadFailureAnimation.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nvar ANIMATION_STATE_INITIAL = \"READ_OPERATION_INITIAL\";\nvar ANIMATION_STATE_UNSAFE_READ = \"ANIMATION_STATE_UNSAFE_READ\";\nvar ANIMATION_STATE_LEADER_RECEIVED_MESSAGE_FROM_CLIENT = \"ANIMATION_STATE_LEADER_RECEIVED_MESSAGE_FROM_CLIENT\";\nvar ANIMATION_STATE_LEADER_RECEIVED_ACKS_FROM_FOLLOWERS = \"ANIMATION_STATE_LEADER_RECEIVED_ACKS_FROM_FOLLOWERS\";\nvar ANIMATION_STATE_NETWORK_PARTITIONED = \"ANIMATION_STATE_NETWORK_PARTITIONED\";\nvar ANIMATION_STATE_NODE_C_PARTITIONED = \"ANIMATION_STATE_NODE_C_PARTITIONED\";\nvar ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER = \"ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER\";\nvar ANIMATION_STATE_CLIENT_SET_OPERATION = 'ANIMATION_STATE_CLIENT_SET_OPERATION';\nvar ANIMATION_STATE_POST_PARTITION_NODE_A_RECEIVED_MESSAGE_FROM_CLIENT = \"ANIMATION_STATE_POST_PARTITION_NODE_A_RECEIVED_MESSAGE_FROM_CLIENT\";\nvar ANIMATION_STATE_CLIENT_READ_FROM_NODE_C = 'ANIMATION_STATE_CLIENT_READ_FROM_NODE_C';\nvar ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C = \"ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C\";\nvar SET_VALUE1 = \"V1\";\nvar SET_VALUE2 = \"V2\";\n\nfunction setValueText(value) {\n  return HelperFunctions.getSetValueText(value);\n}\n\nexport var ReadOperationAnimation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReadOperationAnimation, _Component);\n\n  function ReadOperationAnimation(props) {\n    var _this;\n\n    _classCallCheck(this, ReadOperationAnimation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReadOperationAnimation).call(this, props));\n    _this.animationState = ANIMATION_STATE_INITIAL;\n    _this.state = {\n      animationFinished: false\n    };\n    return _this;\n  }\n\n  _createClass(ReadOperationAnimation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mainTextSect = document.getElementById('center-message-text');\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {}\n  }, {\n    key: \"resume\",\n    value: function resume() {}\n  }, {\n    key: \"onNext\",\n    value: function onNext() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.onNextInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onNextInternal\",\n    value: function onNextInternal(resolve, reject) {\n      var _this3 = this;\n\n      switch (this.animationState) {\n        case ANIMATION_STATE_INITIAL:\n          {\n            //////////////////// initial setup ////////////////////\n            // hide all outer circles (TODO: revisit this approach)\n            var nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\n            for (var i = 0; i < nodeOuterCircles.length; i++) {\n              HelperFunctions.hideElement(nodeOuterCircles[i]);\n            } //////////////////////////////////////////////////////\n\n\n            this.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', function () {\n              // make Node C the Leader\n              var nodeC = document.getElementById('node-c-circle');\n              nodeC.classList.add('leader-node');\n              HelperFunctions.showElement(document.getElementById('node-a-term-text'));\n              HelperFunctions.showElement(document.getElementById('node-b-term-text'));\n              HelperFunctions.showElement(document.getElementById('node-c-term-text'));\n              HelperFunctions.showElement(document.getElementById('node-a-value-text-rect'));\n              HelperFunctions.showElement(document.getElementById('node-b-value-text-rect'));\n              HelperFunctions.showElement(document.getElementById('node-c-value-text-rect'));\n              _this3.animationState = ANIMATION_STATE_UNSAFE_READ;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_UNSAFE_READ:\n          {\n            this.changeMainText('Unsafe to read from raft leader without majority heartbeats. This sequence explains why.', function () {\n              _this3.animationState = ANIMATION_STATE_NODE_C_PARTITIONED;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NODE_C_PARTITIONED:\n          {\n            this.changeMainText('');\n            var altBubbleText = document.getElementById('node-c-message-text-alt');\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n            var contentLine1 = {\n              index: 0,\n              str: 'Now imagine raft leader C gets\\n partitioned from follower\\n[but not from client]'\n            };\n            anime({\n              targets: contentLine1,\n              index: contentLine1.str.length,\n              easing: 'linear',\n              duration: 1500,\n              update: function update() {\n                altBubbleText.innerText = contentLine1.str.substr(0, contentLine1.index);\n              },\n              complete: function complete() {\n                HelperFunctions.partitionNodeC();\n                _this3.animationState = ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER;\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-c-message-text-alt'));\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n            var nodeATextBox = document.getElementById('node-a-message-status');\n            HelperFunctions.showElement(document.getElementById('node-a-message-bubble'));\n            var content = {\n              index: 0,\n              str: 'This results in A and B\\n electing a new raft\\nleader, say A.'\n            };\n            anime({\n              targets: content,\n              index: content.str.length,\n              easing: 'linear',\n              duration: 1300,\n              update: function update() {\n                nodeATextBox.innerText = content.str.substr(0, content.index);\n              },\n              complete: function complete() {\n                var nodeA = document.getElementById('node-a-circle');\n                nodeA.classList.add('leader-node');\n                HelperFunctions.setSVGText({\n                  targetId: 'node-a-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.setSVGText({\n                  targetId: 'node-b-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.showElement(document.getElementById('node-a-term-highlight'));\n                HelperFunctions.showElement(document.getElementById('node-b-term-highlight'));\n                _this3.animationState = ANIMATION_STATE_CLIENT_SET_OPERATION;\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_SET_OPERATION:\n          {\n            /**\n             * Update: (monospaced) UPDATE T SET value = V2 WHERE key = k \n             * (Get rid of committed but leave uncommitted and change node\n             *  subtext to k: V1, and highlight the value. \n             *  After Node A sends msg to client, show Client: “Update successful!”\n             */\n            HelperFunctions.hideElement(document.getElementById('node-a-message-status'));\n            HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n            HelperFunctions.hideElement(document.getElementById('node-a-term-highlight'));\n            HelperFunctions.hideElement(document.getElementById('node-b-term-highlight'));\n            HelperFunctions.introduceClient();\n            var statusElem = document.getElementById('client-message-status');\n            var clientContent1 = {\n              index: 0,\n              str: 'UPDATE T SET'\n            };\n            var clientContent2 = {\n              index: 0,\n              str: 'value = V2 WHERE'\n            };\n            var clientContent3 = {\n              index: 0,\n              str: ' key = k'\n            };\n            var statusText1 = document.getElementById('client-message-status-text1');\n            var statusText2 = document.getElementById('client-message-status-text2');\n            var statusText3 = document.getElementById('client-message-status-text3');\n            HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n            HelperFunctions.showElement(statusElem);\n            anime({\n              targets: clientContent1,\n              index: clientContent1.str.length,\n              easing: 'linear',\n              duration: 400,\n              update: function update() {\n                statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: clientContent2,\n                  index: clientContent2.str.length,\n                  easing: 'linear',\n                  duration: 400,\n                  update: function update() {\n                    statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n                  },\n                  complete: function complete() {\n                    anime({\n                      targets: clientContent3,\n                      index: clientContent3.str.length,\n                      easing: 'linear',\n                      duration: 400,\n                      update: function update() {\n                        statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                      },\n                      complete: function complete() {\n                        var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, '');\n                        animation.finished.then(function () {\n                          var nodeAToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, '');\n                          nodeAToBAnimation.finished.then(function () {\n                            HelperFunctions.hideElement(document.getElementById('client-message-status'));\n                            HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n                            HelperFunctions.showElement(document.getElementById('node-a-message-status'));\n                            HelperFunctions.showElement(document.getElementById('node-a-message-bubble')); // send commit confirmation back to B\n\n                            var aToBAnim = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, '', true, 600);\n                            HelperFunctions.showElement(document.getElementById('node-a-text-highlight'));\n                            HelperFunctions.hideElement(document.getElementById('node-a-extra-text2'));\n                            aToBAnim.finished.then(function () {\n                              HelperFunctions.showElement(document.getElementById('node-b-text-highlight'));\n                              HelperFunctions.hideElement(document.getElementById('node-b-extra-text2'));\n                            });\n                            HelperFunctions.hideElement(document.getElementById('node-a-message-status'));\n                            HelperFunctions.hideElement(document.getElementById('node-a-message-bubble')); // notify client as well\n\n                            var messageToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE);\n                            messageToClientAnimation.finished.then(function () {\n                              HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n                              HelperFunctions.showElement(document.getElementById('client-message-status-anchor'));\n                              document.getElementById('client-message-status-anchor').innerHTML = 'Update successful!';\n                              _this3.animationState = ANIMATION_STATE_CLIENT_READ_FROM_NODE_C;\n                              resolve({\n                                animationState: _this3.animationState,\n                                delay: 100\n                              });\n                            });\n                          });\n                        });\n                      }\n                    });\n                  }\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_READ_FROM_NODE_C:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-a-message-status'));\n            HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n            HelperFunctions.hideElement(document.getElementById('node-a-text-highlight'));\n            HelperFunctions.hideElement(document.getElementById('node-b-text-highlight'));\n            document.getElementById('client-message-status-anchor').innerHTML = '';\n            HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n            this.changeMainText('Now the client queries C. This should return value = ' + SET_VALUE2, function () {\n              _this3.animationState = ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C:\n          {\n            var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false);\n            animation.finished.then(function () {\n              _this3.changeMainText('Now the client queries C. This should return value = ' + SET_VALUE2, function () {\n                var animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE, false);\n                animation.finished.then(function () {\n                  HelperFunctions.hideElement(document.getElementById('client-message-status'));\n                  HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n                  HelperFunctions.setSVGText({\n                    targetId: 'client-node-value',\n                    text: \"Value: \".concat(SET_VALUE1),\n                    addCSSClass: 'stale-data-text'\n                  });\n                });\n                _this3.animationState = Constants.ANIMATION_STATE_FINISHED;\n\n                _this3.setState({\n                  animationFinished: true\n                });\n\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              });\n            });\n            break;\n          }\n\n        case Constants.ANIMATION_STATE_FINISHED:\n          {\n            resolve({\n              animationState: this.animationState,\n              delay: 100\n            });\n            break;\n          }\n\n        default:\n          console.error('Unrecognized state: ' + this.animationState);\n      }\n    }\n  }, {\n    key: \"changeMainText\",\n    value: function changeMainText(text, onComplete) {\n      HelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main-diagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(MainDiagram, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"main-text-sect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReadOperationAnimation;\n}(Component);\nexport default ReadOperationAnimation;","map":{"version":3,"sources":["/Users/andrew/code/yb-architecture/animations/src/ReadFailureAnimation.js"],"names":["React","Component","anime","MainDiagram","Constants","HelperFunctions","require","ANIMATION_STATE_INITIAL","ANIMATION_STATE_UNSAFE_READ","ANIMATION_STATE_LEADER_RECEIVED_MESSAGE_FROM_CLIENT","ANIMATION_STATE_LEADER_RECEIVED_ACKS_FROM_FOLLOWERS","ANIMATION_STATE_NETWORK_PARTITIONED","ANIMATION_STATE_NODE_C_PARTITIONED","ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER","ANIMATION_STATE_CLIENT_SET_OPERATION","ANIMATION_STATE_POST_PARTITION_NODE_A_RECEIVED_MESSAGE_FROM_CLIENT","ANIMATION_STATE_CLIENT_READ_FROM_NODE_C","ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C","SET_VALUE1","SET_VALUE2","setValueText","value","getSetValueText","ReadOperationAnimation","props","animationState","state","animationFinished","mainTextSect","document","getElementById","Promise","resolve","reject","onNextInternal","nodeOuterCircles","getElementsByClassName","i","length","hideElement","changeMainText","nodeC","classList","add","showElement","delay","altBubbleText","contentLine1","index","str","targets","easing","duration","update","innerText","substr","complete","partitionNodeC","nodeATextBox","content","nodeA","setSVGText","targetId","text","introduceClient","statusElem","clientContent1","clientContent2","clientContent3","statusText1","statusText2","statusText3","textContent","animation","sendLogMessage","CLIENT_NODE","NODE_A","finished","then","nodeAToBAnimation","NODE_B","aToBAnim","messageToClientAnimation","innerHTML","NODE_C","addCSSClass","ANIMATION_STATE_FINISHED","setState","console","error","onComplete","setTextWithAnimation"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\n\nconst ANIMATION_STATE_INITIAL = \"READ_OPERATION_INITIAL\";\nconst ANIMATION_STATE_UNSAFE_READ = \"ANIMATION_STATE_UNSAFE_READ\";\nconst ANIMATION_STATE_LEADER_RECEIVED_MESSAGE_FROM_CLIENT = \"ANIMATION_STATE_LEADER_RECEIVED_MESSAGE_FROM_CLIENT\";\nconst ANIMATION_STATE_LEADER_RECEIVED_ACKS_FROM_FOLLOWERS = \"ANIMATION_STATE_LEADER_RECEIVED_ACKS_FROM_FOLLOWERS\";\nconst ANIMATION_STATE_NETWORK_PARTITIONED = \"ANIMATION_STATE_NETWORK_PARTITIONED\";\nconst ANIMATION_STATE_NODE_C_PARTITIONED = \"ANIMATION_STATE_NODE_C_PARTITIONED\";\nconst ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER = \"ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER\";\nconst ANIMATION_STATE_CLIENT_SET_OPERATION = 'ANIMATION_STATE_CLIENT_SET_OPERATION';\nconst ANIMATION_STATE_POST_PARTITION_NODE_A_RECEIVED_MESSAGE_FROM_CLIENT = \"ANIMATION_STATE_POST_PARTITION_NODE_A_RECEIVED_MESSAGE_FROM_CLIENT\";\nconst ANIMATION_STATE_CLIENT_READ_FROM_NODE_C = 'ANIMATION_STATE_CLIENT_READ_FROM_NODE_C';\nconst ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C = \"ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C\";\n\nconst SET_VALUE1=\"V1\";\nconst SET_VALUE2=\"V2\";\nfunction setValueText(value) {\n\treturn HelperFunctions.getSetValueText(value);\n}\n\nexport class ReadOperationAnimation extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.animationState = ANIMATION_STATE_INITIAL;\n\t\tthis.state = {\n\t\t\tanimationFinished: false,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mainTextSect = document.getElementById('center-message-text');\n\t}\n\n\tpause() {\n\t}\n\tresume() {\n\t}\n\n\tonNext() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onNextInternal(resolve,reject);\n\t\t});\n\t}\n\n\tonNextInternal(resolve,reject) {\n\t\tswitch(this.animationState) {\n\t\t\tcase ANIMATION_STATE_INITIAL: {\n\t\t\t\t//////////////////// initial setup ////////////////////\n\n\t\t\t\t// hide all outer circles (TODO: revisit this approach)\n\t\t\t\tvar nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\t\t\t\tfor (var i = 0; i < nodeOuterCircles.length; i++) {\n\t\t\t\t\tHelperFunctions.hideElement(nodeOuterCircles[i]);\n\t\t\t\t}\n\t\t\t\t//////////////////////////////////////////////////////\n\t\t\t\tthis.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', () => {\n\t\t\t\t\t// make Node C the Leader\n\t\t\t\t\tvar nodeC = document.getElementById('node-c-circle');\n\t\t\t\t\tnodeC.classList.add('leader-node');\n\t\t\t\t\tHelperFunctions.showElement(document.getElementById('node-a-term-text'));\n\t\t\t\t\tHelperFunctions.showElement(document.getElementById('node-b-term-text'));\n\t\t\t\t\tHelperFunctions.showElement(document.getElementById('node-c-term-text'));\n\n\t\t\t\t\tHelperFunctions.showElement(document.getElementById('node-a-value-text-rect'));\n\t\t\t\t\tHelperFunctions.showElement(document.getElementById('node-b-value-text-rect'));\n\t\t\t\t\tHelperFunctions.showElement(document.getElementById('node-c-value-text-rect'));\n\t\t\t\t\n          this.animationState = ANIMATION_STATE_UNSAFE_READ;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_UNSAFE_READ: {\n\t\t\t\tthis.changeMainText('Unsafe to read from raft leader without majority heartbeats. This sequence explains why.', () => {\n\t\t\t\t\tthis.animationState = ANIMATION_STATE_NODE_C_PARTITIONED;\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_NODE_C_PARTITIONED: {\n\t\t\t\tthis.changeMainText('');\n        const altBubbleText = document.getElementById('node-c-message-text-alt');\n        HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n\n\t\t\t\tconst contentLine1 = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'Now imagine raft leader C gets\\n partitioned from follower\\n[but not from client]'\n        };\n\n        anime({\n          targets: contentLine1,\n          index: contentLine1.str.length,\n          easing: 'linear',\n          duration: 1500,\n          update: function() {\n            altBubbleText.innerText = contentLine1.str.substr(0, contentLine1.index);\n          },\n          complete: () => {\n            HelperFunctions.partitionNodeC()\n            this.animationState = ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_NODE_A_ELECTED_AS_LEADER: {\n        HelperFunctions.hideElement(document.getElementById('node-c-message-text-alt'));\n        HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n        const nodeATextBox = document.getElementById('node-a-message-status');\n        HelperFunctions.showElement(document.getElementById('node-a-message-bubble'));\n        const content = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'This results in A and B\\n electing a new raft\\nleader, say A.'\n        };\n\n        anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 1300,\n          update: function() {\n            nodeATextBox.innerText = content.str.substr(0, content.index);\n          },\n          complete: () => {\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.add('leader-node');\n            HelperFunctions.setSVGText({targetId: 'node-a-term-text', text: \"Term: 2\"});\n            HelperFunctions.setSVGText({targetId: 'node-b-term-text', text: \"Term: 2\"});\n            HelperFunctions.showElement(document.getElementById('node-a-term-highlight'));\n            HelperFunctions.showElement(document.getElementById('node-b-term-highlight'));\n            this.animationState = ANIMATION_STATE_CLIENT_SET_OPERATION;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_CLIENT_SET_OPERATION: {\n        /**\n         * Update: (monospaced) UPDATE T SET value = V2 WHERE key = k \n         * (Get rid of committed but leave uncommitted and change node\n         *  subtext to k: V1, and highlight the value. \n         *  After Node A sends msg to client, show Client: “Update successful!”\n         */\n        HelperFunctions.hideElement(document.getElementById('node-a-message-status'));\n        HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n        HelperFunctions.hideElement(document.getElementById('node-a-term-highlight'));\n        HelperFunctions.hideElement(document.getElementById('node-b-term-highlight'));\n        HelperFunctions.introduceClient();\n\n        const statusElem = document.getElementById('client-message-status');\n        const clientContent1 = {\n          index: 0,\n          str: 'UPDATE T SET'\n        }\n        const clientContent2 = {\n          index: 0,\n          str: 'value = V2 WHERE'\n        }\n        const clientContent3 = {\n          index: 0,\n          str: ' key = k'\n        }\n        \n        const statusText1 = document.getElementById('client-message-status-text1');\n        const statusText2 = document.getElementById('client-message-status-text2');\n        const statusText3 = document.getElementById('client-message-status-text3');\n        HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n        HelperFunctions.showElement(statusElem);\n        anime({\n          targets: clientContent1,\n          index: clientContent1.str.length,\n          easing: 'linear',\n          duration: 400,\n          update: function() {\n            statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n          },\n          complete: () => {\n            anime({\n              targets: clientContent2,\n              index: clientContent2.str.length,\n              easing: 'linear',\n              duration: 400,\n              update: function () {\n                statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n              },\n              complete: () => {\n                anime({\n                  targets: clientContent3,\n                  index: clientContent3.str.length,\n                  easing: 'linear',\n                  duration: 400,\n                  update: function () {\n                    statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                  },\n                  complete: () => {   \n                    var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, '');\n                    animation.finished.then(() => {\n                      var nodeAToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, '');\n                      nodeAToBAnimation.finished.then(() => {\n                        HelperFunctions.hideElement(document.getElementById('client-message-status'));\n                        HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n                        HelperFunctions.showElement(document.getElementById('node-a-message-status'));\n                        HelperFunctions.showElement(document.getElementById('node-a-message-bubble'));\n                        \n                        // send commit confirmation back to B\n                        var aToBAnim = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, '', true, 600);\n                        HelperFunctions.showElement(document.getElementById('node-a-text-highlight'));\n                        HelperFunctions.hideElement(document.getElementById('node-a-extra-text2'));\n\n                        aToBAnim.finished.then(() => {\n                          HelperFunctions.showElement(document.getElementById('node-b-text-highlight'));\n                          HelperFunctions.hideElement(document.getElementById('node-b-extra-text2'));\n                        });\n\n                        HelperFunctions.hideElement(document.getElementById('node-a-message-status'));\n                        HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n\n                        // notify client as well\n                        var messageToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE);\n\n                        messageToClientAnimation.finished.then(() => {\n                          HelperFunctions.showElement(document.getElementById('client-message-bubble'));\n                          HelperFunctions.showElement(document.getElementById('client-message-status-anchor'));\n                          document.getElementById('client-message-status-anchor').innerHTML = 'Update successful!';\n                          this.animationState = ANIMATION_STATE_CLIENT_READ_FROM_NODE_C;\n                          resolve({\n                            animationState: this.animationState,\n                            delay: 100,\n                          });\n                        });\n                      });\n                    })\n                  }\n                });\n              }\n            });\n          }\n        });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_CLIENT_READ_FROM_NODE_C: {\n        HelperFunctions.hideElement(document.getElementById('node-a-message-status'));\n        HelperFunctions.hideElement(document.getElementById('node-a-message-bubble'));\n        HelperFunctions.hideElement(document.getElementById('node-a-text-highlight'));\n        HelperFunctions.hideElement(document.getElementById('node-b-text-highlight'));\n        document.getElementById('client-message-status-anchor').innerHTML = '';\n        HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n        \n        this.changeMainText('Now the client queries C. This should return value = ' + SET_VALUE2, () => {\n          this.animationState = ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n        });\n        break;\n      }\n      case ANIMATION_STATE_CLIENT_HAS_READ_FROM_PARTITION_NODE_C: {\n\n        var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_C, false);\n\n        animation.finished.then(() => {\n          this.changeMainText('Now the client queries C. This should return value = ' + SET_VALUE2, () => {\n\n            var animation = HelperFunctions.sendLogMessage(Constants.NODE_C, Constants.CLIENT_NODE, false);\n            animation.finished.then(() => {\n              HelperFunctions.hideElement(document.getElementById('client-message-status'));\n              HelperFunctions.hideElement(document.getElementById('client-message-bubble'));\n              HelperFunctions.setSVGText({\n                targetId:'client-node-value',\n                text: `Value: ${SET_VALUE1}`,\n                addCSSClass: 'stale-data-text',\n              });\n            })\n            this.animationState = Constants.ANIMATION_STATE_FINISHED;\n            this.setState({ animationFinished: true });\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          })\n        });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Constants.ANIMATION_STATE_FINISHED: {\n\t\t\t\tresolve({\n\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\tdelay: 100,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.error('Unrecognized state: ' + this.animationState);\n\t\t}\n\t}\n\n\tchangeMainText(text, onComplete) {\n\t\tHelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div id=\"main-diagram\">\n\t\t\t\t\t<MainDiagram/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"main-text-sect\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ReadOperationAnimation;\n"]},"metadata":{},"sourceType":"module"}