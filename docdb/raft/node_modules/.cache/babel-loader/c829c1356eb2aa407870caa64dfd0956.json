{"ast":null,"code":"import _classCallCheck from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/code/yb-architecture/animations/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrew/code/yb-architecture/animations/src/LeaderLeasesAnimation.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\nvar ANIMATION_STATE_INITIAL = \"LEADER_LEASE_INITIAL\";\nvar ANIMATION_STATE_LEADER_REPLICATES_LEASE = \"ANIMATION_STATE_LEADER_REPLICATES_LEASE\";\nvar ANIMATION_STATE_LEADER_READS_PROTOCOL = 'ANIMATION_STATE_LEADER_READS_PROTOCOL';\nvar ANIMATION_STATE_START_LEADER_LEASE = 'ANIMATION_STATE_START_LEADER_LEASE';\nvar ANIMATION_STATE_CLIENT_WROTE_TO_ORIGINAL_LEADER = \"ANIMATION_STATE_CLIENT_WROTE_TO_ORIGINAL_LEADER\";\nvar ANIMATION_STATE_VALUE1_COMMITTED = \"ANIMATION_STATE_VALUE1_COMMITTED\";\nvar ANIMATION_STATE_CLIENT_UPDATE_FAILS = 'ANIMATION_STATE_CLIENT_UPDATE_FAILS';\nvar ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED = \"ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED\";\nvar ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED = \"ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED\";\nvar ANIMATION_STATE_NEW_LEADER_ELECTED = \"ANIMATION_STATE_NEW_LEADER_ELECTED\";\nvar ANIMATION_STATE_LEADER_LEASE_DURATION = 'ANIMATION_STATE_LEADER_LEASE_DURATION';\nvar ANIMATION_STATE_OLD_LEADER_STILL_READABLE = 'ANIMATION_STATE_OLD_LEADER_STILL_READABLE';\nvar ANIMATION_STATE_OLD_LEASE_EXPIRES = 'ANIMATION_STATE_OLD_LEASE_EXPIRES';\nvar ANIMATION_STATE_TIMER_STARTED_ON_ORIGINAL_LEADER = \"ANIMATION_STATE_TIMER_STARTED_ON_ORIGINAL_LEADER\";\nvar ANIMATION_STATE_TIMER_STARTED_ON_NEW_LEADER = \"ANIMATION_STATE_TIMER_STARTED_ON_NEW_LEADER\";\nvar ANIMATION_STATE_POST_NEW_LEADER_VALUE2_COMMITTED = \"ANIMATION_STATE_POST_NEW_LEADER_VALUE2_COMMITTED\";\nvar ANIMATION_STATE_POST_NEW_LEADER_LOG_ACK_RECEIVED_FROM_FOLLOWER = \"ANIMATION_STATE_POST_NEW_LEADER_LOG_ACK_RECEIVED_FROM_FOLLOWER\";\nvar ANIMATION_STATE_NEW_LEADER_SENT_LEASES = \"ANIMATION_STATE_NEW_LEADER_SENT_LEASES\";\nvar SET_VALUE1 = \"V1\";\nvar SET_VALUE2 = \"V2\";\nvar ORIGINAL_LEADER_TIMER_DURATION = 16000;\nvar NODE_A_TIMER_DURATION = 14000;\nvar NODE_B_TIMER_DURATION = 30000;\nexport var LeaderLeaseAnimation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeaderLeaseAnimation, _Component);\n\n  function LeaderLeaseAnimation(props) {\n    var _this;\n\n    _classCallCheck(this, LeaderLeaseAnimation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeaderLeaseAnimation).call(this, props));\n    _this.animationState = ANIMATION_STATE_INITIAL;\n    _this.state = {};\n\n    _this.init();\n\n    return _this;\n  }\n\n  _createClass(LeaderLeaseAnimation, [{\n    key: \"init\",\n    value: function init() {\n      this.nodeATimerAnimation = null;\n      this.nodeBTimerAnimation = null;\n      this.nodeCTimerAnimation = null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mainTextSect = document.getElementById('center-message-text');\n      this.timersAreActive = false;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.timersAreActive) {\n        this.pauseTimers();\n      }\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      if (this.timersAreActive) {\n        this.resumeTimers();\n      }\n    }\n  }, {\n    key: \"onNext\",\n    value: function onNext() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.onNextInternal(resolve, reject);\n      });\n    }\n  }, {\n    key: \"onNextInternal\",\n    value: function onNextInternal(resolve, reject) {\n      var _this3 = this;\n\n      // Text Containers underneath each Node\n      var nodeATextContainer = document.getElementById('node-a-term-text-rect');\n      var nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n      var nodeCTextContainer = document.getElementById('node-c-term-text-rect'); // Text Term (Line 1)\n\n      var nodeATermText = document.getElementById('node-a-term-text');\n      var nodeBTermText = document.getElementById('node-b-term-text');\n      var nodeCTermText = document.getElementById('node-c-term-text'); // Highlight for Text Term (Line 1) -> Only 2 needed\n\n      var nodeATermHighlight = document.getElementById('node-a-term-highlight');\n      var nodeBTermHighlight = document.getElementById('node-b-term-highlight'); // Text Extra (Line 2)\n\n      var nodeAExtraText = document.getElementById('node-a-extra-text');\n      var nodeBExtraText = document.getElementById('node-b-extra-text');\n      var nodeCExtraText = document.getElementById('node-c-extra-text'); // Highlight for Text Extra (Line 2)\n\n      var nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n      var nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n      var nodeCExtraHighlight = document.getElementById('node-c-text-highlight'); // Text Extra (Line 3)\n\n      var nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n      var nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n      var nodeCExtraText2 = document.getElementById('node-c-extra-text2'); // MESSAGE OBJECTS\n\n      var nodeAMessageBubble = document.getElementById('node-a-message-bubble');\n      var nodeAMessageStatus = document.getElementById('node-a-message-status');\n      var nodeCMessageBubble = document.getElementById('node-c-message-bubble');\n      var nodeCMessageStatus = document.getElementById('node-c-message-status'); // Client\n\n      var clientMessageBubble = document.getElementById('client-message-bubble');\n      var clientQueryMessage = document.getElementById('client-query-message');\n      var clientMessageBackground = document.getElementById('client-message-status-bg');\n\n      switch (this.animationState) {\n        case ANIMATION_STATE_INITIAL:\n          {\n            //////////////////// initial setup ////////////////////\n            // hide all outer circles (TODO: revisit this approach)\n            var nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\n            for (var i = 0; i < nodeOuterCircles.length; i++) {\n              HelperFunctions.hideElement(nodeOuterCircles[i]);\n            } //////////////////////////////////////////////////////\n\n\n            this.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', function () {\n              // make Node C  the leader\n              var nodeC = document.getElementById('node-c-circle');\n              nodeC.classList.add('leader-node');\n              HelperFunctions.showElement(nodeATextContainer);\n              HelperFunctions.showElement(nodeBTextContainer);\n              HelperFunctions.showElement(nodeCTextContainer);\n              nodeATermText.innerHTML = 'Term: 1';\n              nodeBTermText.innerHTML = 'Term: 1';\n              nodeCTermText.innerHTML = 'Term: 1';\n              nodeAExtraText.innerHTML = '(k, V1)';\n              nodeBExtraText.innerHTML = '(k, V1)';\n              nodeCExtraText.innerHTML = '(k, V1)';\n              _this3.animationState = ANIMATION_STATE_LEADER_READS_PROTOCOL;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 1000\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_READS_PROTOCOL:\n          {\n            this.changeMainText('Performing raft-protocol, leader-only reads safely using leader leases', function () {\n              _this3.animationState = ANIMATION_STATE_START_LEADER_LEASE;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 1000\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_START_LEADER_LEASE:\n          {\n            this.changeMainText('');\n            HelperFunctions.showElement(nodeCMessageBubble);\n            HelperFunctions.showElement(nodeCMessageStatus);\n            var statusText1 = document.getElementById('node-c-message-status-text1');\n            var statusText2 = document.getElementById('node-c-message-status-text2');\n            var contentLine1 = {\n              index: 0,\n              str: 'Raft leader starts a'\n            };\n            var contentLine2 = {\n              index: 0,\n              str: 'new lease timer for itself.'\n            };\n            anime({\n              targets: contentLine1,\n              index: contentLine1.str.length,\n              easing: 'linear',\n              duration: 600,\n              update: function update() {\n                statusText1.textContent = contentLine1.str.substr(0, contentLine1.index);\n              },\n              complete: function complete() {\n                anime({\n                  targets: contentLine2,\n                  index: contentLine2.str.length,\n                  easing: 'linear',\n                  duration: 600,\n                  update: function update() {\n                    statusText2.textContent = contentLine2.str.substr(0, contentLine2.index);\n                  },\n                  complete: function complete() {\n                    _this3.timersAreActive = true; // this.nodeCTimerAnimation = HelperFunctions.startLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_TIMER_DURATION);\n\n                    _this3.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 3000, 90);\n                    _this3.animationState = ANIMATION_STATE_LEADER_REPLICATES_LEASE;\n                    resolve({\n                      animationState: _this3.animationState,\n                      delay: 100,\n                      asyncAnimation: true\n                    });\n                  }\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_REPLICATES_LEASE:\n          {\n            // this.changeMainText('Leader replicates a lease interval to followers', () => {\n            HelperFunctions.hideElement(nodeCMessageBubble);\n            HelperFunctions.hideElement(nodeCMessageStatus);\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n            var textAlt = document.getElementById('node-c-message-text-alt');\n            var leaseToA = document.getElementById('node-c-lease-to-node-a');\n            var content = {\n              index: 0,\n              str: 'Raft leader then replicates a\\nlease interval to followers. Note\\nthe lease timer on C has started\\nbefore replicating to A and B.'\n            };\n            var nodeCTextAnimation = anime({\n              targets: content,\n              index: content.str.length,\n              easing: 'linear',\n              duration: 2500,\n              update: function update() {\n                textAlt.innerText = content.str.substr(0, content.index);\n              }\n            });\n            var nodeALeaseAnimation = anime({\n              targets: leaseToA,\n              translateX: -280,\n              translateY: 0,\n              easing: 'linear',\n              duration: 1500,\n              begin: function begin() {\n                HelperFunctions.showElement(leaseToA);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(leaseToA);\n                leaseToA.style.transform = 'none';\n              }\n            });\n            this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 5000, 60);\n            var leaseToB = document.getElementById('node-c-lease-to-node-b');\n            var nodeBLeaseAnimation = anime({\n              targets: leaseToB,\n              translateX: -150,\n              translateY: -280,\n              easing: 'linear',\n              duration: 1500,\n              begin: function begin() {\n                HelperFunctions.showElement(leaseToB);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(leaseToB);\n                leaseToB.style.transform = 'none';\n              }\n            });\n            Promise.all([nodeCTextAnimation.finished, nodeALeaseAnimation.finished, nodeBLeaseAnimation.finished, this.nodeCTimerAnimation]).then(function () {\n              _this3.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 3000, 85);\n              _this3.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 3000, 90);\n              _this3.animationState = ANIMATION_STATE_LEADER_LEASE_DURATION;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 500,\n                asyncAnimation: true\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_LEADER_LEASE_DURATION:\n          {\n            HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n            document.getElementById('node-c-message-text-alt').innerHTML = '';\n            this.changeMainText('Any new leader must wait out the existing Leader Lease duration before acquiring lease.', function () {\n              _this3.animationState = ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED:\n          {\n            this.changeMainText('Now suppose the original leader gets network partitioned', function () {\n              // partition original leader\n              HelperFunctions.partitionNodeC();\n              _this3.animationState = ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED:\n          {\n            this.changeMainText('');\n            HelperFunctions.showElement(nodeAMessageBubble);\n            HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n            var nodeAContent = {\n              index: 0,\n              str: 'A wins new leader election\\n but cannot perform any\\noperations until Leader\\nLease on A runs out.'\n            };\n            anime({\n              targets: nodeAContent,\n              index: nodeAContent.str.length,\n              easing: 'linear',\n              duration: 1500,\n              update: function update() {\n                nodeAMessageStatus.innerText = nodeAContent.str.substr(0, nodeAContent.index);\n              },\n              complete: function complete() {\n                // elect Node A as new leader candidate\n                var nodeA = document.getElementById('node-a-circle');\n                nodeA.classList.add('leader-candidate-node');\n                HelperFunctions.setSVGText({\n                  targetId: 'node-a-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.setSVGText({\n                  targetId: 'node-b-term-text',\n                  text: \"Term: 2\"\n                });\n                HelperFunctions.showElement(nodeATermHighlight);\n                HelperFunctions.showElement(nodeBTermHighlight);\n                _this3.animationState = ANIMATION_STATE_CLIENT_UPDATE_FAILS;\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_CLIENT_UPDATE_FAILS:\n          {\n            HelperFunctions.hideElement(nodeAMessageBubble);\n            HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n            nodeAMessageStatus.innerHTML = '';\n            HelperFunctions.hideElement(nodeATermHighlight);\n            HelperFunctions.hideElement(nodeBTermHighlight);\n            this.changeMainText('If client tries to write to A, operation is rejected..', function () {\n              HelperFunctions.introduceClient();\n              HelperFunctions.showElement(clientMessageBubble);\n              HelperFunctions.showElement(clientMessageBackground);\n              HelperFunctions.showElement(clientQueryMessage);\n              var clientContent1 = {\n                index: 0,\n                str: 'UPDATE T SET'\n              };\n              var clientContent2 = {\n                index: 0,\n                str: 'value = V2 WHERE'\n              };\n              var clientContent3 = {\n                index: 0,\n                str: ' key = k'\n              };\n              var statusText1 = document.getElementById('client-query-message-text1');\n              var statusText2 = document.getElementById('client-query-message-text2');\n              var statusText3 = document.getElementById('client-query-message-text3');\n              anime({\n                targets: clientContent1,\n                index: clientContent1.str.length,\n                easing: 'linear',\n                duration: 400,\n                update: function update() {\n                  statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n                },\n                complete: function complete() {\n                  anime({\n                    targets: clientContent2,\n                    index: clientContent2.str.length,\n                    easing: 'linear',\n                    duration: 400,\n                    update: function update() {\n                      statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n                    },\n                    complete: function complete() {\n                      anime({\n                        targets: clientContent3,\n                        index: clientContent3.str.length,\n                        easing: 'linear',\n                        duration: 400,\n                        update: function update() {\n                          statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                        },\n                        complete: function complete() {\n                          var messageContrainerElement = document.getElementById('client-message');\n                          var messageElement = document.getElementById('client-message-circle');\n                          var messageTextElement = document.getElementById('client-message-text');\n                          HelperFunctions.messageFromClient(Constants.NODE_A, {\n                            onBegin: function onBegin() {\n                              HelperFunctions.showElement(messageContrainerElement);\n                              messageElement.classList.add('log-message');\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: ''\n                              });\n                            },\n                            onChangeComplete: function onChangeComplete() {\n                              messageElement.classList.remove('log-message');\n                              messageElement.classList.add('error-message');\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: 'Rejected'\n                              }); // messageTextElement\n                            },\n                            onComplete: function onComplete() {\n                              messageElement.classList.remove('error-message');\n                              HelperFunctions.hideElement(messageContrainerElement);\n                              messageContrainerElement.style.transform = 'none';\n                              HelperFunctions.setSVGText({\n                                targetId: 'client-message-text',\n                                text: ''\n                              });\n                            },\n                            alternate: true\n                          });\n                          _this3.animationState = ANIMATION_STATE_OLD_LEADER_STILL_READABLE;\n                          resolve({\n                            animationState: _this3.animationState,\n                            delay: 100\n                          });\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_OLD_LEADER_STILL_READABLE:\n          {\n            this.changeMainText('');\n            HelperFunctions.hideElement(document.getElementById('client-query-message'));\n            var clientMessageStatus = document.getElementById('client-message-status');\n            var _contentLine = {\n              index: 0,\n              str: 'Client can still read from C and get a valid response. Writes, however, are unavailable at this moment.'\n            };\n            anime({\n              targets: _contentLine,\n              index: _contentLine.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                clientMessageStatus.textContent = _contentLine.str.substr(0, _contentLine.index);\n              },\n              complete: function complete() {\n                _this3.animationState = ANIMATION_STATE_OLD_LEASE_EXPIRES;\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_OLD_LEASE_EXPIRES:\n          {\n            HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n            var nodeCTextAlt = document.getElementById('node-c-message-text-alt');\n            var _content = {\n              index: 0,\n              str: 'Leader Lease of C will run out\\nfirst [since it started first]. \\nC now steps down as leader.'\n            };\n            this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 6000);\n            anime({\n              targets: _content,\n              index: _content.str.length,\n              easing: 'linear',\n              duration: 2000,\n              update: function update() {\n                nodeCTextAlt.textContent = _content.str.substr(0, _content.index);\n              }\n            });\n            this.nodeCTimerAnimation.finished.then(function () {\n              var nodeC = document.getElementById('node-c-circle');\n              nodeC.classList.remove('leader-node');\n              _this3.animationState = ANIMATION_STATE_NEW_LEADER_ELECTED;\n              resolve({\n                animationState: _this3.animationState,\n                delay: 100\n              });\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_ELECTED:\n          {\n            // hide Node A's leader lease timer\n            HelperFunctions.hideElement(document.getElementById(HelperFunctions.leaderLeaseTimerId(Constants.NODE_A))); // and start its my lease timer\n\n            this.nodeATimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_A, NODE_A_TIMER_DURATION); // then send leader lease message to B\n\n            var leaseToB = document.getElementById('node-a-lease-to-node-b');\n            var nodeBLeaseAnimation = anime({\n              targets: leaseToB,\n              translateX: 150,\n              translateY: -280,\n              easing: 'linear',\n              duration: 1500,\n              begin: function begin() {\n                HelperFunctions.showElement(leaseToB);\n              },\n              complete: function complete() {\n                HelperFunctions.hideElement(leaseToB);\n                leaseToB.style.transform = 'none';\n\n                _this3.nodeBTimerAnimation.restart();\n\n                _this3.animationState = ANIMATION_STATE_NEW_LEADER_SENT_LEASES;\n                resolve({\n                  animationState: _this3.animationState,\n                  delay: 100\n                });\n              }\n            });\n            break;\n          }\n\n        case ANIMATION_STATE_NEW_LEADER_SENT_LEASES:\n          {\n            this.changeMainText(\"From here on, client can write messages to the new leader\", function () {\n              // initiate a raft round\n              // client message to A\n              var animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, HelperFunctions.getSetValueText(SET_VALUE2), false, 0);\n              animation.finished.then(function () {\n                // message with ack from A to B\n                var messageToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, HelperFunctions.getSetValueText(SET_VALUE2), false, 0, _this3.nodeBTimerAnimation, _this3.nodeATimerAnimation);\n                messageToBAnimation.finished.then(function () {\n                  // confirmation message back to B and the client\n                  var confirmToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE, false, false, HelperFunctions.getSetValueText(SET_VALUE2), 0);\n                  var confirmToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, HelperFunctions.getSetValueText(SET_VALUE2), true, 300, _this3.nodeBTimerAnimation);\n                  Promise.all([confirmToClientAnimation.finished, confirmToBAnimation.finished]).then(function () {\n                    _this3.animationState = Constants.ANIMATION_STATE_FINISHED;\n\n                    _this3.stopTimers();\n\n                    _this3.setState({\n                      animationFinished: true\n                    });\n\n                    resolve({\n                      animationState: _this3.animationState,\n                      delay: 100\n                    });\n                  });\n                });\n              });\n            });\n            break;\n          }\n\n        case Constants.ANIMATION_STATE_FINISHED:\n          {\n            console.log('Animation finished. Nothing to do');\n            resolve({\n              animationState: this.animationState,\n              delay: 100\n            });\n            break;\n          }\n\n        default:\n          console.error('Unrecognized state: ' + this.animationState);\n      }\n    }\n  }, {\n    key: \"changeMainText\",\n    value: function changeMainText(text, onComplete, delay) {\n      HelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete, delay);\n    }\n  }, {\n    key: \"restartTimers\",\n    value: function restartTimers() {\n      if (this.nodeATimerAnimation) {\n        this.nodeATimerAnimation.restart();\n      }\n\n      if (this.nodeBTimerAnimation) {\n        this.nodeBTimerAnimation.restart();\n      }\n\n      if (this.nodeCTimerAnimation) {\n        this.nodeCTimerAnimation.restart();\n      }\n    }\n  }, {\n    key: \"stopTimers\",\n    value: function stopTimers() {\n      this.timersAreActive = false;\n      this.pauseTimers();\n    }\n  }, {\n    key: \"pauseTimers\",\n    value: function pauseTimers() {\n      if (this.nodeATimerAnimation) {\n        this.nodeATimerAnimation.pause();\n      }\n\n      if (this.nodeBTimerAnimation) {\n        this.nodeBTimerAnimation.pause();\n      }\n\n      if (this.nodeCTimerAnimation) {\n        this.nodeCTimerAnimation.pause();\n      }\n    }\n  }, {\n    key: \"resumeTimers\",\n    value: function resumeTimers() {\n      if (this.nodeATimerAnimation) {\n        this.nodeATimerAnimation.play();\n      }\n\n      if (this.nodeBTimerAnimation) {\n        this.nodeBTimerAnimation.play();\n      }\n\n      if (this.nodeCTimerAnimation) {\n        this.nodeCTimerAnimation.play();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main-diagram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(MainDiagram, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"main-text-sect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LeaderLeaseAnimation;\n}(Component);\nexport default LeaderLeaseAnimation;","map":{"version":3,"sources":["/Users/andrew/code/yb-architecture/animations/src/LeaderLeasesAnimation.js"],"names":["React","Component","anime","MainDiagram","Constants","HelperFunctions","require","ANIMATION_STATE_INITIAL","ANIMATION_STATE_LEADER_REPLICATES_LEASE","ANIMATION_STATE_LEADER_READS_PROTOCOL","ANIMATION_STATE_START_LEADER_LEASE","ANIMATION_STATE_CLIENT_WROTE_TO_ORIGINAL_LEADER","ANIMATION_STATE_VALUE1_COMMITTED","ANIMATION_STATE_CLIENT_UPDATE_FAILS","ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED","ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED","ANIMATION_STATE_NEW_LEADER_ELECTED","ANIMATION_STATE_LEADER_LEASE_DURATION","ANIMATION_STATE_OLD_LEADER_STILL_READABLE","ANIMATION_STATE_OLD_LEASE_EXPIRES","ANIMATION_STATE_TIMER_STARTED_ON_ORIGINAL_LEADER","ANIMATION_STATE_TIMER_STARTED_ON_NEW_LEADER","ANIMATION_STATE_POST_NEW_LEADER_VALUE2_COMMITTED","ANIMATION_STATE_POST_NEW_LEADER_LOG_ACK_RECEIVED_FROM_FOLLOWER","ANIMATION_STATE_NEW_LEADER_SENT_LEASES","SET_VALUE1","SET_VALUE2","ORIGINAL_LEADER_TIMER_DURATION","NODE_A_TIMER_DURATION","NODE_B_TIMER_DURATION","LeaderLeaseAnimation","props","animationState","state","init","nodeATimerAnimation","nodeBTimerAnimation","nodeCTimerAnimation","mainTextSect","document","getElementById","timersAreActive","pauseTimers","resumeTimers","Promise","resolve","reject","onNextInternal","nodeATextContainer","nodeBTextContainer","nodeCTextContainer","nodeATermText","nodeBTermText","nodeCTermText","nodeATermHighlight","nodeBTermHighlight","nodeAExtraText","nodeBExtraText","nodeCExtraText","nodeAExtraHighlight","nodeBExtraHighlight","nodeCExtraHighlight","nodeAExtraText2","nodeBExtraText2","nodeCExtraText2","nodeAMessageBubble","nodeAMessageStatus","nodeCMessageBubble","nodeCMessageStatus","clientMessageBubble","clientQueryMessage","clientMessageBackground","nodeOuterCircles","getElementsByClassName","i","length","hideElement","changeMainText","nodeC","classList","add","showElement","innerHTML","delay","statusText1","statusText2","contentLine1","index","str","contentLine2","targets","easing","duration","update","textContent","substr","complete","startMyLeaseTimer","NODE_C","asyncAnimation","textAlt","leaseToA","content","nodeCTextAnimation","innerText","nodeALeaseAnimation","translateX","translateY","begin","style","transform","leaseToB","nodeBLeaseAnimation","all","finished","then","startLeaderLeaseTimer","NODE_A","NODE_B","partitionNodeC","nodeAContent","nodeA","setSVGText","targetId","text","introduceClient","clientContent1","clientContent2","clientContent3","statusText3","messageContrainerElement","messageElement","messageTextElement","messageFromClient","onBegin","onChangeComplete","remove","onComplete","alternate","clientMessageStatus","nodeCTextAlt","leaderLeaseTimerId","restart","animation","sendLogMessage","CLIENT_NODE","getSetValueText","messageToBAnimation","confirmToClientAnimation","confirmToBAnimation","ANIMATION_STATE_FINISHED","stopTimers","setState","animationFinished","console","log","error","setTextWithAnimation","pause","play"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport MainDiagram from './svg/MainDiagram';\nimport { Constants } from './constants';\n\nvar HelperFunctions = require('./HelperFunctions');\n\n\nconst ANIMATION_STATE_INITIAL = \"LEADER_LEASE_INITIAL\";\nconst ANIMATION_STATE_LEADER_REPLICATES_LEASE = \"ANIMATION_STATE_LEADER_REPLICATES_LEASE\";\nconst ANIMATION_STATE_LEADER_READS_PROTOCOL = 'ANIMATION_STATE_LEADER_READS_PROTOCOL';\nconst ANIMATION_STATE_START_LEADER_LEASE = 'ANIMATION_STATE_START_LEADER_LEASE';\nconst ANIMATION_STATE_CLIENT_WROTE_TO_ORIGINAL_LEADER = \"ANIMATION_STATE_CLIENT_WROTE_TO_ORIGINAL_LEADER\";\nconst ANIMATION_STATE_VALUE1_COMMITTED = \"ANIMATION_STATE_VALUE1_COMMITTED\";\nconst ANIMATION_STATE_CLIENT_UPDATE_FAILS = 'ANIMATION_STATE_CLIENT_UPDATE_FAILS';\nconst ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED = \"ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED\";\nconst ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED = \"ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED\";\nconst ANIMATION_STATE_NEW_LEADER_ELECTED = \"ANIMATION_STATE_NEW_LEADER_ELECTED\";\nconst ANIMATION_STATE_LEADER_LEASE_DURATION = 'ANIMATION_STATE_LEADER_LEASE_DURATION';\nconst ANIMATION_STATE_OLD_LEADER_STILL_READABLE = 'ANIMATION_STATE_OLD_LEADER_STILL_READABLE';\nconst ANIMATION_STATE_OLD_LEASE_EXPIRES = 'ANIMATION_STATE_OLD_LEASE_EXPIRES';\nconst ANIMATION_STATE_TIMER_STARTED_ON_ORIGINAL_LEADER = \"ANIMATION_STATE_TIMER_STARTED_ON_ORIGINAL_LEADER\";\nconst ANIMATION_STATE_TIMER_STARTED_ON_NEW_LEADER = \"ANIMATION_STATE_TIMER_STARTED_ON_NEW_LEADER\";\nconst ANIMATION_STATE_POST_NEW_LEADER_VALUE2_COMMITTED = \"ANIMATION_STATE_POST_NEW_LEADER_VALUE2_COMMITTED\";\nconst ANIMATION_STATE_POST_NEW_LEADER_LOG_ACK_RECEIVED_FROM_FOLLOWER = \"ANIMATION_STATE_POST_NEW_LEADER_LOG_ACK_RECEIVED_FROM_FOLLOWER\";\nconst ANIMATION_STATE_NEW_LEADER_SENT_LEASES = \"ANIMATION_STATE_NEW_LEADER_SENT_LEASES\";\n\nconst SET_VALUE1=\"V1\";\nconst SET_VALUE2=\"V2\";\nconst ORIGINAL_LEADER_TIMER_DURATION = 16000;\nconst NODE_A_TIMER_DURATION = 14000;\nconst NODE_B_TIMER_DURATION = 30000;\n\nexport class LeaderLeaseAnimation extends Component {\n\tconstructor(props) {\n    super(props);\n    this.animationState = ANIMATION_STATE_INITIAL;\n\t\tthis.state = {\n\t\t}\n\t\tthis.init();\n\t}\n\tinit() {\n\t\tthis.nodeATimerAnimation = null;\n\t\tthis.nodeBTimerAnimation = null;\n\t\tthis.nodeCTimerAnimation = null;\n\t}\n\tcomponentDidMount() {\n\t\tthis.mainTextSect = document.getElementById('center-message-text');\n\t\tthis.timersAreActive = false;\n\t}\n\n\tpause() {\n\t\tif (this.timersAreActive) {\n\t\t\tthis.pauseTimers();\n\t\t}\n\t}\n\tresume() {\n\t\tif (this.timersAreActive) {\n\t\t\tthis.resumeTimers();\n\t\t}\n\t}\n\tonNext() {\n\t\treturn new Promise((resolve,reject) => {\n\t\t\tthis.onNextInternal(resolve,reject);\n\t\t});\n\t}\n\n\tonNextInternal(resolve,reject) {\n\t\t// Text Containers underneath each Node\n    const nodeATextContainer = document.getElementById('node-a-term-text-rect');\n    const nodeBTextContainer = document.getElementById('node-b-term-text-rect');\n    const nodeCTextContainer = document.getElementById('node-c-term-text-rect');\n    // Text Term (Line 1)\n    const nodeATermText = document.getElementById('node-a-term-text');\n    const nodeBTermText = document.getElementById('node-b-term-text');\n    const nodeCTermText = document.getElementById('node-c-term-text');\n    // Highlight for Text Term (Line 1) -> Only 2 needed\n    const nodeATermHighlight = document.getElementById('node-a-term-highlight');\n    const nodeBTermHighlight = document.getElementById('node-b-term-highlight');\n    // Text Extra (Line 2)\n    const nodeAExtraText = document.getElementById('node-a-extra-text');\n    const nodeBExtraText = document.getElementById('node-b-extra-text');\n    const nodeCExtraText = document.getElementById('node-c-extra-text');\n    // Highlight for Text Extra (Line 2)\n    const nodeAExtraHighlight = document.getElementById('node-a-text-highlight');\n    const nodeBExtraHighlight = document.getElementById('node-b-text-highlight');\n    const nodeCExtraHighlight = document.getElementById('node-c-text-highlight');\n    // Text Extra (Line 3)\n    const nodeAExtraText2 = document.getElementById('node-a-extra-text2');\n    const nodeBExtraText2 = document.getElementById('node-b-extra-text2');\n    const nodeCExtraText2 = document.getElementById('node-c-extra-text2'); \n\n    // MESSAGE OBJECTS\n    const nodeAMessageBubble = document.getElementById('node-a-message-bubble');\n    const nodeAMessageStatus = document.getElementById('node-a-message-status');\n    const nodeCMessageBubble = document.getElementById('node-c-message-bubble');\n    const nodeCMessageStatus = document.getElementById('node-c-message-status');\n\n    // Client\n    const clientMessageBubble = document.getElementById('client-message-bubble');\n    const clientQueryMessage = document.getElementById('client-query-message');\n    const clientMessageBackground = document.getElementById('client-message-status-bg');\n\n\t\tswitch(this.animationState) {\n\t\t\tcase ANIMATION_STATE_INITIAL: {\n\t\t\t\t//////////////////// initial setup ////////////////////\n\n\t\t\t\t// hide all outer circles (TODO: revisit this approach)\n\t\t\t\tvar nodeOuterCircles = document.getElementsByClassName('node-outer-circle');\n\t\t\t\tfor (var i = 0; i < nodeOuterCircles.length; i++){\n\t\t\t\t\tHelperFunctions.hideElement(nodeOuterCircles[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//////////////////////////////////////////////////////\n\t\t\t\tthis.changeMainText('Let\\'s say we have a 3-node raft group.<br />C is the raft leader, all nodes have data <br />k = V1', () => {\n          // make Node C  the leader\n          var nodeC = document.getElementById('node-c-circle');\n          nodeC.classList.add('leader-node');\n          HelperFunctions.showElement(nodeATextContainer);\n          HelperFunctions.showElement(nodeBTextContainer);\n          HelperFunctions.showElement(nodeCTextContainer);\n\n          nodeATermText.innerHTML = 'Term: 1';\n          nodeBTermText.innerHTML = 'Term: 1';\n          nodeCTermText.innerHTML = 'Term: 1';\n\n          nodeAExtraText.innerHTML = '(k, V1)';\n          nodeBExtraText.innerHTML = '(k, V1)';\n          nodeCExtraText.innerHTML = '(k, V1)';\n          this.animationState = ANIMATION_STATE_LEADER_READS_PROTOCOL;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n          });\n\t\t\t\t});\n\t\t\t\tbreak;\n      }\n      case ANIMATION_STATE_LEADER_READS_PROTOCOL: {\n        this.changeMainText('Performing raft-protocol, leader-only reads safely using leader leases', () => {\n          this.animationState = ANIMATION_STATE_START_LEADER_LEASE;\n          resolve({\n            animationState: this.animationState,\n            delay: 1000,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_START_LEADER_LEASE: {\n        this.changeMainText('');\n        HelperFunctions.showElement(nodeCMessageBubble);\n        HelperFunctions.showElement(nodeCMessageStatus);\n        const statusText1 = document.getElementById('node-c-message-status-text1');\n        const statusText2 = document.getElementById('node-c-message-status-text2');\n\n        const contentLine1 = {\n          index: 0,\n          str: 'Raft leader starts a'\n        }\n        const contentLine2 = {\n          index: 0,\n          str: 'new lease timer for itself.'\n        }\n        anime({\n          targets: contentLine1,\n          index: contentLine1.str.length,\n          easing: 'linear',\n          duration: 600,\n          update: function() {\n            statusText1.textContent = contentLine1.str.substr(0, contentLine1.index);\n          },\n          complete: () => {\n            anime({\n              targets: contentLine2,\n              index: contentLine2.str.length,\n              easing: 'linear',\n              duration: 600,\n              update: function() {\n                statusText2.textContent = contentLine2.str.substr(0, contentLine2.index);\n              },\n              complete: () => {\n                this.timersAreActive = true;\n                // this.nodeCTimerAnimation = HelperFunctions.startLeaseTimer(Constants.NODE_C, ORIGINAL_LEADER_TIMER_DURATION);\n                this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 3000, 90);\n                this.animationState = ANIMATION_STATE_LEADER_REPLICATES_LEASE;\n                resolve({\n                  animationState: this.animationState,\n                  delay: 100,\n                  asyncAnimation: true,\n                });\n              }\n            });\n          }\n        });\n        break;\n      }\n\t\t\tcase ANIMATION_STATE_LEADER_REPLICATES_LEASE: {\n\t\t\t\t// this.changeMainText('Leader replicates a lease interval to followers', () => {\n        HelperFunctions.hideElement(nodeCMessageBubble);\n        HelperFunctions.hideElement(nodeCMessageStatus);\n        HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n        const textAlt = document.getElementById('node-c-message-text-alt');\n        var leaseToA = document.getElementById('node-c-lease-to-node-a');\n        const content = {\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tstr: 'Raft leader then replicates a\\nlease interval to followers. Note\\nthe lease timer on C has started\\nbefore replicating to A and B.'\n        };\n\n        var nodeCTextAnimation = anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2500,\n          update: function() {\n            textAlt.innerText = content.str.substr(0, content.index);\n          }\n\t\t\t\t});\n        var nodeALeaseAnimation = anime({\n          targets: leaseToA,\n          translateX: -280,\n          translateY: 0,\n          easing: 'linear',\n          duration: 1500,\n          begin: () => {\n            HelperFunctions.showElement(leaseToA);\n          },\n          complete: () =>{\n            HelperFunctions.hideElement(leaseToA);\n            leaseToA.style.transform = 'none';\n          },\n        });\n\n        this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 5000, 60);\n\n        var leaseToB = document.getElementById('node-c-lease-to-node-b');\n        var nodeBLeaseAnimation = anime({\n          targets: leaseToB,\n          translateX: -150,\n          translateY: -280,\n          easing: 'linear',\n          duration: 1500,\n          begin: () => {\n            HelperFunctions.showElement(leaseToB);\n          },\n          complete: () =>{\n            HelperFunctions.hideElement(leaseToB);\n            leaseToB.style.transform = 'none';\n          },\n        });\n        Promise.all([nodeCTextAnimation.finished, nodeALeaseAnimation.finished,nodeBLeaseAnimation.finished, this.nodeCTimerAnimation]).then(() => {\n          this.nodeATimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_A, 3000, 85);\n          this.nodeBTimerAnimation = HelperFunctions.startLeaderLeaseTimer(Constants.NODE_B, 3000, 90);\n\n          this.animationState = ANIMATION_STATE_LEADER_LEASE_DURATION;\n          resolve({\n            animationState: this.animationState,\n            delay: 500,\n            asyncAnimation: true\n          });\n        });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_LEADER_LEASE_DURATION: {\n        HelperFunctions.hideElement(document.getElementById('node-c-message-bubble-alt'));\n        document.getElementById('node-c-message-text-alt').innerHTML = '';\n\n        this.changeMainText('Any new leader must wait out the existing Leader Lease duration before acquiring lease.', () => {\n          this.animationState = ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_ORIGINAL_LEADER_PARITIONED: {\n        this.changeMainText('Now suppose the original leader gets network partitioned', () => {\n          // partition original leader\n\t\t\t\t\tHelperFunctions.partitionNodeC();\n          this.animationState = ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_NEW_LEADER_CANDIDATE_ELECTED: {\n        this.changeMainText('');\n        HelperFunctions.showElement(nodeAMessageBubble);\n        HelperFunctions.showElement(document.getElementById('node-a-message-status-bg'));\n        const nodeAContent = {\n          index: 0,\n          str: 'A wins new leader election\\n but cannot perform any\\noperations until Leader\\nLease on A runs out.'\n        };\n\n        anime({\n          targets: nodeAContent,\n          index: nodeAContent.str.length,\n          easing: 'linear',\n          duration: 1500,\n          update: function() {\n            nodeAMessageStatus.innerText = nodeAContent.str.substr(0, nodeAContent.index);\n          },\n          complete: () => {\n            // elect Node A as new leader candidate\n            var nodeA = document.getElementById('node-a-circle');\n            nodeA.classList.add('leader-candidate-node');\n            HelperFunctions.setSVGText({targetId: 'node-a-term-text', text: \"Term: 2\"});\n            HelperFunctions.setSVGText({targetId: 'node-b-term-text', text: \"Term: 2\"});\n            HelperFunctions.showElement(nodeATermHighlight);\n            HelperFunctions.showElement(nodeBTermHighlight);\n            this.animationState = ANIMATION_STATE_CLIENT_UPDATE_FAILS;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n\t\t\t\t});\n        \n        break;\n      }\n\t\t\tcase ANIMATION_STATE_CLIENT_UPDATE_FAILS: {\n        HelperFunctions.hideElement(nodeAMessageBubble);\n        HelperFunctions.hideElement(document.getElementById('node-a-message-status-bg'));\n        nodeAMessageStatus.innerHTML = '';\n        HelperFunctions.hideElement(nodeATermHighlight);\n        HelperFunctions.hideElement(nodeBTermHighlight);\n\t\t\t\tthis.changeMainText('If client tries to write to A, operation is rejected..', () => {\n          HelperFunctions.introduceClient();\n          HelperFunctions.showElement(clientMessageBubble);\n          HelperFunctions.showElement(clientMessageBackground);\n          HelperFunctions.showElement(clientQueryMessage);\n          const clientContent1 = {\n            index: 0,\n            str: 'UPDATE T SET'\n          }\n          const clientContent2 = {\n            index: 0,\n            str: 'value = V2 WHERE'\n          }\n          const clientContent3 = {\n            index: 0,\n            str: ' key = k'\n          }\n          \n          const statusText1 = document.getElementById('client-query-message-text1');\n          const statusText2 = document.getElementById('client-query-message-text2');\n          const statusText3 = document.getElementById('client-query-message-text3');\n          anime({\n            targets: clientContent1,\n            index: clientContent1.str.length,\n            easing: 'linear',\n            duration: 400,\n            update: function() {\n              statusText1.textContent = clientContent1.str.substr(0, clientContent1.index);\n            },\n            complete: () => {\n              anime({\n                targets: clientContent2,\n                index: clientContent2.str.length,\n                easing: 'linear',\n                duration: 400,\n                update: function () {\n                  statusText2.textContent = clientContent2.str.substr(0, clientContent2.index);\n                },\n                complete: () => {\n                  anime({\n                    targets: clientContent3,\n                    index: clientContent3.str.length,\n                    easing: 'linear',\n                    duration: 400,\n                    update: function () {\n                      statusText3.textContent = clientContent3.str.substr(0, clientContent3.index);\n                    },\n                    complete: () => {\n                      var messageContrainerElement = document.getElementById('client-message');\n                      var messageElement = document.getElementById('client-message-circle');\n                      var messageTextElement = document.getElementById('client-message-text');\n                      HelperFunctions.messageFromClient(Constants.NODE_A,\t{\n                        onBegin: () => {\n                          HelperFunctions.showElement(messageContrainerElement);\n                          messageElement.classList.add('log-message');\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: ''});\n                        },\n                        onChangeComplete: () => {\n                          messageElement.classList.remove('log-message');\n                          messageElement.classList.add('error-message');\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: 'Rejected'});\n                          // messageTextElement\n                        },\n                        onComplete: () => {\n                          messageElement.classList.remove('error-message');\n                          HelperFunctions.hideElement(messageContrainerElement);\n                          messageContrainerElement.style.transform = 'none';\n                          HelperFunctions.setSVGText({targetId: 'client-message-text', text: ''});\n                        },\n                        alternate: true,\n                      });\n                      this.animationState = ANIMATION_STATE_OLD_LEADER_STILL_READABLE;\n                      resolve({\n                        animationState: this.animationState,\n                        delay: 100,\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          });\n        });\n        break;\n      }\n      case ANIMATION_STATE_OLD_LEADER_STILL_READABLE: {\n        this.changeMainText('');\n        HelperFunctions.hideElement(document.getElementById('client-query-message'));\n        const clientMessageStatus = document.getElementById('client-message-status');\n\n        const contentLine1 = {\n          index: 0,\n          str: 'Client can still read from C and get a valid response. Writes, however, are unavailable at this moment.'\n        };\n\n        anime({\n          targets: contentLine1,\n          index: contentLine1.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            clientMessageStatus.textContent = contentLine1.str.substr(0, contentLine1.index);\n          },\n          complete: () => {\n            this.animationState = ANIMATION_STATE_OLD_LEASE_EXPIRES;\n            resolve({\n              animationState: this.animationState,\n              delay: 100,\n            });\n          }\n        });\n       break;\n      }\n      case ANIMATION_STATE_OLD_LEASE_EXPIRES: {\n        HelperFunctions.showElement(document.getElementById('node-c-message-bubble-alt'));\n        const nodeCTextAlt = document.getElementById('node-c-message-text-alt');\n        const content = {\n          index: 0,\n          str: 'Leader Lease of C will run out\\nfirst [since it started first]. \\nC now steps down as leader.'\n        };\n        this.nodeCTimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_C, 6000);\n\n        anime({\n          targets: content,\n          index: content.str.length,\n          easing: 'linear',\n          duration: 2000,\n          update: function() {\n            nodeCTextAlt.textContent = content.str.substr(0, content.index);\n          },\n        });\n        this.nodeCTimerAnimation.finished.then(() => {\n          var nodeC = document.getElementById('node-c-circle');\n          nodeC.classList.remove('leader-node');\n          this.animationState = ANIMATION_STATE_NEW_LEADER_ELECTED;\n          resolve({\n            animationState: this.animationState,\n            delay: 100,\n          });\n        });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_NEW_LEADER_ELECTED: {\n\t\t\t\t// hide Node A's leader lease timer\n\t\t\t\tHelperFunctions.hideElement(document.getElementById(HelperFunctions.leaderLeaseTimerId(Constants.NODE_A)));\n\n\t\t\t\t// and start its my lease timer\n\t\t\t\tthis.nodeATimerAnimation = HelperFunctions.startMyLeaseTimer(Constants.NODE_A, NODE_A_TIMER_DURATION);\n\n\t\t\t\t// then send leader lease message to B\n\t\t\t\tvar leaseToB = document.getElementById('node-a-lease-to-node-b');\n\t\t\t\tvar nodeBLeaseAnimation = anime({\n\t\t\t\t\ttargets: leaseToB,\n\t\t\t\t\ttranslateX: 150,\n\t\t\t\t\ttranslateY: -280,\n\t\t\t\t\teasing: 'linear',\n\t\t\t\t\tduration: 1500,\n\t\t\t\t\tbegin: () => {\n\t\t\t\t\t\tHelperFunctions.showElement(leaseToB);\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\tHelperFunctions.hideElement(leaseToB);\n\t\t\t\t\t\tleaseToB.style.transform = 'none';\n\n\t\t\t\t\t\tthis.nodeBTimerAnimation.restart();\n\t\t\t\t\t\tthis.animationState = ANIMATION_STATE_NEW_LEADER_SENT_LEASES;\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ANIMATION_STATE_NEW_LEADER_SENT_LEASES: {\n\t\t\t\tthis.changeMainText(\"From here on, client can write messages to the new leader\", () => {\n\t\t\t\t\t// initiate a raft round\n\t\t\t\t\t\n\t\t\t\t\t// client message to A\n\t\t\t\t\tvar animation = HelperFunctions.sendLogMessage(Constants.CLIENT_NODE, Constants.NODE_A, false, false, HelperFunctions.getSetValueText(SET_VALUE2), false, 0);\n\n\t\t\t\t\tanimation.finished.then(() => {\n\t\t\t\t\t\t// message with ack from A to B\n\t\t\t\t\t\tvar messageToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, true, false, HelperFunctions.getSetValueText(SET_VALUE2), false, 0, this.nodeBTimerAnimation, this.nodeATimerAnimation);\n\n\t\t\t\t\t\tmessageToBAnimation.finished.then(() => {\n\n\t\t\t\t\t\t\t// confirmation message back to B and the client\n\t\t\t\t\t\t\tvar confirmToClientAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.CLIENT_NODE, false, false, HelperFunctions.getSetValueText(SET_VALUE2), 0);\n\t\t\t\t\t\t\tvar confirmToBAnimation = HelperFunctions.sendLogMessage(Constants.NODE_A, Constants.NODE_B, false, false, HelperFunctions.getSetValueText(SET_VALUE2), true, 300, this.nodeBTimerAnimation);\n\n\t\t\t\t\t\t\tPromise.all([confirmToClientAnimation.finished, confirmToBAnimation.finished]).then(() => {\n\n                this.animationState = Constants.ANIMATION_STATE_FINISHED;\n                this.stopTimers();\n                this.setState({ animationFinished: true });\n\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\t\t\t\t\tdelay: 100,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Constants.ANIMATION_STATE_FINISHED: {\n\t\t\t\tconsole.log('Animation finished. Nothing to do');\n\t\t\t\tresolve({\n\t\t\t\t\tanimationState: this.animationState,\n\t\t\t\t\tdelay: 100,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.error('Unrecognized state: ' + this.animationState);\n\t\t}\n\t}\n\tchangeMainText(text, onComplete, delay) {\n\t\tHelperFunctions.setTextWithAnimation(this.mainTextSect, text, onComplete, delay);\n\t}\n\trestartTimers() {\n\t\tif (this.nodeATimerAnimation) {\n\t\t\tthis.nodeATimerAnimation.restart();\n\t\t}\n\t\tif (this.nodeBTimerAnimation) {\n\t\t\tthis.nodeBTimerAnimation.restart();\n\t\t}\n\t\tif (this.nodeCTimerAnimation) {\n\t\t\tthis.nodeCTimerAnimation.restart();\n\t\t}\n\t}\n\tstopTimers() {\n\t\tthis.timersAreActive = false;\n\t\tthis.pauseTimers();\n\t}\n\tpauseTimers() {\n\t\tif (this.nodeATimerAnimation) {\n\t\t\tthis.nodeATimerAnimation.pause();\n\t\t}\n\t\tif (this.nodeBTimerAnimation) {\n\t\t\tthis.nodeBTimerAnimation.pause();\n\t\t}\n\t\tif (this.nodeCTimerAnimation) {\n\t\t\tthis.nodeCTimerAnimation.pause();\n\t\t}\n\t}\n\tresumeTimers() {\n\t\tif (this.nodeATimerAnimation) {\n\t\t\tthis.nodeATimerAnimation.play();\n\t\t}\n\t\tif (this.nodeBTimerAnimation) {\n\t\t\tthis.nodeBTimerAnimation.play();\n\t\t}\n\t\tif (this.nodeCTimerAnimation) {\n\t\t\tthis.nodeCTimerAnimation.play();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div id=\"main-diagram\" >\n\t\t\t\t\t<MainDiagram/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"main-text-sect\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LeaderLeaseAnimation;\n"]},"metadata":{},"sourceType":"module"}